<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>ArgumentParser.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ArgumentParser_8cpp</filename>
    <includes id="ArgumentParser_8h" name="ArgumentParser.h" local="yes" imported="no">ArgumentParser.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>ArgumentParser.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ArgumentParser_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="struct">libcomp::ArgumentParser::Argument</class>
    <class kind="class">libcomp::ArgumentParser</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>BaseServer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>BaseServer_8cpp</filename>
    <includes id="BaseServer_8h" name="BaseServer.h" local="yes" imported="no">BaseServer.h</includes>
    <includes id="DataFile_8h" name="DataFile.h" local="no" imported="no">DataFile.h</includes>
    <includes id="DatabaseMariaDB_8h" name="DatabaseMariaDB.h" local="no" imported="no">DatabaseMariaDB.h</includes>
    <includes id="DatabaseSQLite3_8h" name="DatabaseSQLite3.h" local="no" imported="no">DatabaseSQLite3.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="no" imported="no">Crypto.h</includes>
    <includes id="Log_8h" name="Log.h" local="no" imported="no">Log.h</includes>
    <includes id="MemoryManager_8h" name="MemoryManager.h" local="no" imported="no">MemoryManager.h</includes>
    <includes id="MessageInit_8h" name="MessageInit.h" local="no" imported="no">MessageInit.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="no" imported="no">ScriptEngine.h</includes>
    <includes id="ServerCommandLineParser_8h" name="ServerCommandLineParser.h" local="no" imported="no">ServerCommandLineParser.h</includes>
    <includes id="ServerConstants_8h" name="ServerConstants.h" local="no" imported="no">ServerConstants.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>BaseServer.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>BaseServer_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="EncryptedConnection_8h" name="EncryptedConnection.h" local="yes" imported="no">EncryptedConnection.h</includes>
    <includes id="TcpServer_8h" name="TcpServer.h" local="yes" imported="no">TcpServer.h</includes>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">TimerManager.h</includes>
    <includes id="Worker_8h" name="Worker.h" local="yes" imported="no">Worker.h</includes>
    <class kind="class">libcomp::BaseServer</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>BinaryDataSet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>BinaryDataSet_8cpp</filename>
    <includes id="BinaryDataSet_8h" name="BinaryDataSet.h" local="yes" imported="no">BinaryDataSet.h</includes>
  </compound>
  <compound kind="file">
    <name>BinaryDataSet.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>BinaryDataSet_8h</filename>
    <includes id="Object_8h" name="Object.h" local="no" imported="no">Object.h</includes>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <class kind="class">libcomp::BinaryDataSet</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ChannelConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ChannelConnection_8cpp</filename>
    <includes id="ChannelConnection_8h" name="ChannelConnection.h" local="yes" imported="no">ChannelConnection.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ChannelConnection_8h</filename>
    <includes id="EncryptedConnection_8h" name="EncryptedConnection.h" local="yes" imported="no">EncryptedConnection.h</includes>
    <class kind="class">libcomp::ChannelConnection</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Child.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Child_8cpp</filename>
    <includes id="Child_8h" name="Child.h" local="yes" imported="no">Child.h</includes>
    <member kind="function" static="yes">
      <type>static pid_t</type>
      <name>CreateProcess</name>
      <anchorfile>Child_8cpp.html</anchorfile>
      <anchor>aba78a9af9c395270de8be075c5c98e62</anchor>
      <arglist>(const char *szProgram, char *const szArguments[], bool redirectOutput=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static pid_t</type>
      <name>CreateProcess</name>
      <anchorfile>Child_8cpp.html</anchorfile>
      <anchor>af0daa44136e1004390927b47abdbb10a</anchor>
      <arglist>(const std::string &amp;program, const std::list&lt; std::string &gt; &amp;arguments, bool redirectOutput=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Child.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Child_8h</filename>
    <class kind="class">libcomp::Child</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Compress.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Compress_8cpp</filename>
    <includes id="Compress_8h" name="Compress.h" local="yes" imported="no">Compress.h</includes>
  </compound>
  <compound kind="file">
    <name>Compress.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Compress_8h</filename>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Compress</namespace>
    <member kind="function">
      <type>int32_t</type>
      <name>Compress</name>
      <anchorfile>namespacelibcomp_1_1Compress.html</anchorfile>
      <anchor>ad9f8ecb356f874ef3ee2518234e12b8a</anchor>
      <arglist>(void *pIn, void *pOut, int32_t inSize, int32_t outSize, int32_t compressionLevel=-1)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Decompress</name>
      <anchorfile>namespacelibcomp_1_1Compress.html</anchorfile>
      <anchor>ae8c3838cad938cfcad0da54ebea5e8e7</anchor>
      <arglist>(void *pIn, void *pOut, int32_t inSize, int32_t outSize)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Config.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Config_8cpp</filename>
    <includes id="Config_8h" name="Config.h" local="yes" imported="no">Config.h</includes>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Config</namespace>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_IV</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a842abe352138c42cd859e9f4a9aa0ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_KEY</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a9365572eacd52fb8db65d878c7a744c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_MAGIC</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a475501f783db93c1fee5fd471b45420a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Config.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Config_8h</filename>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Config</namespace>
    <member kind="function">
      <type>void</type>
      <name>LogVersion</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a16324002acea156d766260a7df69b041</anchor>
      <arglist>(const char *szServerName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConnectionMessage.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ConnectionMessage_8h</filename>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::ConnectionMessage</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionMessageType</name>
      <anchorfile>namespacelibcomp_1_1Message.html</anchorfile>
      <anchor>a6216a7d546bf04641027b3b0eb205692</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692ac2fa38340b1ae9f046c1e15c46a29fb4">CONNECTION_MESSAGE_ENCRYPTED</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692a1de154d67a5b2573bb93db7cc5ba40b8">CONNECTION_MESSAGE_CONNECTION_CLOSED</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692afaf4889ac7178dd2a459437d6b6b721a">CONNECTION_MESSAGE_WORLD_NOTIFICATION</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>src/Convert.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>src_2Convert_8cpp</filename>
    <includes id="Convert_8h" name="Convert.h" local="yes" imported="no">Convert.h</includes>
    <includes id="Endian_8h" name="Endian.h" local="yes" imported="no">Endian.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="LookupTableCP1252_8h" name="LookupTableCP1252.h" local="yes" imported="no">LookupTableCP1252.h</includes>
    <includes id="LookupTableCP932_8h" name="LookupTableCP932.h" local="yes" imported="no">LookupTableCP932.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ARRAY_SIZE</name>
      <anchorfile>src_2Convert_8cpp.html</anchorfile>
      <anchor>a3c7c6a69f690fc8d2abf0e385280a532</anchor>
      <arglist>(arr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>FromCP1252Encoding</name>
      <anchorfile>src_2Convert_8cpp.html</anchorfile>
      <anchor>ad46a8859d4eef607b7b104ab9e4b6ff8</anchor>
      <arglist>(const uint8_t *szString, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>FromCP932Encoding</name>
      <anchorfile>src_2Convert_8cpp.html</anchorfile>
      <anchor>a3477930b458a58fb1496f2135b9e2045</anchor>
      <arglist>(const uint8_t *szString, int size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; char &gt;</type>
      <name>ToCP1252Encoding</name>
      <anchorfile>src_2Convert_8cpp.html</anchorfile>
      <anchor>a088b0cdfcc7f38358da201285a3475e8</anchor>
      <arglist>(const String &amp;str, bool nullTerminator=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; char &gt;</type>
      <name>ToCP932Encoding</name>
      <anchorfile>src_2Convert_8cpp.html</anchorfile>
      <anchor>ac2f35650c4ae9dbbc50147e6435e6857</anchor>
      <arglist>(const String &amp;str, bool nullTerminator=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tests/Convert.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>tests_2Convert_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Convert_8h" name="Convert.h" local="no" imported="no">Convert.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>tests_2Convert_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Convert_8cpp.html</anchorfile>
      <anchor>add42126fe9838c6c7c158e8b50b0b492</anchor>
      <arglist>(String, CP1252)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Convert_8cpp.html</anchorfile>
      <anchor>a02fbac56c219cd3c8d8e0a81b5d62e8d</anchor>
      <arglist>(String, CP932)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Convert.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Convert_8h</filename>
    <includes id="CString_8h" name="CString.h" local="no" imported="no">CString.h</includes>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Convert</namespace>
    <member kind="enumeration">
      <type></type>
      <name>Encoding_t</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_UTF8</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a439ee39e30ecd2cb6dfec4020697eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_CP932</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a742723f1c461b21f8f2bb7b22a5daa9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_CP1252</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a6300d588c68110542a73631d1f66589c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>FromEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>af3da32a9f8d267a0728a6c54985cf70a</anchor>
      <arglist>(Encoding_t encoding, const char *szString, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>FromEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>a7f8ae52e500110bcfaa1fa94c762d3b1</anchor>
      <arglist>(Encoding_t encoding, const std::vector&lt; char &gt; &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>SizeEncoded</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>a41f45b500fe7c0e55bf4176eb482b1ae</anchor>
      <arglist>(Encoding_t encoding, const String &amp;str, size_t align=0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>aebc43605eff0977a22b2a51993ffd864</anchor>
      <arglist>(Encoding_t encoding, const String &amp;str, bool nullTerminator=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>src/Crypto.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>src_2Crypto_8cpp</filename>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Config_8h" name="Config.h" local="yes" imported="no">Config.h</includes>
    <includes id="Endian_8h" name="Endian.h" local="yes" imported="no">Endian.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <includes id="Platform_8h" name="Platform.h" local="yes" imported="no">Platform.h</includes>
    <includes id="CryptSupport_8h" name="CryptSupport.h" local="yes" imported="no">CryptSupport.h</includes>
    <class kind="struct">libcomp::Crypto::BlowfishPrivate</class>
    <class kind="struct">libcomp::Crypto::DiffieHellmanPrivate</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Crypto</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INITIALIZER</name>
      <anchorfile>src_2Crypto_8cpp.html</anchorfile>
      <anchor>a8e1958511f31a98a5bb11bc7e34d7696</anchor>
      <arglist>(f)</arglist>
    </member>
    <member kind="function">
      <type>struct</type>
      <name>__attribute__</name>
      <anchorfile>src_2Crypto_8cpp.html</anchorfile>
      <anchor>ab898071398b359603a35c202e9c65f3b</anchor>
      <arglist>((packed))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>GetDiffieHellmanPrime</name>
      <anchorfile>src_2Crypto_8cpp.html</anchorfile>
      <anchor>a2e265950c5a897e0c0b8b36e3980f9e3</anchor>
      <arglist>(const DH *pDiffieHellman)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>INITIALIZER</name>
      <anchorfile>src_2Crypto_8cpp.html</anchorfile>
      <anchor>acc2a6146b2cbb80c07da1c8dcd20bb3c</anchor>
      <arglist>(InitDecrypt)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>EncryptedFileHeader_t</name>
      <anchorfile>src_2Crypto_8cpp.html</anchorfile>
      <anchor>afa44908c7adf6665f382d39bfe10ee12</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tests/Crypto.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>tests_2Crypto_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Config_8h" name="Config.h" local="no" imported="no">Config.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="no" imported="no">Crypto.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="no" imported="no">Exception.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEMP_FILE</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a36a80c131741cff6ece229cec881836b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a854389efc13106e9512dbe158aa90474</anchor>
      <arglist>(GenerateRandom, DefaultsTo80Digits)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a346d0533dfc76de3c11a0e2b833ecaac</anchor>
      <arglist>(GenerateRandom, OddOutputGeneratesError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a5a9b629504a0f0c0e456304eb8d9731a</anchor>
      <arglist>(GenerateRandom, OutputIsHex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>aeea65aa6a1c5ae353ef43722b16708cf</anchor>
      <arglist>(GenerateRandom, OutputChanges)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>adb9e6ecb9c727b94aa9a64690e692bd4</anchor>
      <arglist>(GenerateRandom, SpecificLengthEqualsOutput)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a39cb02d288882b5e5198e9a990172676</anchor>
      <arglist>(GenerateRandom, NegativeOrZeroReturnsDefault)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a6f4572dd1ae00e491dd5a08aee61b48a</anchor>
      <arglist>(GenerateSessionKey, ValueIsNotNegative)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a544f263881a1eb301e4f6999ef71accd</anchor>
      <arglist>(GenerateSessionKey, ValueChangesBetweenCalls)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a837c0cf2ff66ceb744b14628de3b6f19</anchor>
      <arglist>(Decrypt, LoadFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a5ab1820a590d85a325e51c1b96837638</anchor>
      <arglist>(GenDiffieHellman, EmptyArgsReturnError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>adaefed5f2530c35395572ee1b45c50da</anchor>
      <arglist>(GenDiffieHellman, BadArgsReturnError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a9fce0cfacc34ad2652f5f322d7dfd156</anchor>
      <arglist>(GenDiffieHellman, ReturnsCorrectAnswer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a73ecdfab201cade168b3744b71e04ac9</anchor>
      <arglist>(GenDiffieHellman, PaddingWorks)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>ac9b4b66e5c1ae7e09911606e4e308c94</anchor>
      <arglist>(EncryptDecrypt, File)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>afd67a0f88847740899dc32fe3a2756ae</anchor>
      <arglist>(Hash, Password)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a813e1d57ee9571b320e4cc65466195b9</anchor>
      <arglist>(Hash, SHA1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Crypto_8cpp.html</anchorfile>
      <anchor>a33ec9f635f422d852a544717d9a4b883</anchor>
      <arglist>(Hash, MD5)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Crypto.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Crypto_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::Crypto::Blowfish</class>
    <class kind="class">libcomp::Crypto::DiffieHellman</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Crypto</namespace>
    <member kind="function">
      <type>bool</type>
      <name>DecryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a21775fd26248b13b4c329ce5d6076563</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>DecryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a6ca565e7f4accd1cccb595a7286e9092</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a90e8c308bbb9a7e41387389bbe556a8b</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a94f643e4b6bda36e13e061a0266cd4f8</anchor>
      <arglist>(const std::string &amp;path, const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GenDiffieHellman</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a090ae17a8f50fee1b2ba207976107ce4</anchor>
      <arglist>(const String &amp;g, const String &amp;p, const String &amp;a, int outputSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GenerateRandom</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a06a91dfe7c2b8a38cbfacdec34b18ecb</anchor>
      <arglist>(int sz=-1)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GenerateSessionKey</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>af7aa1a00c77b80e1cb8ecf4199a02a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>HashPassword</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ae99a236cdba9f951465ad3959dffb75c</anchor>
      <arglist>(const String &amp;password, const String &amp;salt)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>LoadFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a22253ea28776e9bfdeb63c43cd233f1f</anchor>
      <arglist>(const std::string &amp;path, int requestedSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>MD5</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ad072f0e4cc4b6c792602539bc9807caa</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>SHA1</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ac4d3e0b99789afef39dd860339d8a547</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="variable">
      <type>const std::size_t</type>
      <name>BLOWFISH_BLOCK_SIZE</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2765e02af07d8f628f6e5e93d4c95b74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CryptSupport.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>CryptSupport_8h</filename>
    <member kind="function" static="yes">
      <type>static const BIGNUM *</type>
      <name>DH_get0_g</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a4e73408b31a6d0b74662b366f75a8523</anchor>
      <arglist>(const DH *dh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DH_get0_key</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a63806b72183e74b8104bcbcbfd2cdef4</anchor>
      <arglist>(const DH *dh, const BIGNUM **pub_key, const BIGNUM **priv_key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BIGNUM *</type>
      <name>DH_get0_p</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a4986bc63bdef050801da6bf7d60dbba4</anchor>
      <arglist>(const DH *dh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>DH_get0_pqg</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a9f24602c5ab38c13b3425286c1ba27b5</anchor>
      <arglist>(const DH *dh, const BIGNUM **p, const BIGNUM **q, const BIGNUM **g)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BIGNUM *</type>
      <name>DH_get0_priv_key</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a58fb95bd81078f4b3add6fd7ff49ef99</anchor>
      <arglist>(const DH *dh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BIGNUM *</type>
      <name>DH_get0_pub_key</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>af1defcba10fbad072041c95041f6bb92</anchor>
      <arglist>(const DH *dh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const BIGNUM *</type>
      <name>DH_get0_q</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a9739f87843ebae19d81a2ea90d890d22</anchor>
      <arglist>(const DH *dh)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DH_set0_key</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>abae9b160a4437b0625d96e33850de785</anchor>
      <arglist>(DH *dh, BIGNUM *pub_key, BIGNUM *priv_key)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DH_set0_pqg</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>abd94fa6220b52962b2ea77081ef5e5ea</anchor>
      <arglist>(DH *dh, BIGNUM *p, BIGNUM *q, BIGNUM *g)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>DH_set_length</name>
      <anchorfile>CryptSupport_8h.html</anchorfile>
      <anchor>a0497de31b647ce9e7c449444c6878603</anchor>
      <arglist>(DH *dh, long length)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CString.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>CString_8cpp</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">String::StringData</class>
  </compound>
  <compound kind="file">
    <name>CString.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>CString_8h</filename>
    <class kind="struct">std::hash&lt; libcomp::String &gt;</class>
    <class kind="class">libcomp::String</class>
    <namespace>libcomp</namespace>
    <namespace>std</namespace>
  </compound>
  <compound kind="file">
    <name>src/Database.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>src_2Database_8cpp</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="BaseServer_8h" name="BaseServer.h" local="yes" imported="no">BaseServer.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>tests/Database.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>tests_2Database_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="DatabaseSQLite3_8h" name="DatabaseSQLite3.h" local="no" imported="no">DatabaseSQLite3.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>tests_2Database_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Database_8cpp.html</anchorfile>
      <anchor>afc3dbcb5926a2ef179d3e7f3aaf0a7b3</anchor>
      <arglist>(SQLite3, OpenCloseDatabase)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Database.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Database_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="DatabaseQuery_8h" name="DatabaseQuery.h" local="yes" imported="no">DatabaseQuery.h</includes>
    <includes id="DatabaseChangeSet_8h" name="DatabaseChangeSet.h" local="yes" imported="no">DatabaseChangeSet.h</includes>
    <includes id="PersistentObject_8h" name="PersistentObject.h" local="yes" imported="no">PersistentObject.h</includes>
    <class kind="class">libcomp::Database</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseBind.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseBind_8cpp</filename>
    <includes id="DatabaseBind_8h" name="DatabaseBind.h" local="yes" imported="no">DatabaseBind.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
  </compound>
  <compound kind="file">
    <name>DatabaseBind.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseBind_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::DatabaseBind</class>
    <class kind="class">libcomp::DatabaseBindBigInt</class>
    <class kind="class">libcomp::DatabaseBindBlob</class>
    <class kind="class">libcomp::DatabaseBindBool</class>
    <class kind="class">libcomp::DatabaseBindDouble</class>
    <class kind="class">libcomp::DatabaseBindFloat</class>
    <class kind="class">libcomp::DatabaseBindInt</class>
    <class kind="class">libcomp::DatabaseBindText</class>
    <class kind="class">libcomp::DatabaseBindUUID</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseChangeSet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseChangeSet_8cpp</filename>
    <includes id="DatabaseChangeSet_8h" name="DatabaseChangeSet.h" local="yes" imported="no">DatabaseChangeSet.h</includes>
    <includes id="DatabaseBind_8h" name="DatabaseBind.h" local="yes" imported="no">DatabaseBind.h</includes>
    <namespace>libcomp</namespace>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79cce8c37467b57fa0878c88f17ade16</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac186379bcff09a602a7c25063a2481fa</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a970878719e0106f0e67b47ff49ec41f2</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value, libcomp::String expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6083d3788dcaecb3851340467658d783</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value, libobjgen::UUID expected)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt32Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a3cc8ff7334c57b39376e2f9c7a7a5271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt64Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad23f032a5d4228b97b4787845267f33d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseChangeSet.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseChangeSet_8h</filename>
    <includes id="PersistentObject_8h" name="PersistentObject.h" local="yes" imported="no">PersistentObject.h</includes>
    <class kind="class">libcomp::DatabaseChangeSet</class>
    <class kind="class">libcomp::DBExplicitUpdate</class>
    <class kind="class">libcomp::DBOperationalChange</class>
    <class kind="class">libcomp::DBOperationalChangeSet</class>
    <class kind="class">libcomp::DBStandardChangeSet</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseMariaDB.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseMariaDB_8cpp</filename>
    <includes id="DatabaseMariaDB_8h" name="DatabaseMariaDB.h" local="yes" imported="no">DatabaseMariaDB.h</includes>
    <includes id="BaseServer_8h" name="BaseServer.h" local="yes" imported="no">BaseServer.h</includes>
    <includes id="DatabaseBind_8h" name="DatabaseBind.h" local="yes" imported="no">DatabaseBind.h</includes>
    <includes id="DatabaseQueryMariaDB_8h" name="DatabaseQueryMariaDB.h" local="yes" imported="no">DatabaseQueryMariaDB.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>bool</name>
      <anchorfile>DatabaseMariaDB_8cpp.html</anchorfile>
      <anchor>abb452686968e48b67397da5f97445f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::String</type>
      <name>ConnectionString</name>
      <anchorfile>DatabaseMariaDB_8cpp.html</anchorfile>
      <anchor>ad3f028c7e9b06bf4736f13f3862f1f50</anchor>
      <arglist>(MYSQL *pConnection)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseMariaDB.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseMariaDB_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <class kind="class">libcomp::DatabaseMariaDB</class>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>struct st_mysql</type>
      <name>MYSQL</name>
      <anchorfile>DatabaseMariaDB_8h.html</anchorfile>
      <anchor>a82a6dc0dbc8c1a28b48de904614e0088</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseQuery.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQuery_8cpp</filename>
    <includes id="DatabaseQuery_8h" name="DatabaseQuery.h" local="yes" imported="no">DatabaseQuery.h</includes>
  </compound>
  <compound kind="file">
    <name>DatabaseQuery.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQuery_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::DatabaseQuery</class>
    <class kind="class">libcomp::DatabaseQueryImpl</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseQueryMariaDB.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQueryMariaDB_8cpp</filename>
    <includes id="DatabaseQueryMariaDB_8h" name="DatabaseQueryMariaDB.h" local="yes" imported="no">DatabaseQueryMariaDB.h</includes>
    <includes id="DatabaseMariaDB_8h" name="DatabaseMariaDB.h" local="yes" imported="no">DatabaseMariaDB.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>bool</name>
      <anchorfile>DatabaseQueryMariaDB_8cpp.html</anchorfile>
      <anchor>abb452686968e48b67397da5f97445f5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::String</type>
      <name>ConnectionString</name>
      <anchorfile>DatabaseQueryMariaDB_8cpp.html</anchorfile>
      <anchor>a3a857b7d55d34ef596b539b2d379a52d</anchor>
      <arglist>(void *pConnection)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::String</type>
      <name>GetLastError</name>
      <anchorfile>DatabaseQueryMariaDB_8cpp.html</anchorfile>
      <anchor>a0abce13bf76d5d3e14f89edb638b1a09</anchor>
      <arglist>(MYSQL *connection)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseQueryMariaDB.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQueryMariaDB_8h</filename>
    <includes id="DatabaseQuery_8h" name="DatabaseQuery.h" local="yes" imported="no">DatabaseQuery.h</includes>
    <class kind="class">libcomp::DatabaseQueryMariaDB</class>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>struct st_mysql</type>
      <name>MYSQL</name>
      <anchorfile>DatabaseQueryMariaDB_8h.html</anchorfile>
      <anchor>a82a6dc0dbc8c1a28b48de904614e0088</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct st_mysql_bind</type>
      <name>MYSQL_BIND</name>
      <anchorfile>DatabaseQueryMariaDB_8h.html</anchorfile>
      <anchor>ae6fa22af53cb8f1c94572aa23ab9bb97</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct st_mysql_stmt</type>
      <name>MYSQL_STMT</name>
      <anchorfile>DatabaseQueryMariaDB_8h.html</anchorfile>
      <anchor>a1d5e9e153315a6f0dcbfe4baafd84132</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DatabaseQuerySQLite3.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQuerySQLite3_8cpp</filename>
    <includes id="DatabaseQuerySQLite3_8h" name="DatabaseQuerySQLite3.h" local="yes" imported="no">DatabaseQuerySQLite3.h</includes>
    <includes id="DatabaseSQLite3_8h" name="DatabaseSQLite3.h" local="yes" imported="no">DatabaseSQLite3.h</includes>
  </compound>
  <compound kind="file">
    <name>DatabaseQuerySQLite3.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseQuerySQLite3_8h</filename>
    <includes id="DatabaseQuery_8h" name="DatabaseQuery.h" local="yes" imported="no">DatabaseQuery.h</includes>
    <class kind="class">libcomp::DatabaseQuerySQLite3</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DatabaseSQLite3.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseSQLite3_8cpp</filename>
    <includes id="DatabaseSQLite3_8h" name="DatabaseSQLite3.h" local="yes" imported="no">DatabaseSQLite3.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="DatabaseBind_8h" name="DatabaseBind.h" local="yes" imported="no">DatabaseBind.h</includes>
    <includes id="DatabaseQuerySQLite3_8h" name="DatabaseQuerySQLite3.h" local="yes" imported="no">DatabaseQuerySQLite3.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>DatabaseSQLite3.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DatabaseSQLite3_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <class kind="class">libcomp::DatabaseSQLite3</class>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>struct sqlite3</type>
      <name>sqlite3</name>
      <anchorfile>DatabaseSQLite3_8h.html</anchorfile>
      <anchor>a0ef6f2646262c8a9b24368d8ac140f69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DataFile.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataFile_8cpp</filename>
    <includes id="DataFile_8h" name="DataFile.h" local="yes" imported="no">DataFile.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>DataFile.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataFile_8h</filename>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <class kind="class">libcomp::DataFile</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DataStore.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataStore_8cpp</filename>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="DataFile_8h" name="DataFile.h" local="yes" imported="no">DataFile.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DataStore.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataStore_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::DataStore</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DataSyncManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataSyncManager_8cpp</filename>
    <includes id="DataSyncManager_8h" name="DataSyncManager.h" local="yes" imported="no">DataSyncManager.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <includes id="PacketCodes_8h" name="PacketCodes.h" local="yes" imported="no">PacketCodes.h</includes>
    <includes id="PersistentObject_8h" name="PersistentObject.h" local="yes" imported="no">PersistentObject.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DataSyncManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DataSyncManager_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="InternalConnection_8h" name="InternalConnection.h" local="yes" imported="no">InternalConnection.h</includes>
    <class kind="class">libcomp::DataSyncManager</class>
    <class kind="class">libcomp::DataSyncManager::ObjectConfig</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DayCare.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DayCare_8cpp</filename>
    <includes id="DayCare_8h" name="DayCare.h" local="yes" imported="no">DayCare.h</includes>
    <includes id="SpawnThread_8h" name="SpawnThread.h" local="yes" imported="no">SpawnThread.h</includes>
    <includes id="WatchThread_8h" name="WatchThread.h" local="yes" imported="no">WatchThread.h</includes>
  </compound>
  <compound kind="file">
    <name>DayCare.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DayCare_8h</filename>
    <includes id="Child_8h" name="Child.h" local="yes" imported="no">Child.h</includes>
    <class kind="class">libcomp::DayCare</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DefinitionManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DefinitionManager_8cpp</filename>
    <includes id="DefinitionManager_8h" name="DefinitionManager.h" local="yes" imported="no">DefinitionManager.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiAIData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4ba933e2ce55bec5e0123a23963d780a</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiBlendData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a13c720db22f4fa0c74ea63ba2c4db0c1</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiBlendExtData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a23ed1498e758d6449feacfae1468a838</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCHouraiData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a69034d2b6a74b54a2df49b126a14d0b7</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5f0a1b1ea05439406aa9ab4d402f4727</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCultureItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a20ec40214d6639693b8d4f907f1b0de9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBookData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4d5c1f774fb24bf28089eaf97d9191ab</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a058616deb3fff165a7cf72f1dd45ab41</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostExtraData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae582f92508f79613dcf09c5f86023411</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aeb8f446ac33e68d501120f404ca2f155</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostLotData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a94b0d6c24010fbec468cc716a2fbc117</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>adea22bfdf35153b5128b58eccf8deee7</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilEquipmentData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6a98d7d92271c1d40cbecd04be8cf554</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilEquipmentItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aea61a4f8e0040fb05ad7a3a3bf4e36a9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilFusionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a583fda8cbcec5e108a2b717d328d43fb</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilLVUpRateData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab2e160118903e186ed02ec94ade4181c</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDisassemblyData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a83f61c6c0e158ca9aac5719df6f3d400</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDisassemblyTriggerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0c02a60a87cf206b329c9ce7846c2087</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDynamicMapData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a014c721f424402e588dc5ef36acc8c85</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiEnchantData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad5066ded67690a05f4a74f09c96e38e9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiEquipmentSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac618d10cddbda2ed19c434b63ac0cb88</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiExchangeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a46a996df085608cd463d2557aa1991bb</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiExpertData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6aa17ecc0aa43b7146e8977f3785809f</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianAssistData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aa151b139359c36a34ce4a1360e7ad584</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianLevelData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a47559e2394ecd18339b1e90694e4f2d5</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac4dffee98cd3980c5fd59f81844c5c13</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianUnlockData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac5545bcdaec45e8634a4a2683613f4e6</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiHNPCData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a866227fa7bb18070d2fddbf866a92a1b</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab8963783ea80aa6ba1277162e3347b8d</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMissionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aa79c9307ba36e1e6529245ad3b696df0</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaReunionBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a318c646957ec6e0b65b74441c4bd083e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaReunionSetBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0df56f1306ae531a8da1c7fe1567198e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaUnionBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5964073d49e5eb1b486e4ebfaa58b2c4</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>af844b0850da9d41f147e68bde70ebabf</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationExtEffectData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab51110ad1f630fb291146b7fad574394</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationExtRecipeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a544abbcacf533e01ba7f0d9ba3ed4179</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationTriggerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a11cd37268a0fe2da0a66adf08e5a470c</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModifiedEffectData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5256492ff434d2928a30d516680caabf</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterConditionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a16eef6773267addf633d610ce5a3dd51</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a9494f904543f009b3288cbcf648fdd35</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterGroupData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a7c5a3afc546e03832047162493ecb95e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiONPCData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a636dae73f9918df74b3f21496eacac6e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiQuestBonusCodeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a712d510d60a25ab6bd15d797e0437c71</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiQuestData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a11367918065363345f318bfa32ddc0ce</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiShopProductData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a3f011a82103d0fd47dc102e20811598b</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a98d5c3167f6107e955dad5802246d95e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSkillData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a9189e9b0d9825d5d53948f2cfc5996b9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad66aed96d5713d51d3979f62c71a967d</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSynthesisData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2bd9b07caa8938875567d4b195af94f6</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTankData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a703ea17c89247228b8e3d7b74d47c5db</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTimeLimitData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a41b62d0474009eebd400d1ea823d8378</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTitleData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a779666099a173dcdd6ed1ecca82f8ec8</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTriUnionSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aea822e6b2f9e209d4c794952ecbc6625</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiUraFieldTowerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5ff7ab102a1e0079e3fb39cc12c46962</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiWarpPointData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae8de22079743e452fcdb42a1772eb8d8</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiZoneData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4f6704962a8ec0bf30654bacf5c1f5ca</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a990cd36a67fda02cfc87a982221dab63</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSetData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2f227b7da737bb3aeccabafffbfdf4f0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSpecialData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a64207f0d83c6273d2a0613f425b47e6c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSItemData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae04e775813a7befb59c35f5056b3f0a5</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSStatusData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac53e99b39ffba66973e3f947dfce572d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Tokusei &gt; &amp;record)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefinitionManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DefinitionManager_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Object.h</includes>
    <class kind="class">libcomp::DefinitionManager</class>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>DiffieHellman.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>DiffieHellman_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="no" imported="no">Crypto.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="no" imported="no">TcpConnection.h</includes>
    <includes id="TcpServer_8h" name="TcpServer.h" local="no" imported="no">TcpServer.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>DiffieHellman_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>DiffieHellman_8cpp.html</anchorfile>
      <anchor>a9e8e9716952c278b68cd20c50b87ba0a</anchor>
      <arglist>(DiffieHellman, KeyExchange)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DynamicObject.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicObject_8cpp</filename>
    <includes id="DynamicObject_8h" name="DynamicObject.h" local="yes" imported="no">DynamicObject.h</includes>
    <includes id="DynamicVariableFactory_8h" name="DynamicVariableFactory.h" local="yes" imported="no">DynamicVariableFactory.h</includes>
  </compound>
  <compound kind="file">
    <name>DynamicObject.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicObject_8h</filename>
    <includes id="DynamicVariable_8h" name="DynamicVariable.h" local="no" imported="no">DynamicVariable.h</includes>
    <includes id="Object_8h" name="Object.h" local="no" imported="no">Object.h</includes>
    <class kind="class">libcomp::DynamicObject</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariable.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariable_8cpp</filename>
    <includes id="DynamicVariable_8h" name="DynamicVariable.h" local="yes" imported="no">DynamicVariable.h</includes>
  </compound>
  <compound kind="file">
    <name>DynamicVariable.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariable_8h</filename>
    <includes id="Object_8h" name="Object.h" local="no" imported="no">Object.h</includes>
    <class kind="class">libcomp::DynamicVariable</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableArray.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableArray_8h</filename>
    <class kind="class">libcomp::DynamicVariableArray</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableFactory.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableFactory_8cpp</filename>
    <includes id="DynamicVariableFactory_8h" name="DynamicVariableFactory.h" local="yes" imported="no">DynamicVariableFactory.h</includes>
    <includes id="DynamicVariableArray_8h" name="DynamicVariableArray.h" local="yes" imported="no">DynamicVariableArray.h</includes>
    <includes id="DynamicVariableInt_8h" name="DynamicVariableInt.h" local="yes" imported="no">DynamicVariableInt.h</includes>
    <includes id="DynamicVariableList_8h" name="DynamicVariableList.h" local="yes" imported="no">DynamicVariableList.h</includes>
    <includes id="DynamicVariableReference_8h" name="DynamicVariableReference.h" local="yes" imported="no">DynamicVariableReference.h</includes>
    <includes id="DynamicVariableString_8h" name="DynamicVariableString.h" local="yes" imported="no">DynamicVariableString.h</includes>
  </compound>
  <compound kind="file">
    <name>DynamicVariableFactory.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableFactory_8h</filename>
    <includes id="DynamicVariable_8h" name="DynamicVariable.h" local="yes" imported="no">DynamicVariable.h</includes>
    <includes id="EnumMap_8h" name="EnumMap.h" local="yes" imported="no">EnumMap.h</includes>
    <class kind="class">libcomp::DynamicVariableFactory</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableInt.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableInt_8h</filename>
    <class kind="class">libcomp::DynamicVariableInt</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableList.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableList_8h</filename>
    <class kind="class">libcomp::DynamicVariableList</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableReference.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableReference_8h</filename>
    <class kind="class">libcomp::DynamicVariableReference</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>DynamicVariableString.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>DynamicVariableString_8h</filename>
    <class kind="class">libcomp::DynamicVariableString</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>EncryptedConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>EncryptedConnection_8cpp</filename>
    <includes id="EncryptedConnection_8h" name="EncryptedConnection.h" local="yes" imported="no">EncryptedConnection.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="MessageConnectionClosed_8h" name="MessageConnectionClosed.h" local="yes" imported="no">MessageConnectionClosed.h</includes>
    <includes id="MessageEncrypted_8h" name="MessageEncrypted.h" local="yes" imported="no">MessageEncrypted.h</includes>
    <includes id="MessagePacket_8h" name="MessagePacket.h" local="yes" imported="no">MessagePacket.h</includes>
    <includes id="TcpServer_8h" name="TcpServer.h" local="yes" imported="no">TcpServer.h</includes>
  </compound>
  <compound kind="file">
    <name>EncryptedConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>EncryptedConnection_8h</filename>
    <includes id="MessageQueue_8h" name="MessageQueue.h" local="yes" imported="no">MessageQueue.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
    <class kind="class">libcomp::EncryptedConnection</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>Endian.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Endian_8h</filename>
  </compound>
  <compound kind="file">
    <name>EnumMap.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>EnumMap_8h</filename>
    <class kind="class">libcomp::EnumClassHash</class>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; Key, T, HashType&lt; Key &gt;&gt;</type>
      <name>EnumMap</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a1442fc2425910540ae92c53a56c03cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_multimap&lt; Key, T, HashType&lt; Key &gt;&gt;</type>
      <name>EnumMultiMap</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a55359e16cdbf4adcdb1903fdb9c14968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_enum&lt; Key &gt;::value, EnumClassHash, std::hash&lt; Key &gt;&gt;::type</type>
      <name>HashType</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae51bc9f0bbe012f4ee4a81e96cf0f74f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EnumUtils.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>EnumUtils_8h</filename>
    <member kind="function">
      <type>constexpr std::underlying_type&lt; T &gt;::type</type>
      <name>to_underlying</name>
      <anchorfile>EnumUtils_8h.html</anchorfile>
      <anchor>a4d7d5dc6fabdf88ec8cb5c076a7dec1b</anchor>
      <arglist>(T val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ErrorCodes.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ErrorCodes_8cpp</filename>
    <includes id="ErrorCodes_8h" name="ErrorCodes.h" local="yes" imported="no">ErrorCodes.h</includes>
    <member kind="function">
      <type>libcomp::String</type>
      <name>ErrorCodeString</name>
      <anchorfile>ErrorCodes_8cpp.html</anchorfile>
      <anchor>a14125a86427930b32b5f0d780237dd69</anchor>
      <arglist>(ErrorCodes_t error)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ErrorCodes.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ErrorCodes_8h</filename>
    <includes id="CString_8h" name="CString.h" local="no" imported="no">CString.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>EntrustErrorCodes_t</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>aed65bf44524a9fd8ffa972b8a097d2c8</anchor>
      <arglist></arglist>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8ae9b39c88f4cb30e93d788b910e090576">SYSTEM_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8a1ec1c5cafadc8ddd047b33d446963e26">INVALID_CHAR_STATE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8af2586b6cb40042973fe5b9c91a82c5e4">TOO_FAR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8a5ca84726f387157a8519d7cff00e5426">NONTRADE_ITEMS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8ac1dbd07f0bab138be8df829b41f3609f">INVENTORY_SPACE_NEEDED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8aa9b6778cfb89c8a5c1c6ad7613df9ca1">INVALID_DEMON_STATE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="aed65bf44524a9fd8ffa972b8a097d2c8a40ac0c500740a813897a1a86ee8d0742">INVALID_DEMON_TARGET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ErrorCodes_t</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>a2cf7f25f3a3bc56e70c6f1ae0cc8323b</anchor>
      <arglist></arglist>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bae9b39c88f4cb30e93d788b910e090576">SYSTEM_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba23f149f0f9ae9ed9e0119e7209178a5d">PROTOCOL_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bad56e23417d92e41d830c57b0b538542b">PRAMETER_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bafcf13cf6c0cb58ed532f8cd174f1038c">UNSUPPORTED_FEATURE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bae90a1a570559f99aada7cd09375779f8">BAD_USERNAME_PASSWORD</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba085f122ff705cb5699d1f9a75dced5b2">ACCOUNT_STILL_LOGGED_IN</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bae66ab77e45b476b532a0eb63c76083cb">NOT_ENOUGH_CP</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bab8f449a1c2156626f6d142229f85aa25">SERVER_DOWN</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bae4db4f5f832166a100de8888a273b4f2">NOT_AUTHORIZED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bafa11b85585e55db35850d6c6de575a3e">NEED_CHARACTER_TICKET</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323baf4ef9fc090463448895d30e62483bb9c">NO_EMPTY_CHARACTER_SLOTS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba406232f03c3ca54a7b253d1a4bdbac47">ALREADY_DID_THAT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bac4e17b30549e51c4b99305604ea29869">SERVER_FULL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba60fa8a6e1e7bbec93471bd19aee5c7ba">CAN_NOT_BE_USED_YET</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323baa6242d4be5a9407e3e1927bdee87ea22">TOO_MANY_CHARACTERS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323badff3aa41134465ebf2af23aaaf920dcd">BAD_CHARACTER_NAME</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bab4c62c2c890fc474e2109c34f7c0d31c">SERVER_CROWDED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba975f5fd31e417c407a7335d94933d433">WRONG_CLIENT_VERSION</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323baac90134d6d4e9356d569da222c319e6e">ACCOUNT_DISABLED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba5d5597692ee9ee9eac09dbfc1d8d250e">MUST_REAUTHORIZE_ACCOUNT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bad508984aae2f235576162cc4b1b863a0">ACCOUNT_LOCKED_A</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323ba9e29d28230e95e5c853ade1763f69402">ACCOUNT_LOCKED_B</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a2cf7f25f3a3bc56e70c6f1ae0cc8323bad094d5806cc309e317fd3420bbd30fb5">CONNECTION_TIMEOUT</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PartyErrorCodes_t</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>a64ad8177593b0263347e1d6e5a7a56bb</anchor>
      <arglist></arglist>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba574dfca5e088abccfa24fec2a681e9c8">GENERIC_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bbad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba3563d5b9341ec5d88fea47688d003254">INVALID_OR_OFFLINE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba0308abefbb28586b445c52dd72a6e378">IN_PARTY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba515180a7bf3e387ef6a2b63fa5eee59d">INVALID_PARTY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba58f46ef81624d6394087de75f2a00cb4">NO_LEADER</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba98a47b2f08a87c63db27050c7e9bc51e">NO_PARTY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba7db7f3c2db24664c3367f8cec0003586">INVALID_MEMBER</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bba9cd0cb870825fe41261febdaaaebf8a2">PARTY_FULL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bbaaede1c4f218c966ba0718e31cc42b56a">LEADER_REQUIRED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a64ad8177593b0263347e1d6e5a7a56bbac95472125b90ae311ae87e4686168c14">INVALID_TARGET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>SkillErrorCodes_t</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>a407a8b14fbe4457dcd19565aacde2524</anchor>
      <arglist></arglist>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ac942dc2a9f958acddc67e11472d3ca0b">GENERIC</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a126f2594afb186ca13efb0ea0a2975b7">GENERIC_USE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a85933328a0f654955094f51777543d82">GENERIC_COST</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ae27b39978aff0e697bf9682bd46c8698">ACTIVATION_FAILURE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a8958c7e165eef2502b02c733ea4dc6ec">COOLING_DOWN</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ab5006e9ee9b1ec468e14cb0ddd7fd9d7">ACTION_RETRY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524af2586b6cb40042973fe5b9c91a82c5e4">TOO_FAR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524acea54381739805deaa0ce54c7d097dda">CONDITION_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524aa33eccf88e34a5fdb654b0ed488d9cb9">LOCATION_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a9efe0c779be71bed939ad7028b842405">ITEM_USE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a2527ae9d32ace94663d600efc942f895">SILENT_FAIL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a0b2fa73c37cba44be6439a79f7c07ada">TALK_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a74e37239399473d1a8b50099a2d448ab">TALK_LEVEL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a5247169a6120ae49dfe1a9b68785d2b7">TALK_WONT_LISTEN</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ab84834464ead295f89341a37f8d52ded">TALK_INVALID_STATE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ab39e1d584b0555fdfba87ec6732ff288">SUMMON_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a5832339a43d27583a8e3c399b5c64089">SUMMON_LEVEL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a91258cd4d694b65caa66bbe65f869c1e">TARGET_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a19aad6e4f819532d25148c0ed58d66b8">LNC_DIFFERENCE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a41b1e4a5fa8bff2c831a23e4829c0f34">MOUNT_ITEM_MISSING</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a147b2f852c2ff971e13e0e8723ab2bae">MOUNT_ITEM_DURABILITY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a7f90ee22895b59f177336c0693d0ecf9">MOUNT_SUMMON_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a82dab7b1328dcd8722034f669c3b9531">MOUNT_DEMON_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524abc0c094b78ccf87d61367b8e284a235d">MOUNT_TOO_FAR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a5ec195b773d15e74820598fde3e7d16b">MOUNT_DEMON_CONDITION</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a885ff0e25f7290d0ed8472216fefcfa2">MOUNT_OTHER_SKILL_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a953bc1a5e6d41c938bef8cde32e21805">MOUNT_MOVE_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a7e519cdd2f5fcea9acfa98ac68f07ca2">PARTNER_MISSING</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ad9ed061098244d48b1b75ed61b1306d3">PARTNER_FAMILIARITY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a69b60b85f034952c8427e7c54a1ff052">PARTNER_DEAD</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524aaa06365f08fe0d3b9cf113ca7f34689f">PARTNER_FAMILIARITY_ITEM</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ae649f6110135778ceac074f9583aedf6">PARTNER_TOO_FAR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a9531644f2efaf35e74feaff39ae9fc83">DEVIL_FUSION_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a7061ae08fb1ad16e4cd69bfb91551dcb">MOOCH_PARTNER_MISSING</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ab993631cbc9169dbbb92162be91fb692">MOOCH_PARTNER_FAMILIARITY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a9a7c29557a07d2c3dc8e5638bc49f053">MOOCH_PARTNER_DEAD</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a9fb0c5c12c77133a41e3e0016f8883e4">MOOCH_PARTNER_TOO_FAR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524ae33aff0b418840837e5d5740afbe50d3">INVENTORY_SPACE_PRESENT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a45eac01e20d304cd764d4ba5c8d84140">INVENTORY_SPACE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524aabef19118af43cab455ef767bb103d63">NOTHING_HAPPENED_NOW</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a4b4423476a577aa47a4ad8f71751f6c1">NOTHING_HAPPENED_HERE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a85f6d9b10641e8b7b02b6d4f598e94b0">TIME_RESTRICT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a4240d56339d0911bfb4f9152a78442a3">ZONE_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a45d73af825b7b72c6c2b6a09a3b672ef">PARTNER_INCOMPATIBLE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a407a8b14fbe4457dcd19565aacde2524a77c20a79df60fae86d77277958c72a54">RESTRICED_USE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TeamErrorCodes_t</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>a025150864fda35ac52afa639bfd33c17</anchor>
      <arglist></arglist>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17ad0749aaba8b833466dfcbb0428e4f89c">SUCCESS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a574dfca5e088abccfa24fec2a681e9c8">GENERIC_ERROR</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17aaede1c4f218c966ba0718e31cc42b56a">LEADER_REQUIRED</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17ac95472125b90ae311ae87e4686168c14">INVALID_TARGET</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17ac4ff636c2b9951d15a4b6508f41d14f4">NO_TEAM</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a667bc3be6d703cf1fdb3745b4a890ac8">OTHER_TEAM</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a2a42775273dd9889cb0a8ab00b423878">INVALID_TARGET_STATE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a01b17293657f5a6ba87143f1c62aaac8">MATCH_ACTIVE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a59dc3370a9a52ab60156495befa06860">INVALID_TEAM</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a2747c7e5b88dfc9c5f158a1c73ad94fd">TEAM_FULL</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a5ad1baddb615d955c2ff69bcd4a87cf1">AWAITING_ENTRY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17ad531b0bf4bcc2e507e05dc02acad7395">PENALTY_ACTIVE</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a7958f5366cbebfade52067360718984a">MODE_REQUIREMENTS</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17afe791689644dd6e82f877908387e1427">MATCH_ACTIVE_REJECT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17adc2b884d3aacc6dbecd7a80a2b3a7954">AWAITING_ENTRY_REJECT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a4b620c21f1e8036b74a6103d65fc07b7">PENALTY_ACTIVE_REJECT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17af68a30c2cde300075b050104311e6f42">MODE_REQUIREMENTS_REJECT</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a09769610dc8de96b3fc5256f9a517062">TARGET_IN_PARTY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a9b7f90ecb66f5274c61c00af72607152">TARGET_DIASPORA_INVALID</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a236140d2fda84d4481de61c3741a228f">TARGET_VALUABLE_MISSING</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a56170fbbb45df607f71a8cb78a3b4a6a">TARGET_COOLDOWN_20H</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a0308abefbb28586b445c52dd72a6e378">IN_PARTY</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17ade62b769d5269791e6d93a47149b19f2">VALUABLE_MISSING</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a14ebd7cd5ee381b4c6d6184b9ae63468">COOLDOWN_20H</enumvalue>
      <enumvalue file="ErrorCodes_8h.html" anchor="a025150864fda35ac52afa639bfd33c17a4240d56339d0911bfb4f9152a78442a3">ZONE_INVALID</enumvalue>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>ErrorCodeString</name>
      <anchorfile>ErrorCodes_8h.html</anchorfile>
      <anchor>a14125a86427930b32b5f0d780237dd69</anchor>
      <arglist>(ErrorCodes_t error)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Exception.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Exception_8cpp</filename>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="MemoryManager_8h" name="MemoryManager.h" local="yes" imported="no">MemoryManager.h</includes>
    <includes id="PlatformWindows_8h" name="PlatformWindows.h" local="yes" imported="no">PlatformWindows.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SignalHandler</name>
      <anchorfile>Exception_8cpp.html</anchorfile>
      <anchor>af404c5a92784f1c793b6eef2ea85e04f</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static size_t</type>
      <name>baseLen</name>
      <anchorfile>Exception_8cpp.html</anchorfile>
      <anchor>a77d83de813e0e413eac20175246bf615</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Exception.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Exception_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::Exception</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>EXCEPTION</name>
      <anchorfile>Exception_8h.html</anchorfile>
      <anchor>a5e3ac1341383066fb40319e80d38a2d9</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXCEPTION_STRIP_MODULE</name>
      <anchorfile>Exception_8h.html</anchorfile>
      <anchor>a958499e6be5d366abe58c658b8d1cddf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GeneratedObjects.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>GeneratedObjects_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>GeneratedObjects_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>GeneratedObjects_8cpp.html</anchorfile>
      <anchor>a8b97dca78681f2e2e1c28582cf36eeed</anchor>
      <arglist>(Object, TestObject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteMapU16Char</name>
      <anchorfile>GeneratedObjects_8cpp.html</anchorfile>
      <anchor>abb614bc9f1771ec6902f50c5ce5f9356</anchor>
      <arglist>(char *map, uint16_t idx, char val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InternalConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>InternalConnection_8cpp</filename>
    <includes id="InternalConnection_8h" name="InternalConnection.h" local="yes" imported="no">InternalConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>InternalConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>InternalConnection_8h</filename>
    <includes id="EncryptedConnection_8h" name="EncryptedConnection.h" local="yes" imported="no">EncryptedConnection.h</includes>
    <class kind="class">libcomp::InternalConnection</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>LobbyConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>LobbyConnection_8cpp</filename>
    <includes id="LobbyConnection_8h" name="LobbyConnection.h" local="yes" imported="no">LobbyConnection.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="MessagePong_8h" name="MessagePong.h" local="yes" imported="no">MessagePong.h</includes>
    <includes id="MessageWorldNotification_8h" name="MessageWorldNotification.h" local="yes" imported="no">MessageWorldNotification.h</includes>
  </compound>
  <compound kind="file">
    <name>LobbyConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>LobbyConnection_8h</filename>
    <includes id="EncryptedConnection_8h" name="EncryptedConnection.h" local="yes" imported="no">EncryptedConnection.h</includes>
    <class kind="class">libcomp::LobbyConnection</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Log.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Log_8cpp</filename>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="EnumUtils_8h" name="EnumUtils.h" local="yes" imported="no">EnumUtils.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LogToStandardOutput</name>
      <anchorfile>Log_8cpp.html</anchorfile>
      <anchor>a019e0d83d5f86f1848401a75cf864957</anchor>
      <arglist>(LogComponent_t comp, Log::Level_t level, const String &amp;msg, void *pUserData)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static EnumMap&lt; LogComponent_t, String &gt;</type>
      <name>gLogComponentMapping</name>
      <anchorfile>Log_8cpp.html</anchorfile>
      <anchor>ab4d7d31f7bb4ecd7063394e0fea71729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Log *</type>
      <name>gLogInst</name>
      <anchorfile>Log_8cpp.html</anchorfile>
      <anchor>a302922369eb99b04d8ffd24b0af9cb80</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Log.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Log_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="EnumMap_8h" name="EnumMap.h" local="yes" imported="no">EnumMap.h</includes>
    <includes id="MessageQueue_8h" name="MessageQueue.h" local="yes" imported="no">MessageQueue.h</includes>
    <class kind="class">libcomp::Log</class>
    <class kind="class">libcomp::LogMessage</class>
    <class kind="class">libcomp::LogMessageFixed</class>
    <class kind="class">libcomp::LogMessageImpl</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>LOG_FUNCTION</name>
      <anchorfile>Log_8h.html</anchorfile>
      <anchor>a10d6ef5f4b13a2e69d7b05fce022bdaf</anchor>
      <arglist>(name, comp, level)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_FUNCTIONS</name>
      <anchorfile>Log_8h.html</anchorfile>
      <anchor>a69c3fad642f50ae93c4175caac9e32b2</anchor>
      <arglist>(comp)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogComponent_t</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a57b40b6510404432c4e48817a3efd9cc</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca271998e8c4d6e52eb45c75a7f7f8b000">AccountManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac74a31d4dc3bc6c4f745c80f5efb7a58">ActionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca510e306209030a530c6051693ee06b25">AIManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaf6351d7b2f7854a6d676326c6bd89e16">Barter</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac211992ca445ea414d8de54f98dad169">Bazaar</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca1f269538f83b0a77c2469149334bcfe3">CharacterManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaff215c486452813c6cec04614d832cdf">ChatManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca603c07e2735df19b9a7ce091d7453d2b">Clan</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac2cc7082a89c1ad6631a2f66af5f00c0">Connection</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca79ad4e0522a0a67a6e196be52357e60b">Crypto</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccae307db07b3975fef922a80d07455ee5e">Database</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca825c5fc312927882b716b6c2da3b816d">DataStore</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccacd2e929ef073c7359658db59a6f23f78">DataSyncManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5dc2c823d0f4a876d5f9c8c951eb5783">DefinitionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca300d4af0950c89b847cf6f7500e6060c">Demon</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccae92e4355fbc5fa667df8b35955fa6c03">EventManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca930a91848917f92cf7e2f8d744fa4177">Friend</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca17ff581beb250e95869a34d0ecdba410">FusionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca0db377921f4ce762c62526131097968f">General</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca7d74f3b92b19da5e606d737d339a9679">Item</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca2113b4b235d49f137d0619f749082d88">MatchManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaf39181116a0042e3b50710c2a1e70f74">Packet</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca094a173d3b32f44f5b5c996e8710ae28">Party</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5cb1b42adf01bb3785dfdf712c3b8255">ScriptEngine</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca9aa1b03934893d7134a660af4204f2a9">Server</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca6abfdf384d2e220a39cc38fc537c7f7c">ServerConstants</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca881107c911f6f9696d3ca76bca90397a">ServerDataManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca4601ab84eb2539acd99261401b3ceb8b">SkillManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaac848fa228f49ba2b8a5fbd76596817d">Team</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaa39bd78e770d5dff400baf22d50bfd05">TokuseiManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5f390d80b20daad8f5d2f483fb0ae9d8">Trade</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccadd04ca1265cb79b990b8120e5f5070d3">WebAPI</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccad353476338d7ed79dee1d7025b176009">ZoneManager</enumvalue>
    </member>
    <member kind="function">
      <type>String</type>
      <name>LogComponentToString</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>afe80056cfb1276db8758e1b7176eb802</anchor>
      <arglist>(LogComponent_t comp)</arglist>
    </member>
    <member kind="function">
      <type>LogComponent_t</type>
      <name>StringToLogComponent</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad462493a85ae839c303d46a829fd69ec</anchor>
      <arglist>(const String &amp;comp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LookupTableCP1252.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>LookupTableCP1252_8h</filename>
    <member kind="variable" static="yes">
      <type>static unsigned char</type>
      <name>LookupTableCP1252</name>
      <anchorfile>LookupTableCP1252_8h.html</anchorfile>
      <anchor>ab998b74ef479707f30d9498825764997</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>LookupTableCP932.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>LookupTableCP932_8h</filename>
    <member kind="variable" static="yes">
      <type>static unsigned char</type>
      <name>LookupTableCP932</name>
      <anchorfile>LookupTableCP932_8h.html</anchorfile>
      <anchor>a644e2ebb0896a62a7809799fa9f587b8</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MainPage.dox</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/doc/</path>
    <filename>MainPage_8dox</filename>
  </compound>
  <compound kind="file">
    <name>Manager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Manager_8h</filename>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Manager</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ManagerPacket.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ManagerPacket_8cpp</filename>
    <includes id="ManagerPacket_8h" name="ManagerPacket.h" local="yes" imported="no">ManagerPacket.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="MessagePacket_8h" name="MessagePacket.h" local="yes" imported="no">MessagePacket.h</includes>
    <includes id="PacketParser_8h" name="PacketParser.h" local="yes" imported="no">PacketParser.h</includes>
    <includes id="Packets_8h" name="Packets.h" local="yes" imported="no">Packets.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerPacket.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ManagerPacket_8h</filename>
    <includes id="BaseServer_8h" name="BaseServer.h" local="no" imported="no">BaseServer.h</includes>
    <includes id="Manager_8h" name="Manager.h" local="no" imported="no">Manager.h</includes>
    <class kind="class">libcomp::ManagerPacket</class>
    <namespace>libcomp</namespace>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>CommandCode_t</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79ff02590a8d72c2abb8537458a72e9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MariaDB.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>MariaDB_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="DatabaseMariaDB_8h" name="DatabaseMariaDB.h" local="no" imported="no">DatabaseMariaDB.h</includes>
    <class kind="class">MariaDBAccount</class>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DatabaseConfigMariaDB &gt;</type>
      <name>GetConfig</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>abaa195d1df3ffea64ab2a77f6bb62adc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>a2143d38f0e4b7c18101f0afcc58f2e5e</anchor>
      <arglist>(MariaDB, Connection)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>a72a630be11d4a883ba0a92ebc20b2d49</anchor>
      <arglist>(MariaDB, BadPrepare)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>ac7cd28ae2d8af38c4e7b818d97e2cae7</anchor>
      <arglist>(MariaDB, ObjectBindIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>a340ff10c875f39c2f1cd2c8f6bed07e3</anchor>
      <arglist>(MariaDB, ObjectBindName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>MariaDB_8cpp.html</anchorfile>
      <anchor>af865007263a58eab7d9784b08d98b6a6</anchor>
      <arglist>(MariaDB, ChangeSet)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MemoryManager_8cpp</filename>
    <includes id="MemoryManager_8h" name="MemoryManager.h" local="yes" imported="no">MemoryManager.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>compare_tree</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a745476906d159b4a126c01ba89755442</anchor>
      <arglist>(rbtree_key left, rbtree_key right)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a15c59c198bc646449a7b0ac401153663</anchor>
      <arglist>(void *pData) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator delete</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a92b9e30c09c0792298d014c82ca8e57b</anchor>
      <arglist>(void *pData, size_t) noexcept</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a205ed048fdf5259c2e8e0cb60ee8f719</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>operator new[]</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a63ce4f64887b9307317aee5baae6b18f</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static MemoryManager *</type>
      <name>gManager</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>a34cedb53daed3768c9d295ef3577dc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>gMemoryManagerEnabled</name>
      <anchorfile>MemoryManager_8cpp.html</anchorfile>
      <anchor>ab083f2d51e622e175de44c86f9c88506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MemoryManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MemoryManager_8h</filename>
    <includes id="rbtree_8h" name="rbtree.h" local="yes" imported="no">rbtree.h</includes>
    <class kind="struct">libcomp::MemoryAllocation</class>
    <class kind="class">libcomp::MemoryManager</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MEMORY_SNAPSHOT_FILE</name>
      <anchorfile>MemoryManager_8h.html</anchorfile>
      <anchor>aa650a8f8296443dc5c3bc9ac4ce86593</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMemoryStats</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a38a7b64e9329a53fab5849177bae122a</anchor>
      <arglist>(uint64_t &amp;allocationCount, size_t &amp;heapSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitMemoryManager</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a05c51dbd3a597587a0d80346ca10003b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMemoryManagerEnabled</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a418037a46c45bbf37136bec1464a568b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TriggerMemorySnapshot</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a53393b803e4c3d427f85b8b3ff4bfc0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Message.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Message_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::Message::Message</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>namespacelibcomp_1_1Message.html</anchorfile>
      <anchor>a0816108a83e14b6ce2a0d9fb4084c2a6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a1e34573d4b8e31c2c6e8f61e5be8c3a5">MESSAGE_TYPE_SYSTEM</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6ac5738a71a691cb90f3b8be8ea6dc0c5d">MESSAGE_TYPE_PACKET</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a4861abdcfc1d4da64df07176c0e3b151">MESSAGE_TYPE_CONNECTION</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a28cd6e055b51db68a00f90054edde412">MESSAGE_TYPE_CLIENT</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>MessageConnectionClosed.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageConnectionClosed_8cpp</filename>
    <includes id="MessageConnectionClosed_8h" name="MessageConnectionClosed.h" local="yes" imported="no">MessageConnectionClosed.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageConnectionClosed.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageConnectionClosed_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="ConnectionMessage_8h" name="ConnectionMessage.h" local="yes" imported="no">ConnectionMessage.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
    <class kind="class">libcomp::Message::ConnectionClosed</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageEncrypted.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageEncrypted_8cpp</filename>
    <includes id="MessageEncrypted_8h" name="MessageEncrypted.h" local="yes" imported="no">MessageEncrypted.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageEncrypted.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageEncrypted_8h</filename>
    <includes id="ConnectionMessage_8h" name="ConnectionMessage.h" local="yes" imported="no">ConnectionMessage.h</includes>
    <class kind="class">libcomp::Message::Encrypted</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageExecute.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageExecute_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Execute</class>
    <class kind="class">libcomp::Message::ExecuteImpl</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageInit.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageInit_8cpp</filename>
    <includes id="MessageInit_8h" name="MessageInit.h" local="yes" imported="no">MessageInit.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageInit.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageInit_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Init</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessagePacket.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessagePacket_8cpp</filename>
    <includes id="MessagePacket_8h" name="MessagePacket.h" local="yes" imported="no">MessagePacket.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>MessagePacket.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessagePacket_8h</filename>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <includes id="ReadOnlyPacket_8h" name="ReadOnlyPacket.h" local="yes" imported="no">ReadOnlyPacket.h</includes>
    <class kind="class">libcomp::Message::Packet</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessagePong.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessagePong_8cpp</filename>
    <includes id="MessagePong_8h" name="MessagePong.h" local="yes" imported="no">MessagePong.h</includes>
  </compound>
  <compound kind="file">
    <name>MessagePong.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessagePong_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Pong</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageQueue.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageQueue_8h</filename>
    <class kind="class">libcomp::MessageQueue</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>MessageShutdown.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageShutdown_8cpp</filename>
    <includes id="MessageShutdown_8h" name="MessageShutdown.h" local="yes" imported="no">MessageShutdown.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageShutdown.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageShutdown_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Shutdown</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageTick.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageTick_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Tick</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageTimeout.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageTimeout_8cpp</filename>
    <includes id="MessageTimeout_8h" name="MessageTimeout.h" local="yes" imported="no">MessageTimeout.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageTimeout.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageTimeout_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <class kind="class">libcomp::Message::Timeout</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>MessageWorldNotification.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageWorldNotification_8cpp</filename>
    <includes id="MessageWorldNotification_8h" name="MessageWorldNotification.h" local="yes" imported="no">MessageWorldNotification.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>MessageWorldNotification.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>MessageWorldNotification_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="ConnectionMessage_8h" name="ConnectionMessage.h" local="yes" imported="no">ConnectionMessage.h</includes>
    <class kind="class">libcomp::Message::WorldNotification</class>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Message</namespace>
  </compound>
  <compound kind="file">
    <name>Mutex.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Mutex_8cpp</filename>
    <includes id="Mutex_8h" name="Mutex.h" local="yes" imported="no">Mutex.h</includes>
  </compound>
  <compound kind="file">
    <name>Mutex.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Mutex_8h</filename>
    <class kind="class">libcomp::Mutex</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Object.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Object_8cpp</filename>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Object.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="no" imported="no">Packet.h</includes>
    <includes id="PacketStream_8h" name="PacketStream.h" local="no" imported="no">PacketStream.h</includes>
    <includes id="ReadOnlyPacket_8h" name="ReadOnlyPacket.h" local="no" imported="no">ReadOnlyPacket.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="no" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Object.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Object_8h</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <class kind="class">libcomp::Object</class>
    <class kind="class">libcomp::ObjectInStream</class>
    <class kind="class">libcomp::ObjectOutStream</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ObjectReference.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ObjectReference_8h</filename>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="PersistentObject_8h" name="PersistentObject.h" local="yes" imported="no">PersistentObject.h</includes>
    <class kind="class">libcomp::ObjectReference</class>
    <class kind="class">libcomp::ObjectReferenceData</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>src/Packet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>src_2Packet_8cpp</filename>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <includes id="Compress_8h" name="Compress.h" local="yes" imported="no">Compress.h</includes>
    <includes id="Endian_8h" name="Endian.h" local="yes" imported="no">Endian.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="PacketException_8h" name="PacketException.h" local="yes" imported="no">PacketException.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>tests/Packet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>tests_2Packet_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="no" imported="no">Packet.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>tests_2Packet_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Packet_8cpp.html</anchorfile>
      <anchor>a3c9fe510e21de33a72eac187eccecc1c</anchor>
      <arglist>(Packet, MoveConstructor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2Packet_8cpp.html</anchorfile>
      <anchor>a747be33eaf0933a3f4c8291b3c2021b7</anchor>
      <arglist>(Packet, MoveAssignment)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Packet.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Packet_8h</filename>
    <includes id="ReadOnlyPacket_8h" name="ReadOnlyPacket.h" local="yes" imported="no">ReadOnlyPacket.h</includes>
    <class kind="class">libcomp::Packet</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>PacketCodes.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PacketCodes_8h</filename>
    <includes id="EnumUtils_8h" name="EnumUtils.h" local="yes" imported="no">EnumUtils.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>ChannelToClientPacketCode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>a38e2caadda01ef50c9b24c706a5a41be</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea945b244bd641288cdfbec4e686886c1a">PACKET_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea70f91c82079c2a3e3b4f7a8727ad932a">PACKET_AUTH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7191eb92b86c19094737c654a33d316a">PACKET_LOGOUT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead7f7c05ad364378bd16fba1a05a662ab">PACKET_CHARACTER_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaad2b0068d56ed2dc2b6b7aef281866b7">PACKET_PARTNER_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea431e4e1af2113cd335b9b12d2eeab127">PACKET_ENEMY_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beada8056492bdca9dfe54d537489df8350">PACKET_LOOT_BODY_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4d2c9e4af43ac157e32fa8a722e624be">PACKET_LOOT_BOX_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3583d227690a80859ab5959f2933fd6d">PACKET_NPC_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea05bc27987c6ad48ea55670db4c817b96">PACKET_OBJECT_NPC_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaea8ed37e2a4138d934f9ca7386664fae">PACKET_OTHER_CHARACTER_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac09f61ed7e95e07f74ae0ee3f5ff2918">PACKET_OTHER_PARTNER_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa3de324c55678dba0e2cc18c34a2da44">PACKET_REMOVE_OBJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3d047353059c62125751c324a4ff465c">PACKET_SHOW_ENTITY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead72dabd982b7f0991c528be237812c92">PACKET_REMOVE_ENTITY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabdac1a7ca61aa8e3fe0bf83de4dd5fec">PACKET_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaae40ceb0953d7994cb30c950bba9dd26">PACKET_KNOCK_BACK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7b0bd4a6c21b044761ff37f0c6bbf0c8">PACKET_STIFFEN_OBJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae82a526a30c2f6f3d2a63dcba9428eb8">PACKET_FIX_POSITION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea00fae3b7f2f1611c73f57cf766bd4444">PACKET_WARP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea77cb1644ae107f4d62eabb70320b4ee1">PACKET_ZONE_CHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaa22701dbb20d34b881b9c85d3e33308">PACKET_SYNC_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5ac2cb7ee2d1c9024b37db376e4e72dd">PACKET_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea09f883656240011fb260867414460726">PACKET_SKILL_ACTIVATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9751c80d71e3a44f5a212ecc29f761ac">PACKET_SKILL_COMPLETED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2067b502a5a867f90dd4fbeed3eff7b9">PACKET_SKILL_EXECUTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4e1f3c0685c161ed51c70d04315287ae">PACKET_SKILL_FAILED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea00ecab0122d56f9884392621a07ce525">PACKET_SKILL_REPORTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea70d963b6c0798b57ba6a86c354e298fb">PACKET_SKILL_SWITCH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea063d4452fc4493efe0e5d2cf02ff8b20">PACKET_SKILL_UPKEEP_COST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea329977e4c638e952981fe8f9adad27c8">PACKET_BATTLE_STARTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0b448815555832c79a3516164f32aa8b">PACKET_BATTLE_STOPPED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea42f6d428bb2f229d5f7a34e183afebf7">PACKET_SKILL_TARGETED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2eebeb17edb53169a97bae2345f1c519">PACKET_ENEMY_ACTIVATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafff048bf12237226f267e4659bc1dd23">PACKET_DO_TDAMAGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1928b6c74935f4fc88b9ffa379e5ef00">PACKET_ADD_STATUS_EFFECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaeaec2867ad2d96fd2e7c1ff35eed5309">PACKET_REMOVE_STATUS_EFFECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4440c0d0e578f57dafeaa45104586a31">PACKET_XP_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4f9f73cc4c6cc7258571e2fcebf7d30c">PACKET_CHARACTER_LEVEL_UP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead78231c6878e659e784a365ff8f2547c">PACKET_PARTNER_LEVEL_UP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9e9b52d0ab9f3d3092eead48906a02d4">PACKET_ALLOCATE_SKILL_POINT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf470280503bbfecf032061c7c919b313">PACKET_EQUIPMENT_CHANGED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beacf39fbc1759234bb9f3cecb6c9e1a7d5">PACKET_ENTITY_STATS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7a9a3a2f7e412160a326b2f92e0de972">PACKET_EXPERTISE_POINT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6bb3860a3484248694dcf3663bdb0158">PACKET_EXPERTISE_RANK_UP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9aed4e947796cff4dc8be9e1a3eb556d">PACKET_TOGGLE_EXPERTISE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab30070f7c932dbabf5ac3c604616d272">PACKET_LEARN_SKILL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea983a800087323ecd1475bbadbb52f511">PACKET_INHERIT_SKILL_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafd8f11c0d9277899844fc7d84951c474">PACKET_DEMON_SKILL_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea40f621375d9c99e23a374451536b074d">PACKET_KEEP_ALIVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaab5fa205a265433c4667a7c013815329">PACKET_FIX_OBJECT_POSITION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea496e698a8c3fc5f4143a58d5f265a0ed">PACKET_DEMON_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae480f69d735c32b1b7baef623079ff1d">PACKET_DEMON_BOX_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5eb5b4e4b68ab6a440e4322de2e8727d">PACKET_PARTNER_SUMMONED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea39a62b2a4b644b4804010ae6b5793054">PACKET_POP_ENTITY_FOR_PRODUCTION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea836391748341e9f0e09dc526ec4bcc62">PACKET_CHANNEL_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead523c80e0eb4300f7fe6e91e084c0b69">PACKET_CHANNEL_CHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac4e63994209df423a2cfac5eac1d8ff0">PACKET_REVIVE_ENTITY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaecd00cde91baa910d67ea009c854dd69">PACKET_STOP_MOVEMENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea31cc7e2827789ef6479faa41f427703b">PACKET_WORLD_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5ec2b5a7a2d7e69f7db8e18081d885dd">PACKET_ITEM_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae258d4d672d93ac7da4eb9874a3e05d9">PACKET_ERROR_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea955b8d6c44dcde354bd0a87de80c7092">PACKET_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7b896ec980af527f2ca911bfd5bc0cef">PACKET_EQUIPMENT_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea85d1e4b7251686499dce51d84c85d126">PACKET_TRADE_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0201a3614012cd08e34893381cc8f9cd">PACKET_TRADE_REQUESTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beacf605e4605496da4fbe302707a0a8fe9">PACKET_TRADE_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaeacb73ac7f50cfc2e72836759ceaba8d">PACKET_TRADE_ADD_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9fb49878d9651f5a1dae6ed4323977d3">PACKET_TRADE_ADDED_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf5f48c3de56ca0ff3d9b7ab09e9d1263">PACKET_TRADE_LOCK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea29df113696eafe1ca24a2dee088c8c8d">PACKET_TRADE_LOCKED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa0a52446c938be6369120df6fe24b4a9">PACKET_TRADE_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1c1746d8d5ce6192311f614866a43ef1">PACKET_TRADE_FINISHED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea97abe47c6d69c96e1a57bcf8d92fb4a4">PACKET_TRADE_ENDED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea17fc877f8bd4f1582a0e2d799b7abb20">PACKET_LOOT_ITEM_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4102b092e26176f7a712bb2689bdfbce">PACKET_LOOT_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0becd01a1b3290e46664beb22f73fbdf">PACKET_CASH_BALANCE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4ea31945b8c5d2a0ae10c20e0724666a">PACKET_SHOP_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9f33fc3aece4b23eb0de61e272f5d22d">PACKET_SHOP_BUY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1d30a40604651e0fb696898b892e8f79">PACKET_SHOP_SELL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf3599e7d9d63ad3572f963705b34e039">PACKET_DEMON_BOX_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4469534274d670dd14ba337203bbcf29">PACKET_ERROR_COMP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6021615de6e5fb55595e7fc0f1e6d10d">PACKET_POST_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9697e4cebb6f34424dd91b65520b3953">PACKET_POST_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1fddeb6efd031d655ab72ca81e7b1e12">PACKET_POST_GIFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6dd6d812b5439ea315ecb4976cd61e5a">PACKET_HOTBAR_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6eab59edf893a6a25b9586bb8884f095">PACKET_HOTBAR_SAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead7ba08b6d45398c5244aefe5d6f10918">PACKET_EVENT_MESSAGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadf08e174fb04f90ca36f8f3cc70bd798">PACKET_EVENT_NPC_MESSAGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea79ae8b41fc6ea55d592e5ad99e8cd524">PACKET_EVENT_PROMPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaac5bc3ca9f1b45a4dd77af3753045ee2">PACKET_EVENT_PLAY_SCENE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafb44ea535369aba795d98373a4e1db66">PACKET_EVENT_OPEN_MENU</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac90be09ce8ed393ab511dd00667bd9fa">PACKET_VALUABLE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9b7ef07055ef82dbc3b141345c8cd7de">PACKET_EVENT_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaba56f079fb79e8a0d671298bf1f17adf">PACKET_NPC_STATE_CHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaff7b68f10ea1d5241d9160b0133b7a81">PACKET_FRIEND_INFO_SELF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaab901de69872990dfe8150776da111f9">PACKET_FRIEND_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead83e51795f1d068f53e3aa908d89160c">PACKET_FRIEND_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaf24cbe514d089924897059436785f99">PACKET_FRIEND_REQUESTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beade54b3212b5a790456548c702213a607">PACKET_FRIEND_ADD_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab946e412a3087a029a20fdec1c284da7">PACKET_FRIEND_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabe0f8f6d7dba5bbd09ef9a5b6ffa8b91">PACKET_PARTY_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafe97b28816a5f652bb4d2439a7b97271">PACKET_PARTY_INVITED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaec2a5def316bc7f2a338688ee6560b63">PACKET_PARTY_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea801dc49ab08c623b9392cc7e9882c800">PACKET_PARTY_MEMBER_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf1480b1ce3245e91f94619720af142ba">PACKET_PARTY_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea05c3e7da50ec33bc6672f241b66fd411">PACKET_PARTY_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3017e752c5a54db0fd99ae6f14dbc3d2">PACKET_PARTY_LEFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa09b710adb1b21c504ab482b95d2e7b7">PACKET_PARTY_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5f38d4e10b72dee3da53d421f0265a02">PACKET_PARTY_DISBANDED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf92f0d84267d1c5d65a24e4dda234e81">PACKET_PARTY_LEADER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea74bddd90e147c03ffda55c959142acd4">PACKET_PARTY_LEADER_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2615b17a3920704af400281fe9508b59">PACKET_PARTY_DROP_RULE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaee9cb06dd76c476e9f1d00caf340de7a">PACKET_PARTY_DROP_RULE_SET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3d2dae337c0d95f351cbc8585b88ec8a">PACKET_PARTY_MEMBER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf316ef4b2ca07c8dd60e5f8d1e900bed">PACKET_PARTY_MEMBER_PARTNER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaf0290b820cd82ebc6b3e9d560b615d1">PACKET_PARTY_MEMBER_ZONE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6dec35dcda1980da2a95b64c81d8f457">PACKET_PARTY_MEMBER_ICON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6155ed269dc221ea3b6e070465f6727b">PACKET_PARTY_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea878b0d63ec4f27e120b05ccf4ac23b0d">PACKET_DEMON_FUSION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea82c35ed827dd3a538c8fdde3c6804957">PACKET_LOOT_DEMON_EGG_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4363f0c37196ac1de7e389e00cc3b265">PACKET_SYNC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab0c82ae56f21d631e1238de74f06a304">PACKET_ERROR_FRIEND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5925ae761d0d198387493546d82a88f1">PACKET_SHOP_REPAIR</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf3dee30398d1f51188669923bdedda39">PACKET_ROTATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea113e9e7896def92fe2f3602c59fb4835">PACKET_RUN_SPEED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa5ae590c8d9f3d30c39d978eb06cb114">PACKET_LOOT_BOSS_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf38cb8698055789dd42dc868b4ec29f1">PACKET_UNION_FLAG</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea56f1762b4dfd9f9c62c22a320e62571a">PACKET_ITEM_DEPO_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9c028be799fe0711a3b85bbafe3bd870">PACKET_DEPO_RENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea375a5def9e0ca576431103b860289bfc">PACKET_EVENT_HOMEPOINT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea33950b0bd4b24aaa97417ae1348fea05">PACKET_LOOT_TREASURE_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3ee91ecd02a3b676a0f639a403127c6d">PACKET_EXPERTISE_DOWN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac27ef29b6966960bc2ecc359df666496">PACKET_QUEST_ACTIVE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa398d33db022ad74b2fb58cdb1e07c1e">PACKET_QUEST_COMPLETED_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea83198d2024a9582c4e1afd175c61dc87">PACKET_QUEST_PHASE_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaed780d0034ac23eba7aeacb663409796">PACKET_QUEST_KILL_COUNT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7fadf1202e8487e1888fb2c1691e5849">PACKET_QUEST_LIST_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead32540d9f7f236b477e8161925f52fc1">PACKET_QUEST_LIST_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5f1c0d8848c320b38f2fb10e61ba3682">PACKET_BAZAAR_MARKET_OPEN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea920c485219edf0b6bf6ae1994d60e93a">PACKET_BAZAAR_MARKET_CLOSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae8a4d18b59b454bdb7b43458c19fd1ed">PACKET_BAZAAR_MARKET_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf130e709793928a10d3ad3e03b92c27d">PACKET_BAZAAR_ITEM_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5e276cf4244e4d999b01ba0a38320e51">PACKET_BAZAAR_ITEM_DROP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea09340c35fc0f93714a974f8d836ec959">PACKET_BAZAAR_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9731e46fcbc09750b9df8b97d41543d1">PACKET_BAZAAR_ITEM_BUY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf67fe3804d3e786df028678b6b6d09c1">PACKET_BAZAAR_ITEM_SOLD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0a300188442cd91e1fcc1fb6f92c8136">PACKET_BAZAAR_MARKET_SALES</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead0d015320616d339fb8a4991ec4f8e3a">PACKET_BAZAAR_ITEM_EXCHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2d4540f3e646c4f2e985af146e2502cd">PACKET_LNC_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6956bf0407cf3b25e70a1cfdf09bc608">PACKET_EVENT_STAGE_EFFECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea06d6b603ec479569fb62fb78c79dcccf">PACKET_SEARCH_ENTRY_SELF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea595460c9a3247261303bd1b83661b0f2">PACKET_SEARCH_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaae2e0267dad925e5e5a62c0c3aa054a6">PACKET_SEARCH_ENTRY_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0acec1d8e01da9e4a3a2d70ae573fe5d">PACKET_SEARCH_ENTRY_REGISTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7ca2c7368d7ab148d739f1c49bec0be7">PACKET_SEARCH_ENTRY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2fdfeb44d77255dffb2c315726554465">PACKET_SEARCH_ENTRY_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6d4542f84f4a078dbf03f05bc920431c">PACKET_SEARCH_APPLICATION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea52b353ff7d7707fc5cfec4f376e55f19">PACKET_SEARCH_APPLICATION_REPLY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaeb1ffbbda4a91ac1d8c21f8234ace149">PACKET_CLAN_FORM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9e58df318996645a0e6e49a3323f55d1">PACKET_CLAN_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea537fb152bf7c09c84ad0345fd01fa070">PACKET_CLAN_DISBANDED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea52ca69361dc5a950f3cdf68697fb27d9">PACKET_CLAN_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea38a5d2da8a0bba0bdce81888ace869e6">PACKET_CLAN_INVITED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea69c5d8e17f8efc5419d438187306a27d">PACKET_CLAN_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beacc9fd309b63f639617f47ace595da786">PACKET_CLAN_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7bf4db26146e9b7e2c1ea3de36e08803">PACKET_CLAN_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae52e6068aec03ce9cbe0621dcf81e41e">PACKET_CLAN_KICKED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5dc0d621534961ef4a590dc1b4b71870">PACKET_CLAN_MASTER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea78ba936ccb18fd0c92aec57dde1eb9fc">PACKET_CLAN_MASTER_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa129c15b6486c263f6df59bcde0417a6">PACKET_CLAN_SUB_MASTER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadbf3b03065f8d7659acdc91444603cf7">PACKET_CLAN_SUB_MASTER_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaedb3ab0976c8ea636a1672d720f33df2">PACKET_CLAN_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf34b92dcd0e669b7a58b04fd224c46a7">PACKET_CLAN_LEFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea890a8e7f37b7e9ae1751f6516868f780">PACKET_CLAN_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafd2c296f20b96a91abd7e6f146031fa1">PACKET_CLAN_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0ebcbeb5d83f7ad9937c7c166c3f2038">PACKET_CLAN_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7d94625bc1271c33e7c5ec442f4a9cda">PACKET_CLAN_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7d15626345ab791bb0f79330873faa50">PACKET_ITEM_PRICE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9253026bfc4fd5646216ce52eeba0e49">PACKET_COMM_SERVER_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf635a93a9ed1723534e92cf83d9aaa1c">PACKET_EVENT_DIRECTION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9f19c3b7d2f3d25c9c62dae15fb37be5">PACKET_TROPHY_PENALTY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea90dfa56f21032515716490b5cf1cc17d">PACKET_BAZAAR_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea401049a43f28126a6ed01a56b2b54c3f">PACKET_BAZAAR_CLERK_SET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7dc00ccac1d7a7f64cf339870f19d3dc">PACKET_BAZAAR_SOLD_OUT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea865ebc975cd5afdaab75261da9d68188">PACKET_BAZAAR_PRICE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea170bdbdffc842bc3c90a005a6aae680d">PACKET_BAZAAR_MARKET_INFO_SELF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7031c51f685103acb58824dadf8785a3">PACKET_CLAN_NAME_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea109a3db1807a32b2fa9975c3a7362ae8">PACKET_SKILL_EXECUTED_INSTANT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1c1e2d48b5397eaba1e5c72935a6f359">PACKET_RESET_SKILL_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa615768cc25caaf2b95bdb86e1fe5fea">PACKET_SYSTEM_MSG</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea06e2de8410fab83359b501fb26c8e44f">PACKET_SYNC_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3d47946649c31dbfe22fca7333fd8892">PACKET_ASSORT_DEVELOP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab43db262fb46c56c7d97fc91a84f66e7">PACKET_COMP_SIZE_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0393a5f7e2940e2f13b1bb4a80514f8c">PACKET_BAZAAR_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7bcc28d08e15f396e55ac12dae63651d">PACKET_BAZAAR_NPC_CHANGED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea28921de77aeb3d0b092eb1b3479c5799">PACKET_SKILL_LIST_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2cf737b4acb02df018114266d57754ee">PACKET_BAZAAR_MARKET_COMMENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6ad522be2b321d73f5fe8caf508c23d2">PACKET_CONTRACT_COMPLETED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9d99f56847666df1f758845d0c824d53">PACKET_PARTY_RECRUIT_REPLY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead485385b94008050be157d8d7b6cee8c">PACKET_PARTY_RECRUIT_REPLIED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea731a32ffa993785d10bfe1642f18a474">PACKET_PARTY_RECRUIT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4410aa4d82a6747979893955905733b4">PACKET_STATUS_ICON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa39ce636becc6fd0badf1a63dfaf7bb5">PACKET_STATUS_ICON_OTHER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea17cf74b2c995ca0af59df41e2a8b84cd">PACKET_MAP_FLAG</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea220617ee62de259fd23185f0719ca010">PACKET_ANALYZE_DEMON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafbcfddd4a8f7ab50fb3640431f34ab94">PACKET_DEMON_COMPENDIUM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea69695997c2ff6768da784eb28d9d4539">PACKET_DEMON_COMPENDIUM_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea64709b9a641567c1986c8c5bbe6a093e">PACKET_SKILL_COSTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3bf731d2eb8c7b9929fc6aaf588f82af">PACKET_ITEM_REPAIR_MAX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabbf15feeb1ad5d48527c3062efaf44f1">PACKET_APPEARANCE_ALTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7fc3b6fb4ff7e1f8c7e9524193a657f7">PACKET_APPEARANCE_ALTERED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1766585dc9822b71e4b32e04184389b6">PACKET_DEMON_FAMILIARITY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafa1f4301669297a6cb148fb531371414">PACKET_TIME_TRIAL_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf665c7da897ac89847fddc8a985d2e0e">PACKET_TIME_TRIAL_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea396eb97d661e972544f8479977e3b102">PACKET_TIME_TRIAL_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea76bb1567c52a4e8dc530741cfc5f7004">PACKET_TIME_TRIAL_REPORT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea775d48833304909d6bb3533b702b6010">PACKET_ENTRUST_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea834839401e99d535c5d9bee095063961">PACKET_ENTRUST_REQUESTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac69a4b828d3e1d4e4c5568fced64b626">PACKET_ENTRUST_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead56ebda7b624d7957d79a1e51c3736af">PACKET_ENTRUST_REWARD_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa244d1b576820faa451b1dfc4b3162bf">PACKET_ENTRUST_REWARD_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea17e16f9f52bbc1d449a68e33e5302c03">PACKET_ENTRUST_REWARD_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea773f46ecc5decb5dfd26cb8f544ec849">PACKET_ENTRUST_REWARD_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea928670d3e8f57390254e9d4aa1274f8d">PACKET_ENTRUST_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea802b892a999e05a760ce1e3d9bb8a0f8">PACKET_DEMON_CRYSTALLIZE_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea526b96bc6e8bac9a4501484c599fd180">PACKET_DEMON_CRYSTALLIZE_ITEM_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5552535b3851253aef89f824c53e3aba">PACKET_DEMON_CRYSTALLIZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea08d69c269348dc294ab20f239ef9fc80">PACKET_DEMON_CRYSTALLIZED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0de301023acc2f0c34c67ef568b59f99">PACKET_ENCHANT_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea356c668772fbe8c84987f6a1778dc5e1">PACKET_ENCHANT_ITEM_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadc6b9a7b25b0d43c116281ba735e15c1">PACKET_ENCHANT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea35420628d00c9250d7911aa91b6901f8">PACKET_ENCHANTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5638e9420f8dd2a2e147f22f1499edef">PACKET_DUNGEON_CHALLENGES</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea102374d3d5de7ae61a825ae6867bd0fd">PACKET_ANALYZE_DUNGEON_RECORDS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beada5dfdb00fb81706e864b0334b66af25">PACKET_DUNGEON_RECORDS_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac99f403cc51aa2e9892aaf1c4c05f0ec">PACKET_ITEM_PROMO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead1ac84bda54e9a8c023a815a4dc6d481">PACKET_TRIFUSION_STARTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6bff317996540a36a80e70a30bad4e64">PACKET_TRIFUSION_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea825584db540499461f33144f41463a50">PACKET_TRIFUSION_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea42a1f3161dfdead4f1a402896983df4c">PACKET_TRIFUSION_PARTICIPANT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab6dbd2882fefa97725623e644384e274">PACKET_TRIFUSION_DEMON_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaef6229522f92738747f3b03069091b70">PACKET_TRIFUSION_DEMON_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea22074ca9996f0a72acd0b3e23fea8ac5">PACKET_TRIFUSION_REWARD_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac987f3e1fbcb804635c6974d3d43fe32">PACKET_TRIFUSION_REWARD_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf501fae4f0c227d1efbf020ef262370a">PACKET_TRIFUSION_REWARD_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaba282621196ee18a3141568018a4356f">PACKET_TRIFUSION_REWARD_ACCEPTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea84cf619383db5aa5fd7e0a542582687d">PACKET_TRIFUSION_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2e5ee5ea360673b2072b3e224b2b151c">PACKET_TRIFUSION_ACCEPTED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaeaef165a60dc4082b7edde6d24d44a86">PACKET_TRIFUSION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead25d8865788420c2f185d946798e1af3">PACKET_TRIFUSION_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabb37124b58519ab4203a3ba458b1b184">PACKET_TRIFUSION_LEFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf8d7d7ca7301060e22689314705e6a3e">PACKET_TRIFUSION_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5e8d14e710be836102f0ea5b2988858a">PACKET_CLAN_EMBLEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7ab1858333b35f44cb3c0dba49adc069">PACKET_CLAN_EMBLEM_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea805965a3cc7fe5826701abd96dce2771">PACKET_CLAN_LEVEL_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3de8212cf952bdc5024d5af8564d7d57">PACKET_CLAN_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae38b54636461ac69333640539e882d00">PACKET_DEMON_FAMILIARITY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea62bbf8481262754484a4911341b0376f">PACKET_TRIFUSION_DEMON_CRYSTAL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea8202f9159726dca86b667a605f9511b2">PACKET_EVENT_EX_NPC_MESSAGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaff374e4afcff54ebdc96fcbc88beceed">PACKET_PLASMA_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaef91d50d7914836d0650b9fb1992554a">PACKET_PLASMA_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea138398efec0ff1935557d4036ec312a2">PACKET_PLASMA_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7007e710ce6e0f1a2605427feb60c481">PACKET_PLASMA_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabb36832f142d960079d29fcce5c29439">PACKET_PLASMA_ITEM_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea8b6c99cfa4d0a51def9fb4112d120491">PACKET_PLASMA_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0e31cb245103b7ad207163a8ebb5cb6b">PACKET_PLASMA_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4616c355c2e5592bf5ad1b5b2c5e046a">PACKET_PLASMA_REPOP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9fde254fef00f79f7b3ba7e3f535db3c">PACKET_TIME_LIMIT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2af9685c71e606f82af38581f0ca38d4">PACKET_TIME_LIMIT_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4e4a6f6c7681b4418a0754b7d375efaf">PACKET_TIME_LIMIT_SYNC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab32a49986182533bcfd4b19afe72a652">PACKET_EVENT_PLAY_SOUND_EFFECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead2f16ef731e3f82b6c80bc86cb400d3d">PACKET_ITEM_DISASSEMBLE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea92b8cc511e83f4086982d70e6cc15361">PACKET_SYNTHESIZE_RECIPE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaf28a9584e4d477b84f7433a802d8bff">PACKET_SYNTHESIZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf78f0a8ead298a1135b148da52336329">PACKET_SYNTHESIZED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1eae36e9fc3cef6692937603e59ccb3b">PACKET_EQUIPMENT_MODIFY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead0f851712a949a3652f6386e8b7727fd">PACKET_MATERIAL_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3d32f6ebfd74a3216ab65bc4e8049814">PACKET_MATERIAL_BOX_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae2e2260a272a319dae54e42992f06292">PACKET_EQUIPMENT_ANALYZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6cbcf864ab82853acc2cc9cc6f8bd88c">PACKET_OTHER_CHARACTER_EQUIPMENT_CHANGED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2354643f85255e8f5fda77615e353167">PACKET_MATERIAL_EXTRACT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea358e58c26f868ff0b8cc4c5669020b0e">PACKET_MATERIAL_INSERT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea610db5dcc14eb46c31fe1ec9eff97184">PACKET_ITEM_EXCHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabe37486e398ea9495d6dc6ffe987c914">PACKET_COMP_SHOP_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafc1b9b1fad6a23ede3f815cceedef732">PACKET_EVENT_SPECIAL_DIRECTION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae7ee5fb610ba987a81143620bcfa2067">PACKET_FUSION_GAUGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab46dfdc2c9c46ed911c881cf9db28366">PACKET_DEMON_PRESENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaed05554ed9366e47f2d0d6e1c66d486d">PACKET_RANDOM_NUMBERS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea61392cc8a5210a2fd8530b68e344aabf">PACKET_TITLE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4b26d785a5903576f9ee8a61107cf6b0">PACKET_TITLE_ACTIVE_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea44f062a1747bd93154aa61c11377f1a1">PACKET_TITLE_ACTIVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea983f93401472870f4b08312cc8e40803">PACKET_TITLE_BUILD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead2b7dd27eba97156d962a573aa1289f2">PACKET_TITLE_LIST_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead3b03ba5b68c88574f698ac6a2d3dd39">PACKET_DEMON_QUEST_LIST_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaee445d993cc9fdbc8e506792a13954c">PACKET_DEMON_QUEST_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea40f3b42098277bac88d95e64f3013e88">PACKET_DEMON_QUEST_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0c606e73ff1bf5bec9f3c064e4baa5a9">PACKET_DEMON_QUEST_COUNT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea99171b65c900b87b24d7ce4237b1466c">PACKET_DEMON_QUEST_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0938d3419134bc6b2a541ae05b15af90">PACKET_DEMON_QUEST_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadc159b003599fe28a24c8d76eae1331f">PACKET_DEMON_QUEST_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0c49f0db388fa484a930d977e5b66d5f">PACKET_DEMON_QUEST_ACTIVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9ea404facc0b0eeef65d7f9bc8596db3">PACKET_ITEM_DISTRIBUTION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead1e66953faa74e73f14783a7f965d344">PACKET_DEMON_LOCK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5e312ff306368d4055e2c246232abd3e">PACKET_DEMON_REUNION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea967348b623cf1e290a2f1f14a0a22bb0">PACKET_LEVEL_UP_CONGRATS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea848340f2016d556670ba957037265a26">PACKET_PARTNER_LEVEL_DOWN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea71c169dce10ed444c042f13c183ffc81">PACKET_DEMON_QUEST_REJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea005e3503b762034dbe1bbb39360b4526">PACKET_RANDOM_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea17b0c3cd9f49531064579fdd1e87d838">PACKET_PVP_READY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea13ffb662505c9e1a3da1b97bfffbe768">PACKET_PVP_CONFIRM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf1ac3f17e40b3ad95d2bb9735b62b984">PACKET_PVP_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead3f9660411df614c22efffea41f25606">PACKET_PVP_BASE_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea52cd9dd69a3ffe4f5b70ce05b1f3cf67">PACKET_PVP_BASE_CAPTURE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac0c2222514bc63c39cfb907b06d0ba35">PACKET_PVP_BASE_CAPTURED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaf3662d021f35fa53409285fa1f233f2">PACKET_PVP_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9be31a2d58b9c1505f642d47f906cd35">PACKET_PVP_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea424cd022e29e9487a94bb1e737904edb">PACKET_PVP_BASE_LEFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea80541d28f041c4e6e1870b9466a50efb">PACKET_PVP_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4194da94cab9509e21a9f4778f999bb3">PACKET_PVP_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2c349f82da087961a4b98393d1acf095">PACKET_PVP_CHARACTER_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea99e0e3b2c9d2d9ab6ea4f7a40803e739">PACKET_PVP_WORLD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2cdf9b472a561b3d630485a676621e6f">PACKET_CHANNEL_CHANGED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea67086406740f93d64eacfd9bb28700c3">PACKET_PVP_PLAYER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0de6faa442a34162a8ff36e1f5fa5be1">PACKET_BP_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6633208d4398d0e353fb6c7241672c0e">PACKET_PVP_ENTRY_COUNT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea56442ab9ef80b8c5d0843c87182a3a3b">PACKET_AUTO_RECOVERY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea127b22a1c878c4800ae1ca003702fadf">PACKET_AUTO_RECOVERY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaa54106e933f00977c5cdb6cc3687101">PACKET_ITEM_MIX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1741a26240fb41a611202965085bcea8">PACKET_ITEM_MIXED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7d40c362a77e8b09d1ebae4313bfed7f">PACKET_BIKE_BOOST_ON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5299390452052ccfbf5352bbfeabc1ef">PACKET_BIKE_BOOST_OFF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead739731360e0750dc532f70ced4b9ff1">PACKET_BIKE_DISMOUNT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadfacfae547d25098989cfe5db99f2846">PACKET_TEAM_FORM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea37aea9fcebaf8b9fd274abcb112ac1e8">PACKET_TEAM_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac87efe24e050c873ee6a504e3b4ec5b5">PACKET_TEAM_INVITED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea31325dab65001780265864c2aec7a3fd">PACKET_TEAM_ANSWER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1c0bd1431a4eac009e9065371addb01f">PACKET_TEAM_ANSWERED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaccf463b0a6d4ab37b6d933d156e5a121">PACKET_TEAM_MEMBER_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac74561e86b338269e54da57e1a92698b">PACKET_TEAM_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafb2761473ea4d81b3ee414da32c3884b">PACKET_TEAM_KICKED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea612b9dd2806ae5d87271af7c3de27c99">PACKET_TEAM_LEADER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea298728874785ee69964c64a2d9b99c79">PACKET_TEAM_LEADER_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea10c2ec242603ff3cdf365d802d6d7246">PACKET_TEAM_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beafa4ba4616e879740f9be9abea1186d3d">PACKET_TEAM_LEFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab7e67293550854331be7913187abbb9c">PACKET_TEAM_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaae869ca051e97372f0e48bc3b241ce31">PACKET_TEAM_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6d04529ea1deab9bd1e811785fc8908f">PACKET_TEAM_MEMBER_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5f6fa555d57694375b2be456959f0c23">PACKET_TEAM_INFO_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea51a2bf1d65ce8af6ac3a3e9eb902a85e">PACKET_TEAM_INFO_UPDATED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa6f129a7d8315fd997862f09e37f0484">PACKET_PVP_TEAM_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac3708846f26abf439aa7d1daf367a428">PACKET_PVP_TEAM_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea316afcfadd302a1975a37144b82c84e6">PACKET_ITEM_XP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab74b6f552d0ef0d19ab160d279ef3fc9">PACKET_EQUIPMENT_SPIRIT_FUSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab9492a198e7e3f400f38613a34090993">PACKET_EQUIPMENT_SPIRIT_FUSED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac055f8817afc0aee95748cae7dcfb182">PACKET_EVENT_MULTITALK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2c4cfd7e17131b81648f875ce966d6db">PACKET_DEMON_QUEST_PENDING</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea417d72bf1f7f2b318cdad353e3613270">PACKET_EVENT_GET_ITEMS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3636a8a3dd476169ab323efe92ce397b">PACKET_ERROR_MISC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead146bbfacc6612b78661b9ee8498030a">PACKET_EVENT_PLAY_BGM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3d49cbb45d4f89eea87e9d3a24cdf5df">PACKET_EVENT_STOP_BGM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1f3dc2e86a04af7a8e0d067fde44969d">PACKET_ITEM_DEPO_REMOTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea57e5d845ec5e9ddb7be14a2352f32868">PACKET_SOUL_POINT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa57a11f702a8efc53c341e64d6800d3b">PACKET_DEMON_SOLO_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabc9f5178348640ebc860d2e0c3ad41f5">PACKET_DEMON_SOLO_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf1b7cd0ff54ed83f618c3ba3daf14752">PACKET_DEMON_SOLO_DEATH_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6a6e09c1af12562d1e352e3527cf8438">PACKET_DIASPORA_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea63331c058b19ce70a52a6dbbca668922">PACKET_DIASPORA_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab2e3436ca03ea3a96354f0dba7c763d5">PACKET_DIASPORA_PHASE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea59806486ca0231e9f53b4dfda40e45db">PACKET_DIASPORA_MEMBER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea53301be212f4405758464fc64f669190">PACKET_DIASPORA_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6cfa126ea4201fd3edef2cdede298625">PACKET_DIASPORA_BASE_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea11025cfb457312abe47537d40e4049af">PACKET_DIASPORA_BASE_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6adb82b71b6bd9a70db4e711672aeef6">PACKET_DIASPORA_BASE_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3a9d2706f771ec74b684963c6428cd6c">PACKET_DIASPORA_BASE_CAPTURE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6bbc02223d21adf1f2566aac25d37f9b">PACKET_DIASPORA_TEAM_READY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea71e3deb2c3e8c8206071ad44735704ba">PACKET_DIASPORA_ENTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf7b5106bb7fec019d5d126f7508278d7">PACKET_DIASPORA_QUAKE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0910efe378dc58655b72b381452a4759">PACKET_TEAM_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5d4accb1761454426ff8a59f1a184421">PACKET_DEMON_DEPO_REMOTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabcb6f4a988ee32430fc9c5a57cb46f7a">PACKET_EXPERTISE_EXTENSION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0a4f1018b708c40b6ae23c6d483e3d88">PACKET_COMMON_SWITCH_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea25112ea37dc4b8b62da10168f7828261">PACKET_COMMON_SWITCH_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7a96a47543061b4534a4bd61ca75c4f2">PACKET_DEMON_FORCE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5d723aeeba7508a8f7da15e6e07fd1b0">PACKET_DEMON_FORCE_STACK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9ea0bd8c92effcc8092683176f4c0bb0">PACKET_CASINO_COIN_TOTAL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea72cf53bbd9c8eef66d66f8658418a7db">PACKET_TRIFUSION_SOLO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaba1800b510527b2e7ef134815340befe">PACKET_EQUIPMENT_SPIRIT_DEFUSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea554a71fb3f161336770c80132982732a">PACKET_DEMON_FORCE_GAUGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1d0184443deddaaa46d57fa138d6e5fa">PACKET_DEMON_FORCE_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0467e37f6d483b6273b26ab28e231dde">PACKET_UB_PHASE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea116e72b94367dbf7c25f0526320e49ba">PACKET_UB_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7638769546f717597c6e6d25c3545ca8">PACKET_UB_MEMBERS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac395e6412d315d2b243b9159710443b5">PACKET_UB_MEMBER_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9117628e119fe5d2fffbffbaede8cbb5">PACKET_UB_SPECTATE_PLAYER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea705455dc1a10eba12834fed0d04fd299">PACKET_UB_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea10c965481623e3128d7bf79c7967ff0a">PACKET_UB_RANKING</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf6074edf6d5dcc4d03f92e55f270542a">PACKET_UB_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab76b4cdf23a755ebc485b7d432bf1085">PACKET_UB_LOTTO_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf44595bb3ddc0812c27836650b43068d">PACKET_UB_LOTTO_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaefc16df6f09fcd1b3be0ecf96187eb70">PACKET_UB_LOTTO_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea25b0ca3eccf07564e85f34d2d5449d18">PACKET_UB_LOTTO_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab376ff0d189f3f484b7ee5386c37e640">PACKET_UB_RECRUIT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea426617dbd6a3848cad5789e8311ee22d">PACKET_UB_RECRUIT_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaee575977f8ed234cfae8c062704287e3">PACKET_SEARCH_ENTRY_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1d4c90cecb878ffaa1c3374b38b35509">PACKET_ITIME_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea3135a5dbd4cc5cd16de9bb275ec2b5ab">PACKET_ITIME_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea55e9de3a5cc0ebe5b571455f5d9e643b">PACKET_ITIME_TALK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea16ac85bad07c8e813ca50d8b112f7752">PACKET_CULTURE_MACHINE_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaf365b91e3ad813731b56b03a4079941">PACKET_CULTURE_MACHINE_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea4796af9f042d6e799bedea72b44e7517">PACKET_CULTURE_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea79bafab116b09caf72f7289d9ef8db1a">PACKET_CULTURE_MACHINE_ACCESS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9afae57166d3da1cad78c751b2c0682d">PACKET_CULTURE_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2ac55ce9ae2c57234d586b7e19ac95b7">PACKET_CULTURE_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beabaa715feed59a7bbaa6ed39427c715f5">PACKET_CULTURE_COMPLETE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea640bf354575f7f25bb0adb7a52a93a40">PACKET_CULTURE_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa22184975ab3ceaaf8e5ad03caa0ec35">PACKET_CULTURE_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac7f59f78ab2e54c59ef39b9ecbf4d115">PACKET_SKILL_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea11190ad15f20a8867b35a91207914ee0">PACKET_EQUIPMENT_MOD_EDIT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab38189585688b7beed4f1cbe22284807">PACKET_PATTRIBUTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea80c2d098a36fa3f9b3ae1941035662f2">PACKET_PATTRIBUTE_DEADLINE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa9e5a72baeba3dfd99102aac952b8357">PACKET_MISSION_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea705186988e3e6f8ce7ae8067b816a71c">PACKET_MISSION_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beadff86c205c06a80070d5ff245104453a">PACKET_GAME_OVER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea1386c07b7ea71b2dc84f5f8ab8776f35">PACKET_MITAMA_REUNION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab8f2b90c522248ccce957a003bb9f7fd">PACKET_MITAMA_RESET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea30a8a863c773691ef66b44898be88d5f">PACKET_DEMON_DEPO_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf4b7ca3517a9a6062fb44915d6a378ad">PACKET_DEMON_EQUIP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa4563b667ee210b7d11fa54aeb32d01b">PACKET_DEMON_STATS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea8136b54f6a4c5b60ce4acbb0487f33d3">PACKET_BARTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beae7d82d6cc4489251b433275c4410cf92">PACKET_PENTALPHA_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea97abbe0ddc5e3608864a149bc4d3aee2">PACKET_PENTALPHA_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaf273e8a37600fb009fbe955fc726406a">PACKET_COWRIE_BETHEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea573911a512b52138835932891cfc3914">PACKET_SKILL_POINT_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea83dda8ccd440bf7aea81c7d6da5fde49">PACKET_WORLD_BONUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea45f4a81796d899687ddf2e5c1a4bcec5">PACKET_BLACKLIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea74c2b8f3a84ad89d210a4cb9af1f6346">PACKET_BLACKLIST_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea93d44a104649c5a89b0338b4934e12b7">PACKET_DESTINY_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea97a1061fdce5aa9232b07114a2c51cbe">PACKET_DESTINY_BOX_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5165e3afb4ba14c64946bb8133cbfc92">PACKET_DESTINY_BOX_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7c0c9720836e1845b71dfe7fb11a53a9">PACKET_DESTINY_LOTTO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab34f249c0829baf90f94da28eb25edbf">PACKET_DIGITALIZE_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab7920e1352fcc4fdd15199bc0b05e0ca">PACKET_DIGITALIZE_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea32a089283f42902ab211c7bc7c6fb740">PACKET_DIGITALIZE_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaacda800602d3dde92df2b6ff1cd05fc1">PACKET_DIGITALIZE_POINTS_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea5955beabcfcf134a3d0a40ac3cb4bffa">PACKET_DIGITALIZE_LEVEL_UP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea476990e248d38e659534fbe155c7ff30">PACKET_DIGITALIZE_ASSIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea124a0dfb9b8904732ec1f04831a9b008">PACKET_DIGITALIZE_ASSIST_LEARN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0f91bdc4a40fdf49e680b408a31371ed">PACKET_DIGITALIZE_ASSIST_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea6e280a1218310d3bacb4fc4ee4179d05">PACKET_VA_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea9db520e64a715a41d37a8b0dcf8f3154">PACKET_VA_BOX_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead23f3837d98490e2bdd7edd9f4bb58b9">PACKET_VA_BOX_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beac3bba8d1d5aeb510693577752e32c344">PACKET_VA_CHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea13fd0fb8831b7bcd89b64b4d78ffe243">PACKET_VA_CHANGED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea0ae1f2517dd38705e72c4c8a7da05cec">PACKET_VA_BOX_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bead7d9387f13087eaec98845be09be7e96">PACKET_DIGITALIZE_DUNGEON_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaebf6478ad6f19084b8adba30277794b8">PACKET_DIGITALIZE_DUNGEON_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea44cb135911cab59549cf5c3fc167227d">PACKET_DIGITALIZE_DUNGEON_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaaac692ee4f52ce3e030cd43ba25739d7">PACKET_ZIOTITE_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea8f4b61651c74a5e1d60cfe625f009a41">PACKET_TEAM_MEMBER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea99cfce234fdd6a20bab4ca15929c3707">PACKET_MULTIZONE_BOSS_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea2820b9a15ed7c655481fbdb060e55bd8">PACKET_MULTIZONE_BOSS_KILLED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beab220aee839a26b01c6bccbeaecce469e">PACKET_ALLY_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea8c0fadad741ce5fa8ec82b7fd0aaddb2">PACKET_REUNION_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea7275fe25871c4fbe328cb42eddcb847a">PACKET_REUNION_EXTRACT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41bea467fae6558c4fbddbd9f3aca6f18deb3">PACKET_REUNION_INJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa359d50cd6a77aee6fa5244b6ea2bf8c">PACKET_AMALA_SERVER_VERSION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaea64c0b9937e0f44bc82d4705d7bcbd5">PACKET_AMALA_ACCOUNT_DUMP_HEADER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a38e2caadda01ef50c9b24c706a5a41beaa44ac804a2960c5056d6d8e69e6e2424">PACKET_AMALA_ACCOUNT_DUMP_PART</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>CharacterLoginStateFlag_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>a1a2a809878d0e32407e7819211ed6065</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065ab89c25bf8229ae4bc712cfd759d78ca3">CHARLOGIN_STATUS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a5ad21560c7fa03ffffc678732a7ae92a">CHARLOGIN_ZONE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a6b2b2f1af1b0004864ab1dca1024b953">CHARLOGIN_CHANNEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a08f50f902b6a15a8b2fd756bcffe3f41">CHARLOGIN_BASIC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065aa8f6d3e53b63800c2d41be9f58473564">CHARLOGIN_MESSAGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a046d0b9865dd1ae3ec05f33ff3a1c02d">CHARLOGIN_FRIEND_UNKNOWN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065aab8d2bd243e34d96d35995697d30045f">CHARLOGIN_FRIEND_FLAGS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065ac4718c469106636bcd2f4bb1cfe03b42">CHARLOGIN_PARTY_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a3a3ed388185add44c2a371ac82768a8c">CHARLOGIN_PARTY_DEMON_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065a452aa559f2dec65026d11a30803f84c6">CHARLOGIN_PARTY_ICON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a1a2a809878d0e32407e7819211ed6065ad87ebc768b46560f0187dbd2bba85078">CHARLOGIN_PARTY_FLAGS</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChatType_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_PARTY</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010aa94167ef9f87e0b02dfaab093c58c89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_SHOUT</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010af2c29a12bc9d916493c0fb5eebc4f4d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_SAY</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010a550dd3927cdf902cc8786b3e27c698ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_TELL</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010aabf2e1769db8bb5b226dd0166e5c431b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_SELF</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010a505531f048a52de848cecd91a3cc2100</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_CLAN</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010a24a9a80b08a5e0a8d03d359adb9e9e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VERSUS</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010a428985635cb6ffbe58f5ba71c2ac2d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_TEAM</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af43ab2fb5a01377bf9103b0be1f66010ae57e557911b8a7708036b89ee1168b37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClientToChannelPacketCode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>ad7e1312b08bd45b7b520a77fb2c872cb</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba945b244bd641288cdfbec4e686886c1a">PACKET_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba70f91c82079c2a3e3b4f7a8727ad932a">PACKET_AUTH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0220a4be485af0097c757cbd5116ee3c">PACKET_SEND_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7191eb92b86c19094737c654a33d316a">PACKET_LOGOUT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2b184fe0a34cfe93cb6126d26b1ad13d">PACKET_POPULATE_ZONE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabdac1a7ca61aa8e3fe0bf83de4dd5fec">PACKET_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba49a47ccdeca09edbe6222820c7651b0e">PACKET_PIVOT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaaa22701dbb20d34b881b9c85d3e33308">PACKET_SYNC_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5ac2cb7ee2d1c9024b37db376e4e72dd">PACKET_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0621ddc3de0f07f7fdcaa7737f492659">PACKET_TELL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba88fbc6ed5544714277852dc495f887ff">PACKET_SKILL_ACTIVATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1bfe452ae1fd7a0bfb6614374476dab2">PACKET_SKILL_EXECUTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae4c65ff5d1e476afcc5454bd2e57ce83">PACKET_SKILL_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaae85f93934b46d60178d88740e30d791">PACKET_SKILL_TARGET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba3ee91ecd02a3b676a0f639a403127c6d">PACKET_EXPERTISE_DOWN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9e9b52d0ab9f3d3092eead48906a02d4">PACKET_ALLOCATE_SKILL_POINT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9aed4e947796cff4dc8be9e1a3eb556d">PACKET_TOGGLE_EXPERTISE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab30070f7c932dbabf5ac3c604616d272">PACKET_LEARN_SKILL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbafd8f11c0d9277899844fc7d84951c474">PACKET_DEMON_SKILL_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba40f621375d9c99e23a374451536b074d">PACKET_KEEP_ALIVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaab5fa205a265433c4667a7c013815329">PACKET_FIX_OBJECT_POSITION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba851dfe15e9115c0993364a4d83386c0a">PACKET_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba25fa147566070422c39d234514ea5894">PACKET_DEMON_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba496e698a8c3fc5f4143a58d5f265a0ed">PACKET_DEMON_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae480f69d735c32b1b7baef623079ff1d">PACKET_DEMON_BOX_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba836391748341e9f0e09dc526ec4bcc62">PACKET_CHANNEL_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaad7223a591c6786e47b0bcc3d5239964">PACKET_REVIVE_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaecd00cde91baa910d67ea009c854dd69">PACKET_STOP_MOVEMENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf8e4968fb9f82fe66b858d8600e22a9c">PACKET_SPOT_TRIGGERED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba31cc7e2827789ef6479faa41f427703b">PACKET_WORLD_TIME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5ec2b5a7a2d7e69f7db8e18081d885dd">PACKET_ITEM_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa85a1b92a7fbc2e02522564012f76dc6">PACKET_ITEM_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa6ecfcdf575aee714bbd67acfa07de7f">PACKET_ITEM_DROP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba85ae94bffda83d6ddfb507c83db324a9">PACKET_ITEM_STACK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7b896ec980af527f2ca911bfd5bc0cef">PACKET_EQUIPMENT_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba85d1e4b7251686499dce51d84c85d126">PACKET_TRADE_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbacf605e4605496da4fbe302707a0a8fe9">PACKET_TRADE_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaeacb73ac7f50cfc2e72836759ceaba8d">PACKET_TRADE_ADD_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf5f48c3de56ca0ff3d9b7ab09e9d1263">PACKET_TRADE_LOCK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa0a52446c938be6369120df6fe24b4a9">PACKET_TRADE_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba179cd320cfb5a43adb6c64c6da4ad3d9">PACKET_TRADE_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4102b092e26176f7a712bb2689bdfbce">PACKET_LOOT_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0becd01a1b3290e46664beb22f73fbdf">PACKET_CASH_BALANCE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4ea31945b8c5d2a0ae10c20e0724666a">PACKET_SHOP_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9f33fc3aece4b23eb0de61e272f5d22d">PACKET_SHOP_BUY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1d30a40604651e0fb696898b892e8f79">PACKET_SHOP_SELL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad9a12a9c4727ebb204d8c4d1a908c84a">PACKET_DEMON_BOX_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba80709cefbeb49241317902340639bdf0">PACKET_DEMON_DISMISS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6021615de6e5fb55595e7fc0f1e6d10d">PACKET_POST_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9697e4cebb6f34424dd91b65520b3953">PACKET_POST_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1fddeb6efd031d655ab72ca81e7b1e12">PACKET_POST_GIFT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6dd6d812b5439ea315ecb4976cd61e5a">PACKET_HOTBAR_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6eab59edf893a6a25b9586bb8884f095">PACKET_HOTBAR_SAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0d0d849fa6abf1b669cde266718e037b">PACKET_EVENT_RESPONSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac90be09ce8ed393ab511dd00667bd9fa">PACKET_VALUABLE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5c2a2079c3d7cf92a0d8586fb3f3b5c4">PACKET_OBJECT_INTERACTION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaab901de69872990dfe8150776da111f9">PACKET_FRIEND_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad83e51795f1d068f53e3aa908d89160c">PACKET_FRIEND_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabb6c2c3daf1a4561fedde025b7d62170">PACKET_FRIEND_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1abe52aa72ca7b698fc4619076903cce">PACKET_FRIEND_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab946e412a3087a029a20fdec1c284da7">PACKET_FRIEND_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabe0f8f6d7dba5bbd09ef9a5b6ffa8b91">PACKET_PARTY_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaec2a5def316bc7f2a338688ee6560b63">PACKET_PARTY_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf1480b1ce3245e91f94619720af142ba">PACKET_PARTY_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba05c3e7da50ec33bc6672f241b66fd411">PACKET_PARTY_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa09b710adb1b21c504ab482b95d2e7b7">PACKET_PARTY_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf92f0d84267d1c5d65a24e4dda234e81">PACKET_PARTY_LEADER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2615b17a3920704af400281fe9508b59">PACKET_PARTY_DROP_RULE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba3d2dae337c0d95f351cbc8585b88ec8a">PACKET_PARTY_MEMBER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6155ed269dc221ea3b6e070465f6727b">PACKET_PARTY_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba878b0d63ec4f27e120b05ccf4ac23b0d">PACKET_DEMON_FUSION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba82c35ed827dd3a538c8fdde3c6804957">PACKET_LOOT_DEMON_EGG_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4363f0c37196ac1de7e389e00cc3b265">PACKET_SYNC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5925ae761d0d198387493546d82a88f1">PACKET_SHOP_REPAIR</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf3dee30398d1f51188669923bdedda39">PACKET_ROTATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa5ae590c8d9f3d30c39d978eb06cb114">PACKET_LOOT_BOSS_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf38cb8698055789dd42dc868b4ec29f1">PACKET_UNION_FLAG</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba56f1762b4dfd9f9c62c22a320e62571a">PACKET_ITEM_DEPO_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9c028be799fe0711a3b85bbafe3bd870">PACKET_DEPO_RENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba33950b0bd4b24aaa97417ae1348fea05">PACKET_LOOT_TREASURE_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac27ef29b6966960bc2ecc359df666496">PACKET_QUEST_ACTIVE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa398d33db022ad74b2fb58cdb1e07c1e">PACKET_QUEST_COMPLETED_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5f1c0d8848c320b38f2fb10e61ba3682">PACKET_BAZAAR_MARKET_OPEN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba920c485219edf0b6bf6ae1994d60e93a">PACKET_BAZAAR_MARKET_CLOSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae8a4d18b59b454bdb7b43458c19fd1ed">PACKET_BAZAAR_MARKET_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf130e709793928a10d3ad3e03b92c27d">PACKET_BAZAAR_ITEM_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5e276cf4244e4d999b01ba0a38320e51">PACKET_BAZAAR_ITEM_DROP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba09340c35fc0f93714a974f8d836ec959">PACKET_BAZAAR_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9731e46fcbc09750b9df8b97d41543d1">PACKET_BAZAAR_ITEM_BUY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0a300188442cd91e1fcc1fb6f92c8136">PACKET_BAZAAR_MARKET_SALES</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad0d015320616d339fb8a4991ec4f8e3a">PACKET_BAZAAR_ITEM_EXCHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba06d6b603ec479569fb62fb78c79dcccf">PACKET_SEARCH_ENTRY_SELF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba595460c9a3247261303bd1b83661b0f2">PACKET_SEARCH_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaae2e0267dad925e5e5a62c0c3aa054a6">PACKET_SEARCH_ENTRY_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0acec1d8e01da9e4a3a2d70ae573fe5d">PACKET_SEARCH_ENTRY_REGISTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7ca2c7368d7ab148d739f1c49bec0be7">PACKET_SEARCH_ENTRY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2fdfeb44d77255dffb2c315726554465">PACKET_SEARCH_ENTRY_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba52b353ff7d7707fc5cfec4f376e55f19">PACKET_SEARCH_APPLICATION_REPLY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9e58df318996645a0e6e49a3323f55d1">PACKET_CLAN_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba52ca69361dc5a950f3cdf68697fb27d9">PACKET_CLAN_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba69c5d8e17f8efc5419d438187306a27d">PACKET_CLAN_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbacc9fd309b63f639617f47ace595da786">PACKET_CLAN_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7bf4db26146e9b7e2c1ea3de36e08803">PACKET_CLAN_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5dc0d621534961ef4a590dc1b4b71870">PACKET_CLAN_MASTER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa129c15b6486c263f6df59bcde0417a6">PACKET_CLAN_SUB_MASTER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaedb3ab0976c8ea636a1672d720f33df2">PACKET_CLAN_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba890a8e7f37b7e9ae1751f6516868f780">PACKET_CLAN_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbafd2c296f20b96a91abd7e6f146031fa1">PACKET_CLAN_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0ebcbeb5d83f7ad9937c7c166c3f2038">PACKET_CLAN_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7d94625bc1271c33e7c5ec442f4a9cda">PACKET_CLAN_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaeb1ffbbda4a91ac1d8c21f8234ace149">PACKET_CLAN_FORM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7d15626345ab791bb0f79330873faa50">PACKET_ITEM_PRICE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba90dfa56f21032515716490b5cf1cc17d">PACKET_BAZAAR_STATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba401049a43f28126a6ed01a56b2b54c3f">PACKET_BAZAAR_CLERK_SET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba865ebc975cd5afdaab75261da9d68188">PACKET_BAZAAR_PRICE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba170bdbdffc842bc3c90a005a6aae680d">PACKET_BAZAAR_MARKET_INFO_SELF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba00fae3b7f2f1611c73f57cf766bd4444">PACKET_WARP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba22f01097355649da1d46eb571e3f6246">PACKET_SKILL_EXECUTE_INSTANT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba06e2de8410fab83359b501fb26c8e44f">PACKET_SYNC_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaae547935317f1d5183989e7226a0c84c">PACKET_DEMON_AI_SET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab802e2db7f51ba9c477eb786f641771a">PACKET_BAZAAR_INTERACT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5d4ac3eb9ab7bc80886e152ab954c75a">PACKET_SKILL_FORGET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6eb2837317b72dde413dfee88c2dde61">PACKET_BAZAAR_MARKET_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2cf737b4acb02df018114266d57754ee">PACKET_BAZAAR_MARKET_COMMENT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9d99f56847666df1f758845d0c824d53">PACKET_PARTY_RECRUIT_REPLY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba731a32ffa993785d10bfe1642f18a474">PACKET_PARTY_RECRUIT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4410aa4d82a6747979893955905733b4">PACKET_STATUS_ICON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba17cf74b2c995ca0af59df41e2a8b84cd">PACKET_MAP_FLAG</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba220617ee62de259fd23185f0719ca010">PACKET_ANALYZE_DEMON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbafbcfddd4a8f7ab50fb3640431f34ab94">PACKET_DEMON_COMPENDIUM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba3bf731d2eb8c7b9929fc6aaf588f82af">PACKET_ITEM_REPAIR_MAX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabbf15feeb1ad5d48527c3062efaf44f1">PACKET_APPEARANCE_ALTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba775d48833304909d6bb3533b702b6010">PACKET_ENTRUST_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac69a4b828d3e1d4e4c5568fced64b626">PACKET_ENTRUST_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad56ebda7b624d7957d79a1e51c3736af">PACKET_ENTRUST_REWARD_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba17e16f9f52bbc1d449a68e33e5302c03">PACKET_ENTRUST_REWARD_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba773f46ecc5decb5dfd26cb8f544ec849">PACKET_ENTRUST_REWARD_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba928670d3e8f57390254e9d4aa1274f8d">PACKET_ENTRUST_FINISH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba802b892a999e05a760ce1e3d9bb8a0f8">PACKET_DEMON_CRYSTALLIZE_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5552535b3851253aef89f824c53e3aba">PACKET_DEMON_CRYSTALLIZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0de301023acc2f0c34c67ef568b59f99">PACKET_ENCHANT_ITEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbadc6b9a7b25b0d43c116281ba735e15c1">PACKET_ENCHANT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbafafe75cfa88936d9ec956d9da0c2706e">PACKET_DUNGEON_RECORDS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba102374d3d5de7ae61a825ae6867bd0fd">PACKET_ANALYZE_DUNGEON_RECORDS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac99f403cc51aa2e9892aaf1c4c05f0ec">PACKET_ITEM_PROMO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba825584db540499461f33144f41463a50">PACKET_TRIFUSION_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab6dbd2882fefa97725623e644384e274">PACKET_TRIFUSION_DEMON_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba22074ca9996f0a72acd0b3e23fea8ac5">PACKET_TRIFUSION_REWARD_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf501fae4f0c227d1efbf020ef262370a">PACKET_TRIFUSION_REWARD_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba84cf619383db5aa5fd7e0a542582687d">PACKET_TRIFUSION_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf0bddefbc194ab5167a7dbf48dc636d3">PACKET_TRIFUSION_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5e8d14e710be836102f0ea5b2988858a">PACKET_CLAN_EMBLEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae38b54636461ac69333640539e882d00">PACKET_DEMON_FAMILIARITY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaef91d50d7914836d0650b9fb1992554a">PACKET_PLASMA_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba138398efec0ff1935557d4036ec312a2">PACKET_PLASMA_RESULT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7007e710ce6e0f1a2605427feb60c481">PACKET_PLASMA_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabb36832f142d960079d29fcce5c29439">PACKET_PLASMA_ITEM_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba8b6c99cfa4d0a51def9fb4112d120491">PACKET_PLASMA_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4e4a6f6c7681b4418a0754b7d375efaf">PACKET_TIME_LIMIT_SYNC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad2f16ef731e3f82b6c80bc86cb400d3d">PACKET_ITEM_DISASSEMBLE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba92b8cc511e83f4086982d70e6cc15361">PACKET_SYNTHESIZE_RECIPE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaaf28a9584e4d477b84f7433a802d8bff">PACKET_SYNTHESIZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1eae36e9fc3cef6692937603e59ccb3b">PACKET_EQUIPMENT_MODIFY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad0f851712a949a3652f6386e8b7727fd">PACKET_MATERIAL_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbadea32dca454aa143bc721f3f46184da6">PACKET_ANALYZE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2354643f85255e8f5fda77615e353167">PACKET_MATERIAL_EXTRACT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba358e58c26f868ff0b8cc4c5669020b0e">PACKET_MATERIAL_INSERT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba610db5dcc14eb46c31fe1ec9eff97184">PACKET_ITEM_EXCHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba8049eff60db6ba42175f0681fc9434ce">PACKET_COMP_SHOP_OPEN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbabe37486e398ea9495d6dc6ffe987c914">PACKET_COMP_SHOP_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae7ee5fb610ba987a81143620bcfa2067">PACKET_FUSION_GAUGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba61392cc8a5210a2fd8530b68e344aabf">PACKET_TITLE_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4b26d785a5903576f9ee8a61107cf6b0">PACKET_TITLE_ACTIVE_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba983f93401472870f4b08312cc8e40803">PACKET_TITLE_BUILD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaaee445d993cc9fdbc8e506792a13954c">PACKET_DEMON_QUEST_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba40f3b42098277bac88d95e64f3013e88">PACKET_DEMON_QUEST_ACCEPT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba99171b65c900b87b24d7ce4237b1466c">PACKET_DEMON_QUEST_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0938d3419134bc6b2a541ae05b15af90">PACKET_DEMON_QUEST_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbadc159b003599fe28a24c8d76eae1331f">PACKET_DEMON_QUEST_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0c49f0db388fa484a930d977e5b66d5f">PACKET_DEMON_QUEST_ACTIVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba8c182adac8c03b9e573a6a52e2e6bbe5">PACKET_PLAYER_SETTINGS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad1e66953faa74e73f14783a7f965d344">PACKET_DEMON_LOCK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5e312ff306368d4055e2c246232abd3e">PACKET_DEMON_REUNION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba71c169dce10ed444c042f13c183ffc81">PACKET_DEMON_QUEST_REJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba13ffb662505c9e1a3da1b97bfffbe768">PACKET_PVP_CONFIRM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba52cd9dd69a3ffe4f5b70ce05b1f3cf67">PACKET_PVP_BASE_CAPTURE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac4122949cd8d7fbf64c49a17d40bf1df">PACKET_PVP_BASE_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba80541d28f041c4e6e1870b9466a50efb">PACKET_PVP_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4194da94cab9509e21a9f4778f999bb3">PACKET_PVP_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2c349f82da087961a4b98393d1acf095">PACKET_PVP_CHARACTER_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba99e0e3b2c9d2d9ab6ea4f7a40803e739">PACKET_PVP_WORLD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba56442ab9ef80b8c5d0843c87182a3a3b">PACKET_AUTO_RECOVERY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaaa54106e933f00977c5cdb6cc3687101">PACKET_ITEM_MIX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7d40c362a77e8b09d1ebae4313bfed7f">PACKET_BIKE_BOOST_ON</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5299390452052ccfbf5352bbfeabc1ef">PACKET_BIKE_BOOST_OFF</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad739731360e0750dc532f70ced4b9ff1">PACKET_BIKE_DISMOUNT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbadfacfae547d25098989cfe5db99f2846">PACKET_TEAM_FORM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba37aea9fcebaf8b9fd274abcb112ac1e8">PACKET_TEAM_INVITE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba31325dab65001780265864c2aec7a3fd">PACKET_TEAM_ANSWER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac74561e86b338269e54da57e1a92698b">PACKET_TEAM_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba612b9dd2806ae5d87271af7c3de27c99">PACKET_TEAM_LEADER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba10c2ec242603ff3cdf365d802d6d7246">PACKET_TEAM_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab7e67293550854331be7913187abbb9c">PACKET_TEAM_CHAT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaae869ca051e97372f0e48bc3b241ce31">PACKET_TEAM_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6d04529ea1deab9bd1e811785fc8908f">PACKET_TEAM_MEMBER_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5f6fa555d57694375b2be456959f0c23">PACKET_TEAM_INFO_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab74b6f552d0ef0d19ab160d279ef3fc9">PACKET_EQUIPMENT_SPIRIT_FUSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad7d4e9fb88484d535f27557bf43b1b2c">PACKET_RECEIVED_PLAYER_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba87043da8f46abee5c390c7d0929a1471">PACKET_RECEIVED_LISTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2c4cfd7e17131b81648f875ce966d6db">PACKET_DEMON_QUEST_PENDING</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1f3dc2e86a04af7a8e0d067fde44969d">PACKET_ITEM_DEPO_REMOTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba3a9d2706f771ec74b684963c6428cd6c">PACKET_DIASPORA_BASE_CAPTURE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba71e3deb2c3e8c8206071ad44735704ba">PACKET_DIASPORA_ENTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5d4accb1761454426ff8a59f1a184421">PACKET_DEMON_DEPO_REMOTE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0a4f1018b708c40b6ae23c6d483e3d88">PACKET_COMMON_SWITCH_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba25112ea37dc4b8b62da10168f7828261">PACKET_COMMON_SWITCH_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7a96a47543061b4534a4bd61ca75c4f2">PACKET_DEMON_FORCE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba5d723aeeba7508a8f7da15e6e07fd1b0">PACKET_DEMON_FORCE_STACK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9ea0bd8c92effcc8092683176f4c0bb0">PACKET_CASINO_COIN_TOTAL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba72cf53bbd9c8eef66d66f8658418a7db">PACKET_TRIFUSION_SOLO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaba1800b510527b2e7ef134815340befe">PACKET_EQUIPMENT_SPIRIT_DEFUSE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1d0184443deddaaa46d57fa138d6e5fa">PACKET_DEMON_FORCE_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9117628e119fe5d2fffbffbaede8cbb5">PACKET_UB_SPECTATE_PLAYER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba12a485cdc5bb6e14217f5e9054557e83">PACKET_UB_PROCEED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf6074edf6d5dcc4d03f92e55f270542a">PACKET_UB_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba18af58c7a5bdd2f30917864c3eb8ae80">PACKET_UB_LOTTO_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba25b0ca3eccf07564e85f34d2d5449d18">PACKET_UB_LOTTO_JOIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaee575977f8ed234cfae8c062704287e3">PACKET_SEARCH_ENTRY_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1d4c90cecb878ffaa1c3374b38b35509">PACKET_ITIME_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba55e9de3a5cc0ebe5b571455f5d9e643b">PACKET_ITIME_TALK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba4796af9f042d6e799bedea72b44e7517">PACKET_CULTURE_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba79bafab116b09caf72f7289d9ef8db1a">PACKET_CULTURE_MACHINE_ACCESS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9afae57166d3da1cad78c751b2c0682d">PACKET_CULTURE_START</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba2ac55ce9ae2c57234d586b7e19ac95b7">PACKET_CULTURE_ITEM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaa22184975ab3ceaaf8e5ad03caa0ec35">PACKET_CULTURE_END</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba11190ad15f20a8867b35a91207914ee0">PACKET_EQUIPMENT_MOD_EDIT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba80c2d098a36fa3f9b3ae1941035662f2">PACKET_PATTRIBUTE_DEADLINE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba705186988e3e6f8ce7ae8067b816a71c">PACKET_MISSION_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbadff86c205c06a80070d5ff245104453a">PACKET_GAME_OVER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba1386c07b7ea71b2dc84f5f8ab8776f35">PACKET_MITAMA_REUNION</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbab8f2b90c522248ccce957a003bb9f7fd">PACKET_MITAMA_RESET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba30a8a863c773691ef66b44898be88d5f">PACKET_DEMON_DEPO_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbaf4b7ca3517a9a6062fb44915d6a378ad">PACKET_DEMON_EQUIP</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba8136b54f6a4c5b60ce4acbb0487f33d3">PACKET_BARTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbae7d82d6cc4489251b433275c4410cf92">PACKET_PENTALPHA_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba3957ad3d61a99e64122c859cfab9d290">PACKET_QUEST_TITLE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba81ddeae1cfd38fe67b7757064d343d94">PACKET_REPORT_PLAYER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba45f4a81796d899687ddf2e5c1a4bcec5">PACKET_BLACKLIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba74c2b8f3a84ad89d210a4cb9af1f6346">PACKET_BLACKLIST_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba97a1061fdce5aa9232b07114a2c51cbe">PACKET_DESTINY_BOX_DATA</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7c0c9720836e1845b71dfe7fb11a53a9">PACKET_DESTINY_LOTTO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba32a089283f42902ab211c7bc7c6fb740">PACKET_DIGITALIZE_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba476990e248d38e659534fbe155c7ff30">PACKET_DIGITALIZE_ASSIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba124a0dfb9b8904732ec1f04831a9b008">PACKET_DIGITALIZE_ASSIST_LEARN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0f91bdc4a40fdf49e680b408a31371ed">PACKET_DIGITALIZE_ASSIST_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba6e280a1218310d3bacb4fc4ee4179d05">PACKET_VA_BOX</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9db520e64a715a41d37a8b0dcf8f3154">PACKET_VA_BOX_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad23f3837d98490e2bdd7edd9f4bb58b9">PACKET_VA_BOX_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbac3bba8d1d5aeb510693577752e32c344">PACKET_VA_CHANGE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba0ae1f2517dd38705e72c4c8a7da05cec">PACKET_VA_BOX_MOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba8c0fadad741ce5fa8ec82b7fd0aaddb2">PACKET_REUNION_POINTS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba7275fe25871c4fbe328cb42eddcb847a">PACKET_REUNION_EXTRACT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba467fae6558c4fbddbd9f3aca6f18deb3">PACKET_REUNION_INJECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba478017ad3c82ec8bde6614801343b15f">PACKET_UNUSED_FFEB</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba9cf734cb74b497277cfc9e54b94815ed">PACKET_UNUSED_FFEC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cba321deb0bba7643f08638c623f9aff692">PACKET_UNUSED_FFED</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ad7e1312b08bd45b7b520a77fb2c872cbad903757ae1fd353520f8b2033827c119">PACKET_AMALA_REQ_ACCOUNT_DUMP</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ClientToLobbyPacketCode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>ab40dbc87ae419db0c2393304b4d9a30a</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aa945b244bd641288cdfbec4e686886c1a">PACKET_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aa70f91c82079c2a3e3b4f7a8727ad932a">PACKET_AUTH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aaaeed1c707db94bc263bbd44fa60d7dfa">PACKET_START_GAME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aacc7df8d03993be21c67462bbf59eec86">PACKET_CHARACTER_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aad8443a89b50fbcdfeb68bc04f3e75316">PACKET_WORLD_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aa3dfbbadd1ce6c259a29312b2451df25c">PACKET_CREATE_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aae005b2b6352ab8adae1890676de77c25">PACKET_DELETE_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aa1d17988acc170955695f3314e7a6c449">PACKET_QUERY_PURCHASE_TICKET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ab40dbc87ae419db0c2393304b4d9a30aad70235eb12d8c85185ee0865c891777c">PACKET_PURCHASE_TICKET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InternalPacketAction_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>a73ebd7a62e3da3adfcfef62b684d440d</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440dab1bf34472f703effaa9dd67ead3c53e6">PACKET_ACTION_ADD</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da9170e41f6abb58975033ba7eca9e62d4">PACKET_ACTION_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440daab69665b228aa47e5b1c406480e2c143">PACKET_ACTION_REMOVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da49303cdad205eace1c9c4b8daac77f10">PACKET_ACTION_YN_REQUEST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da625336e5bbc9f09aa54bf010073d632c">PACKET_ACTION_RESPONSE_YES</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da9f11ef81b83928b934353acaa92ce37d">PACKET_ACTION_RESPONSE_NO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da37f753b93dc69d0d3a2bd8188a8eadde">PACKET_ACTION_GROUP_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da4332418cca9ecf658ca8a8e425c62327">PACKET_ACTION_GROUP_LEAVE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da2219012a0f1691858c7bec8d98c80694">PACKET_ACTION_GROUP_DISBAND</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440dad098510b2e0a75237484d53689057691">PACKET_ACTION_GROUP_LEADER_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440dab054318f1886709b2d8f5a807208543f">PACKET_ACTION_GROUP_KICK</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da069c3a532268bef6ae2d12f32b61fa2d">PACKET_ACTION_CLAN_EMBLEM_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440da8441174a3e9741905a275a2f35c28634">PACKET_ACTION_PARTY_DROP_RULE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a73ebd7a62e3da3adfcfef62b684d440dad4f866a1be9c5e6a746ae3025505b45a">PACKET_ACTION_TEAM_ZIOTITE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>InternalPacketCode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>ac0ff7a56e53798307cd98b3c35519773</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a0d7b6eeac26207d367fbb951ad05ab61">PACKET_GET_WORLD_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773ad8bd5c300eca41f6343b242e3cc58123">PACKET_SET_WORLD_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a1e7871f0b0208c58f60d96d040d10aa9">PACKET_SET_CHANNEL_INFO</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773abbc8ac97054fd7174bb8037a55472ee4">PACKET_ACCOUNT_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a812d1ce18785a9095fd5d8c604cc78fd">PACKET_ACCOUNT_LOGOUT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a2b0568d4c4f9d9f1653fc1909c4d1d2c">PACKET_RELAY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a36a946a9289b16e1afa8691e67495302">PACKET_DATA_SYNC</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a6931637f7729145abda496c58d22d235">PACKET_CHARACTER_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a080069a97961d8c3247e6459257285ae">PACKET_FRIENDS_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a7da1c7ae74683633378e7a8a2cf8a2e9">PACKET_PARTY_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a3de8212cf952bdc5024d5af8564d7d57">PACKET_CLAN_UPDATE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a054b82609d1095d3e82dc68c8ad2c0c4">PACKET_WEB_GAME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac0ff7a56e53798307cd98b3c35519773a59d909e1cd4c9fb7b5d64362ee843997">PACKET_TEAM_UPDATE</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LobbyToClientPacketCode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>a4912cce563ed7daba0dfa2940ecdff08</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08a945b244bd641288cdfbec4e686886c1a">PACKET_LOGIN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08a70f91c82079c2a3e3b4f7a8727ad932a">PACKET_AUTH</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08aaeed1c707db94bc263bbd44fa60d7dfa">PACKET_START_GAME</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08acc7df8d03993be21c67462bbf59eec86">PACKET_CHARACTER_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08ad8443a89b50fbcdfeb68bc04f3e75316">PACKET_WORLD_LIST</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08a3dfbbadd1ce6c259a29312b2451df25c">PACKET_CREATE_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08ae005b2b6352ab8adae1890676de77c25">PACKET_DELETE_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08a1d17988acc170955695f3314e7a6c449">PACKET_QUERY_PURCHASE_TICKET</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="a4912cce563ed7daba0dfa2940ecdff08ad70235eb12d8c85185ee0865c891777c">PACKET_PURCHASE_TICKET</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogoutPacketAction_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>af2661630d2a072813aab00257459004a</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="af2661630d2a072813aab00257459004aa5ccca041d0b460f23bd073b8d12dec13">LOGOUT_PREPARE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="af2661630d2a072813aab00257459004aac34404b0f22044e94c8bb6a35241cdf7">LOGOUT_CANCEL</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="af2661630d2a072813aab00257459004aa3381c00f6fdb4b3af792093352650d10">LOGOUT_DISCONNECT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="af2661630d2a072813aab00257459004aa4975440631ac0f07dd44d1f0ccab0db0">LOGOUT_CHANNEL_SWITCH</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PacketRelayMode_t</name>
      <anchorfile>PacketCodes_8h.html</anchorfile>
      <anchor>ac61248191d64924d49e7b4368758bdb7</anchor>
      <arglist></arglist>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7af14bc559a7e07714c08b3b757678a053">RELAY_FAILURE</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7a93de700749dfc84cec3833dcb94f345e">RELAY_ACCOUNT</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7a353351cb91885f31ee7c183ef6473ecc">RELAY_CHARACTER</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7a05d84c3421bc876b495caed19e790c2b">RELAY_CIDS</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7a36ff872e74c505bbbed06edbf2ded270">RELAY_PARTY</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7a74847ca926d934e0e315ecc26ba0820e">RELAY_CLAN</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7ac6a9605d9d737db8caf12d47a5f30e7c">RELAY_TEAM</enumvalue>
      <enumvalue file="PacketCodes_8h.html" anchor="ac61248191d64924d49e7b4368758bdb7aaecb1a74f75f25ec46c51baea95fa876">RELAY_ALL</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>PacketException.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PacketException_8cpp</filename>
    <includes id="PacketException_8h" name="PacketException.h" local="yes" imported="no">PacketException.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>PacketException.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PacketException_8h</filename>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <class kind="class">libcomp::PacketException</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PACKET_EXCEPTION</name>
      <anchorfile>PacketException_8h.html</anchorfile>
      <anchor>abffdd5f17353b2e9363beacac011cf30</anchor>
      <arglist>(msg, packet)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PacketParser.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PacketParser_8h</filename>
    <class kind="class">libcomp::PacketParser</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>PacketParser_8h.html</anchorfile>
      <anchor>a96f0f00bdb726896de4d3bba83da1b0d</anchor>
      <arglist>(name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Packets.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Packets_8h</filename>
    <includes id="PacketParser_8h" name="PacketParser.h" local="yes" imported="no">PacketParser.h</includes>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Parsers</namespace>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacelibcomp_1_1Parsers.html</anchorfile>
      <anchor>aa24907e6642a4274dc87247d735b3828</anchor>
      <arglist>(Placeholder)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PacketStream.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PacketStream_8h</filename>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <includes id="ReadOnlyPacket_8h" name="ReadOnlyPacket.h" local="yes" imported="no">ReadOnlyPacket.h</includes>
    <class kind="class">libcomp::BasicPacketStream</class>
    <class kind="class">libcomp::PacketStream</class>
    <class kind="class">libcomp::ReadOnlyPacketStream</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>PEFile.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PEFile_8cpp</filename>
    <includes id="PEFile_8h" name="PEFile.h" local="yes" imported="no">PEFile.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FileHdr</name>
      <anchorfile>PEFile_8cpp.html</anchorfile>
      <anchor>a501be6aa5155a64d850a39d39f5b93c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OptHdr</name>
      <anchorfile>PEFile_8cpp.html</anchorfile>
      <anchor>a4be49fec4223b802a1089f7d1ce82eaf</anchor>
      <arglist>(val)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PEFile.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PEFile_8h</filename>
    <includes id="PEFormat_8h" name="PEFormat.h" local="yes" imported="no">PEFormat.h</includes>
    <class kind="class">libcomp::PEFile</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>PEFormat.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PEFormat_8h</filename>
    <class kind="struct">IMAGE_DATA_DIRECTORY</class>
    <class kind="struct">IMAGE_DOS_HEADER</class>
    <class kind="struct">IMAGE_FILE_HEADER</class>
    <class kind="struct">IMAGE_NT_HEADERS32</class>
    <class kind="struct">IMAGE_NT_HEADERS64</class>
    <class kind="struct">IMAGE_OPTIONAL_HEADER32</class>
    <class kind="struct">IMAGE_OPTIONAL_HEADER64</class>
    <class kind="struct">IMAGE_SECTION_HEADER</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_DOS_SIGNATURE</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>acde26d24b0ff46215cbd029d8ae87e4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_FILE_MACHINE_AMD64</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a95a1332c20d1536ba0db8f7edcff10e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_FILE_MACHINE_I386</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a20dfd221df247cc9eb08e29f5c534aba</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_FILE_MACHINE_IA64</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>aa1a776b231fd52bb0f78002be01646fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_NT_OPTIONAL_HDR32_MAGIC</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a3499045111a3d860aa8137fc56fe4a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_NT_OPTIONAL_HDR64_MAGIC</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a47b43b60cdfbc674cb8d9ac9d43f7615</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_NT_SIGNATURE</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a83570e3e2fba8cb7c2abc8b3eee47d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_NUMBEROF_DIRECTORY_ENTRIES</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a75892b738729f0de64146086f462defe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_ROM_OPTIONAL_HDR_MAGIC</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>ac35d97e240ebabe106f38e25f540c064</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_SIZEOF_SHORT_NAME</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a98e3229bbf99bf35eaebf248b173d235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_SUBSYSTEM_NATIVE</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>ab482af5872918b74879e670bdab84fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_SUBSYSTEM_WINDOWS_CUI</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a3557df821c197a07ae5431632a5fbe5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAGE_SUBSYSTEM_WINDOWS_GUI</name>
      <anchorfile>PEFormat_8h.html</anchorfile>
      <anchor>a5f4c0e8634b20979f7025acb7d5a0596</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PersistentObject.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PersistentObject_8cpp</filename>
    <includes id="PersistentObject_8h" name="PersistentObject.h" local="yes" imported="no">PersistentObject.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="DatabaseBind_8h" name="DatabaseBind.h" local="yes" imported="no">DatabaseBind.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a437bf8c16dc529fbaceddc55d492fb91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PersistentObject.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PersistentObject_8h</filename>
    <includes id="CString_8h" name="CString.h" local="no" imported="no">CString.h</includes>
    <includes id="Object_8h" name="Object.h" local="no" imported="no">Object.h</includes>
    <class kind="class">libcomp::PersistentObject</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Platform.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Platform_8h</filename>
    <includes id="PlatformLinux_8h" name="PlatformLinux.h" local="yes" imported="no">PlatformLinux.h</includes>
  </compound>
  <compound kind="file">
    <name>PlatformLinux.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PlatformLinux_8h</filename>
  </compound>
  <compound kind="file">
    <name>PlatformWindows.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PlatformWindows_8cpp</filename>
    <includes id="PlatformWindows_8h" name="PlatformWindows.h" local="yes" imported="no">PlatformWindows.h</includes>
  </compound>
  <compound kind="file">
    <name>PlatformWindows.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PlatformWindows_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Platform</namespace>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetLastErrorString</name>
      <anchorfile>group__Platform.html</anchorfile>
      <anchor>gae7164efca1459a057c11f602928c3c7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PopIgnore.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PopIgnore_8h</filename>
  </compound>
  <compound kind="file">
    <name>PushIgnore.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>PushIgnore_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>GCC_VERSION</name>
      <anchorfile>PushIgnore_8h.html</anchorfile>
      <anchor>adbba0f726fc66d7100916c683b7568ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Randomizer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Randomizer_8cpp</filename>
    <includes id="Randomizer_8h" name="Randomizer.h" local="yes" imported="no">Randomizer.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>Randomizer.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Randomizer_8h</filename>
    <class kind="class">libcomp::Randomizer</class>
    <namespace>libcomp</namespace>
    <member kind="define">
      <type>#define</type>
      <name>RNG</name>
      <anchorfile>Randomizer_8h.html</anchorfile>
      <anchor>a0d86a2bee95f162f95aacb8451b3078f</anchor>
      <arglist>(T, X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RNG64</name>
      <anchorfile>Randomizer_8h.html</anchorfile>
      <anchor>acd3a578cfbb94c7effe8b8794d53cc34</anchor>
      <arglist>(T, X, Y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RNG_DEC</name>
      <anchorfile>Randomizer_8h.html</anchorfile>
      <anchor>a1a7d1562431e3bb4c50da5d579c7b4c2</anchor>
      <arglist>(T, X, Y, P)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rbtree.c</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>rbtree_8c</filename>
    <includes id="rbtree_8h" name="rbtree.h" local="yes" imported="no">rbtree.h</includes>
    <member kind="typedef">
      <type>enum rbtree_node_color</type>
      <name>color</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a786432513abeb8100de8ae211712f552</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>rbtree_node</type>
      <name>node</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a8c1f9464116ab4c527547e92c9724c7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case1</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a36ec56c464ba7a7f314b35eceeb65a76</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case2</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>accc00ca045578a36a4aa7755be83c021</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case3</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>af44aad5bc17ab15d3074d6ca1a784fd0</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case4</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>af62c191d892aac4a6cc2d5e77000f802</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case5</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a6efc33b7a80e188ab721cea9fe8bbe39</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>delete_case6</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a9e69f51910fb18699421505fb345a107</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>grandparent</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>abf562740c7a1f7219166c4a00845b055</anchor>
      <arglist>(node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert_case1</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a821a715b275616cc4187b367fe6e795a</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert_case2</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a7d9831a4a65d7134aa38351b86e05c38</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert_case3</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>afe3b45547ff411a902bda378bb764746</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert_case4</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ade54173dd3bdcee97a99916fb7578e98</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>insert_case5</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a259da51e6f4be368cd90c37ee2ac23f6</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>lookup_node</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>aaac20695dbca619b90c1569f32b38a5f</anchor>
      <arglist>(rbtree t, void *key, compare_func compare)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>maximum_node</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ac226bc7bed6bab0870568f457593b42c</anchor>
      <arglist>(node root)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>new_node</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ab5fe6c3c20feb9b05a210be0ba6fc0fd</anchor>
      <arglist>(void *key, void *value, color node_color, node left, node right)</arglist>
    </member>
    <member kind="function">
      <type>color</type>
      <name>node_color</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>af7a8bb137db8cb7c419df03862f28e54</anchor>
      <arglist>(node n)</arglist>
    </member>
    <member kind="function">
      <type>rbtree</type>
      <name>rbtree_create</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a6cb98c437ab1b55ce029d1e72004b8d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rbtree_delete</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a456e5a5feb58302fb691eb396beb3e8d</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rbtree_insert</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ab270f697a3d4d6a4577f862f82c96352</anchor>
      <arglist>(rbtree t, rbtree_key key, rbtree_value value, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>rbtree_value</type>
      <name>rbtree_lookup</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>aeab456869068cc086be1b6e95cb6e380</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>rbtree_value</type>
      <name>rbtree_take</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>aaab036f8d92e4497fd078f837897bfac</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>replace_node</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ad67b5a2d52f43d521d351c5dfba7bc26</anchor>
      <arglist>(rbtree t, node oldn, node newn)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotate_left</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a5f327e2ef8c3c0683018e61c4b6bea1c</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>rotate_right</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a2ad01463e86c9ee81c7ffae4380dcc0b</anchor>
      <arglist>(rbtree t, node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>sibling</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a7f5e5d4bdc9503132e15324d59294b97</anchor>
      <arglist>(node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static node</type>
      <name>uncle</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>a38cbf570804d937873ab7a9b707a59f5</anchor>
      <arglist>(node n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>verify_properties</name>
      <anchorfile>rbtree_8c.html</anchorfile>
      <anchor>ac1e77c4aa87dec56a409d74550329bf3</anchor>
      <arglist>(rbtree t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>rbtree.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>rbtree_8h</filename>
    <class kind="struct">rbtree_node_t</class>
    <class kind="struct">rbtree_t</class>
    <member kind="define">
      <type>#define</type>
      <name>rbtree_nil_value</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a834c9e60aacb7bf1fbe66009aa498298</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>compare_func</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>aaffea432536bc1a1c81ab8efe734ded5</anchor>
      <arglist>)(rbtree_key left, rbtree_key right)</arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>rbtree_key</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a0af84d983b4a88d045e1712f98a87508</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>rbtree_value</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a40e1970b73acab4e3c84e46fee48b011</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>rbtree_node_color</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a2c355188576d22d8c3d068feb705383f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>RED</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a2c355188576d22d8c3d068feb705383faf80f9a890089d211842d59625e561f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>BLACK</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a2c355188576d22d8c3d068feb705383faf77fb67151d0c18d397069ad8c271ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>rbtree</type>
      <name>rbtree_create</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a6cb98c437ab1b55ce029d1e72004b8d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rbtree_delete</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>a456e5a5feb58302fb691eb396beb3e8d</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rbtree_insert</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>ab270f697a3d4d6a4577f862f82c96352</anchor>
      <arglist>(rbtree t, rbtree_key key, rbtree_value value, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>rbtree_value</type>
      <name>rbtree_lookup</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>aeab456869068cc086be1b6e95cb6e380</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
    <member kind="function">
      <type>rbtree_value</type>
      <name>rbtree_take</name>
      <anchorfile>rbtree_8h.html</anchorfile>
      <anchor>aaab036f8d92e4497fd078f837897bfac</anchor>
      <arglist>(rbtree t, rbtree_key key, compare_func compare)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReadOnlyPacket.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ReadOnlyPacket_8cpp</filename>
    <includes id="ReadOnlyPacket_8h" name="ReadOnlyPacket.h" local="yes" imported="no">ReadOnlyPacket.h</includes>
    <includes id="Endian_8h" name="Endian.h" local="yes" imported="no">Endian.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="PacketException_8h" name="PacketException.h" local="yes" imported="no">PacketException.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ReadOnlyPacket.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ReadOnlyPacket_8h</filename>
    <includes id="Convert_8h" name="Convert.h" local="yes" imported="no">Convert.h</includes>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">libcomp::ReadOnlyPacket</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>RingBuffer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>RingBuffer_8cpp</filename>
    <includes id="RingBuffer_8h" name="RingBuffer.h" local="yes" imported="no">RingBuffer.h</includes>
  </compound>
  <compound kind="file">
    <name>RingBuffer.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>RingBuffer_8h</filename>
    <class kind="class">libcomp::RingBuffer::Exception</class>
    <class kind="class">libcomp::RingBuffer</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>src/ScriptEngine.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>src_2ScriptEngine_8cpp</filename>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <includes id="BaseServer_8h" name="BaseServer.h" local="yes" imported="no">BaseServer.h</includes>
    <includes id="Database_8h" name="Database.h" local="yes" imported="no">Database.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="DefinitionManager_8h" name="DefinitionManager.h" local="yes" imported="no">DefinitionManager.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ServerDataManager_8h" name="ServerDataManager.h" local="yes" imported="no">ServerDataManager.h</includes>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ScriptImport</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a39f8bb5961adafc006ef2a2beade95e1</anchor>
      <arglist>(HSQUIRRELVM vm, const char *szModule)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ScriptInclude</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a947f422ef7cb955986641abfec305b3e</anchor>
      <arglist>(HSQUIRRELVM vm, const char *szPath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SquirrelErrorFunction</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a999bfc4c117a75b1933109ddb46b3ed6</anchor>
      <arglist>(HSQUIRRELVM vm, const SQChar *szFormat,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SquirrelErrorFunctionRaw</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>ac632755683e5f3aa6f7414c7e9bc2666</anchor>
      <arglist>(HSQUIRRELVM vm, const SQChar *szFormat,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SquirrelPrintFunction</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a7c343d6cf4ba369dc1c130ee0b8828fa</anchor>
      <arglist>(HSQUIRRELVM vm, const SQChar *szFormat,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SquirrelPrintFunctionRaw</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a395abd39629ce8c0c8b2c58a72db715b</anchor>
      <arglist>(HSQUIRRELVM vm, const SQChar *szFormat,...)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; objects::Account &gt;</type>
      <name>ToAccount</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a9dfe9de22338ef6d4e8237797b5c6ec6</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; objects::AccountWorldData &gt;</type>
      <name>ToAccountWorldData</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>aeb3740b7042fa34600fc51279d16414a</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; objects::Character &gt;</type>
      <name>ToCharacter</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a3e5c1e445e03d395f709dc16f77f1872</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>ToDemon</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a83847bb86b5c0247e915d315c035e2b3</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="variable">
      <type>const SQBool</type>
      <name>NO_RETURN_VALUE</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a83deb197cffd944f6e73d581ad2d253c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SQInteger</type>
      <name>ONE_PARAM</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a814910c4fa1249dad421dad2e29e7043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const SQBool</type>
      <name>RAISE_ERROR</name>
      <anchorfile>src_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>aa697bd46202845a4d37ebbc1575d7785</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>tests/ScriptEngine.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>tests_2ScriptEngine_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="no" imported="no">Crypto.h</includes>
    <includes id="Log_8h" name="Log.h" local="no" imported="no">Log.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="no" imported="no">Packet.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="no" imported="no">ScriptEngine.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>ae79235c38a6a287c647035a2c2b81432</anchor>
      <arglist>(ScriptEngine, EvalCompileError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a0e0d0d6fd66017b96116416063b20c99</anchor>
      <arglist>(ScriptEngine, EvalRuntimeError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a85f61bd315e9b89db79b558b8357e3c2</anchor>
      <arglist>(ScriptEngine, EvalPrint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a504f3f5f07a813634916f21ce9b9316b</anchor>
      <arglist>(ScriptEngine, ReadOnlyPacket)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>ab7317eb9e204a2bd6a1e54929efadb4a</anchor>
      <arglist>(ScriptEngine, ReadWriteArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a6ee528e686cd4613257f360008e6df03</anchor>
      <arglist>(ScriptEngine, FunctionCall)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a41302a769a7c7e7eaa44b7dbe18133a2</anchor>
      <arglist>(ScriptEngine, GeneratedObject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a3548616d9af81cc8df0abb1822978f1c</anchor>
      <arglist>(ScriptEngine, ScriptA_ScriptB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>aead3a5f4e34209b43adacee1f1158dde</anchor>
      <arglist>(ScriptEngine, ServerA_ScriptB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a22aa51eced7727c292244a9bead9a432</anchor>
      <arglist>(ScriptEngine, ServerA_ServerB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a32f5b7fabdb59cc65dc6aaadb785ad1c</anchor>
      <arglist>(ScriptEngine, ScriptA_ServerB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a69d3fb156b34013355dff6c920d13889</anchor>
      <arglist>(ScriptEngine, CString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>ae9d05a6ce47d5a65a743cc44be31e179</anchor>
      <arglist>(ScriptEngine, DowncastChild)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>aa286045f790697a662c37311cd17de63</anchor>
      <arglist>(ScriptEngine, GetObjectList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a43e9ec0c6722bfce018c0a05a2c19f87</anchor>
      <arglist>(ScriptEngine, SetObjectList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a9332868a650d86f6f487abb1c89c9fe4</anchor>
      <arglist>(ScriptEngine, SetBadObjectList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a4a077fcaf2c6a8b3700e08ef343dbe61</anchor>
      <arglist>(ScriptEngine, GetObjectListProp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>aa40194675ccdc7a7594375784e8b74e3</anchor>
      <arglist>(ScriptEngine, SetObjectListProp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a12cd2a24bef1b0f91a1adf52df13b75d</anchor>
      <arglist>(ScriptEngine, SetBadObjectListProp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a521f5c3e5f6abbdcc53c71c5ace2779f</anchor>
      <arglist>(ScriptEngine, ListOfIntegers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>tests_2ScriptEngine_8cpp.html</anchorfile>
      <anchor>a3d437007c8d7f8c16078be2ada55a8af</anchor>
      <arglist>(ScriptEngine, Integer64)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ScriptEngine.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ScriptEngine_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="yes" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="yes" imported="no">PopIgnore.h</includes>
    <class kind="class">libcomp::ScriptEngine</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ServerCommandLineParser.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerCommandLineParser_8cpp</filename>
    <includes id="ServerCommandLineParser_8h" name="ServerCommandLineParser.h" local="yes" imported="no">ServerCommandLineParser.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>ServerCommandLineParser.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerCommandLineParser_8h</filename>
    <includes id="ArgumentParser_8h" name="ArgumentParser.h" local="yes" imported="no">ArgumentParser.h</includes>
    <class kind="class">libcomp::ServerCommandLineParser</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>ServerConstants.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerConstants_8cpp</filename>
    <includes id="ServerConstants_8h" name="ServerConstants.h" local="yes" imported="no">ServerConstants.h</includes>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="Log_8h" name="Log.h" local="no" imported="no">Log.h</includes>
  </compound>
  <compound kind="file">
    <name>ServerConstants.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerConstants_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="struct">libcomp::ServerConstants::Data</class>
    <class kind="class">libcomp::ServerConstants</class>
    <namespace>libcomp</namespace>
    <namespace>tinyxml2</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SVR_CONST</name>
      <anchorfile>ServerConstants_8h.html</anchorfile>
      <anchor>a693b6ba29a440fa12e37272cebccce29</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerDataManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerDataManager_8cpp</filename>
    <includes id="ServerDataManager_8h" name="ServerDataManager.h" local="yes" imported="no">ServerDataManager.h</includes>
    <includes id="DefinitionManager_8h" name="DefinitionManager.h" local="yes" imported="no">DefinitionManager.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::AILogicGroup &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5feb3e4d32a7a5b76dd5d9fc88e578d9</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonFamiliarityType &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a66f7f407eb2de72ca3d433e10babaca4</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonPresent &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4f0280c8f124bea313f8fa5209945ef6</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonQuestReward &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>abd41a6f270064ac1a9931604481a8198</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DropSet &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a677dc85ea0d544d99c17ebc220ec096b</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a876428ea15c5f8323e4d82e2f514f68e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a282fd6a2a357f1c5f6a226d7ad31e6b7</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Event &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a98741e6a5355d756cabe22bfc05af7a3</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>abe9868d99f17086a36bde2a5bbf4249e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae0ead762950f4e24f426c3858997d991</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerShop &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0142ab03575b635a88c9b691e990cb23</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZone &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0d366da10417b39e657ff922f5be1812</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZoneInstance &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4e572cf2ab83dc86193b64d5bf40f817</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZoneInstanceVariant &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a1c07a3936e20d98147edf7deaf53457e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZonePartial &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>af74e5667a2dcc7d6961b34376657ca4b</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad85d85ace4ceb7ee4b4d51594dd5bf73</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ServerDataManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>ServerDataManager_8h</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="DataStore_8h" name="DataStore.h" local="yes" imported="no">DataStore.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <class kind="class">libcomp::ServerDataManager</class>
    <class kind="struct">libcomp::ServerScript</class>
    <namespace>libcomp</namespace>
    <namespace>objects</namespace>
  </compound>
  <compound kind="file">
    <name>Shutdown.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Shutdown_8cpp</filename>
    <includes id="Shutdown_8h" name="Shutdown.h" local="yes" imported="no">Shutdown.h</includes>
    <includes id="BaseServer_8h" name="BaseServer.h" local="yes" imported="no">BaseServer.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ShutdownSignalHandler</name>
      <anchorfile>Shutdown_8cpp.html</anchorfile>
      <anchor>adda473ab3f85e7e0c2e9adcf55e82df7</anchor>
      <arglist>(int sig)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static libcomp::BaseServer *</type>
      <name>gServer</name>
      <anchorfile>Shutdown_8cpp.html</anchorfile>
      <anchor>a06036e30da6c6e40ee69ab081293e156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::list&lt; std::thread * &gt;</type>
      <name>gShutdownThreads</name>
      <anchorfile>Shutdown_8cpp.html</anchorfile>
      <anchor>a959b63faac10f6b92e3ebcfba7d598cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Shutdown.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Shutdown_8h</filename>
    <namespace>libcomp</namespace>
    <namespace>libcomp::Shutdown</namespace>
    <member kind="function">
      <type>void</type>
      <name>Complete</name>
      <anchorfile>namespacelibcomp_1_1Shutdown.html</anchorfile>
      <anchor>a35d719b6b722c3b2ff38802742019566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Configure</name>
      <anchorfile>namespacelibcomp_1_1Shutdown.html</anchorfile>
      <anchor>a451af8c44675d24b95acb784489d9893</anchor>
      <arglist>(libcomp::BaseServer *pServer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShutdownSignalHandler</name>
      <anchorfile>Shutdown_8h.html</anchorfile>
      <anchor>adda473ab3f85e7e0c2e9adcf55e82df7</anchor>
      <arglist>(int sig)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpawnThread.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SpawnThread_8cpp</filename>
    <includes id="SpawnThread_8h" name="SpawnThread.h" local="yes" imported="no">SpawnThread.h</includes>
    <includes id="DayCare_8h" name="DayCare.h" local="yes" imported="no">DayCare.h</includes>
    <member kind="variable">
      <type>pthread_t</type>
      <name>gSelf</name>
      <anchorfile>SpawnThread_8cpp.html</anchorfile>
      <anchor>aab9d6f7ab3b6310b9b1a1dcf70030d97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpawnThread.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SpawnThread_8h</filename>
    <includes id="Child_8h" name="Child.h" local="yes" imported="no">Child.h</includes>
    <includes id="MessageQueue_8h" name="MessageQueue.h" local="yes" imported="no">MessageQueue.h</includes>
    <class kind="class">libcomp::SpawnThread</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>SqratInt64.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SqratInt64_8cpp</filename>
    <includes id="SqratInt64_8h" name="SqratInt64.h" local="yes" imported="no">SqratInt64.h</includes>
    <includes id="ScriptEngine_8h" name="ScriptEngine.h" local="yes" imported="no">ScriptEngine.h</includes>
    <namespace>libcomp</namespace>
    <member kind="function" static="yes">
      <type>static Sqrat::s64</type>
      <name>s64_cast</name>
      <anchorfile>SqratInt64_8cpp.html</anchorfile>
      <anchor>a0cd0d2c15de8683f384fa3e94f737c1e</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; Sqrat::s64 &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a56db014ee39fb0ef728d18ba57ce4a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; Sqrat::u64 &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a8318ff2db8eca2546a7801862d14a8fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Sqrat::u64</type>
      <name>u64_cast</name>
      <anchorfile>SqratInt64_8cpp.html</anchorfile>
      <anchor>acbba1923c4b8fac27e10a90f193d041e</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SqratInt64.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SqratInt64_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <class kind="class">Sqrat::s64</class>
    <class kind="class">Sqrat::u64</class>
    <namespace>Sqrat</namespace>
  </compound>
  <compound kind="file">
    <name>SqratTypesInclude.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SqratTypesInclude_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="SqratInt64_8h" name="SqratInt64.h" local="yes" imported="no">SqratInt64.h</includes>
  </compound>
  <compound kind="file">
    <name>SqratTypesNonRef.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SqratTypesNonRef_8h</filename>
  </compound>
  <compound kind="file">
    <name>SqratTypesSource.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>SqratTypesSource_8h</filename>
    <class kind="struct">Var&lt; const libcomp::String &amp; &gt;</class>
    <class kind="struct">Var&lt; const std::list&lt; std::shared_ptr&lt; T &gt; &gt; &amp; &gt;</class>
    <class kind="struct">Var&lt; libcomp::String &gt;</class>
    <class kind="struct">Var&lt; std::list&lt; std::shared_ptr&lt; T &gt; &gt; &gt;</class>
    <member kind="define">
      <type>#define</type>
      <name>INTEGER_LIST</name>
      <anchorfile>SqratTypesSource_8h.html</anchorfile>
      <anchor>ab6220bf18d09d8041a4c227d4e83241f</anchor>
      <arglist>(type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>String.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>String_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="CString_8h" name="CString.h" local="no" imported="no">CString.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a85ab3e81cccdf702618ba29bd5e41134</anchor>
      <arglist>(String, Length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a26711baec821bcc1936d8b4b8234bc4c</anchor>
      <arglist>(String, Size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a7a6118326818b6d4dfbde44f010f136e</anchor>
      <arglist>(String, Compare)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a47312c9ca9dfc76d04318e4e07b3f926</anchor>
      <arglist>(String, Right)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a5cd59d6dcd181d741cff23585196633b</anchor>
      <arglist>(String, Left)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a03f790250ea099ef7f90186414c8f819</anchor>
      <arglist>(String, Truncate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a2fda0a1d90b1931d386cf0e7b2c2c262</anchor>
      <arglist>(String, Mid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a9e8e9d76b7c026dd18e509d8dc5046c4</anchor>
      <arglist>(String, LeftJustified)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>af95e8f20d06f80b5be75d024ea39a720</anchor>
      <arglist>(String, RightJustified)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a46fc2dd2182c4c0856d53d224a8cc29c</anchor>
      <arglist>(String, Append)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a7632509bfca48fd18bf631bbb60cd041</anchor>
      <arglist>(String, Prepend)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>ae1e095d9d257ff80afe08316efdaaf47</anchor>
      <arglist>(String, Arguments)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>ad64551a95e57fde4aa75400705da7ec2</anchor>
      <arglist>(String, ArgInt)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>afd4653ee76318bdf1b371933cf8c92dd</anchor>
      <arglist>(String, ToUpperLower)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>aa6f2d3443dbee5fbce377137f1b46e3a</anchor>
      <arglist>(String, Contains)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>aef7ba2b6b2f0c8703e439b56327e6a74</anchor>
      <arglist>(String, Trim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a15e015349f7e219c665a2baf1d1e45b8</anchor>
      <arglist>(String, Clear)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>af791e76498b7e291e2a78107298e45b3</anchor>
      <arglist>(String, Split)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a1e7fc50f1c67ccbd8b3c745fc3bf8635</anchor>
      <arglist>(String, FromCodePoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>ae9d12a2b26281920a32e8df6cc1d9e01</anchor>
      <arglist>(String, At)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>ac490acc5dd1d9d51cec668a8f04dc962</anchor>
      <arglist>(String, Replace)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a4e04c86e7667ea55f0dae436eb47bd66</anchor>
      <arglist>(String, ToInteger)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>String_8cpp.html</anchorfile>
      <anchor>a670dd49141067e76c51f63dc5fa21239</anchor>
      <arglist>(String, ArgUnderscoreBug)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TcpConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TcpConnection_8cpp</filename>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="Object_8h" name="Object.h" local="yes" imported="no">Object.h</includes>
    <includes id="CryptSupport_8h" name="CryptSupport.h" local="yes" imported="no">CryptSupport.h</includes>
  </compound>
  <compound kind="file">
    <name>TcpConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TcpConnection_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="Packet_8h" name="Packet.h" local="yes" imported="no">Packet.h</includes>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="yes" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="yes" imported="no">PopIgnore.h</includes>
    <class kind="class">libcomp::TcpConnection</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>TcpServer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TcpServer_8cpp</filename>
    <includes id="TcpServer_8h" name="TcpServer.h" local="yes" imported="no">TcpServer.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="TcpConnection_8h" name="TcpConnection.h" local="yes" imported="no">TcpConnection.h</includes>
    <includes id="WindowsService_8h" name="WindowsService.h" local="yes" imported="no">WindowsService.h</includes>
    <includes id="CryptSupport_8h" name="CryptSupport.h" local="yes" imported="no">CryptSupport.h</includes>
  </compound>
  <compound kind="file">
    <name>TcpServer.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TcpServer_8h</filename>
    <includes id="CString_8h" name="CString.h" local="yes" imported="no">CString.h</includes>
    <includes id="Crypto_8h" name="Crypto.h" local="yes" imported="no">Crypto.h</includes>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="yes" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="yes" imported="no">PopIgnore.h</includes>
    <class kind="class">libcomp::TcpServer</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TimerManager_8cpp</filename>
    <includes id="TimerManager_8h" name="TimerManager.h" local="yes" imported="no">TimerManager.h</includes>
    <class kind="class">libcomp::TimerEvent</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>TimerManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>TimerManager_8h</filename>
    <includes id="MessageExecute_8h" name="MessageExecute.h" local="yes" imported="no">MessageExecute.h</includes>
    <class kind="class">libcomp::TimerEventComp</class>
    <class kind="class">libcomp::TimerManager</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>VectorStream.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>VectorStream_8cpp</filename>
    <includes id="PushIgnore_8h" name="PushIgnore.h" local="no" imported="no">PushIgnore.h</includes>
    <includes id="PopIgnore_8h" name="PopIgnore.h" local="no" imported="no">PopIgnore.h</includes>
    <includes id="VectorStream_8h" name="VectorStream.h" local="no" imported="no">VectorStream.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>VectorStream_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST</name>
      <anchorfile>VectorStream_8cpp.html</anchorfile>
      <anchor>a96c33b7f043bf4418cf47a0853321347</anchor>
      <arglist>(VectorStream, ReadWrite)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VectorStream.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>VectorStream_8h</filename>
    <class kind="class">libcomp::VectorStream</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>WatchThread.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>WatchThread_8cpp</filename>
    <includes id="WatchThread_8h" name="WatchThread.h" local="yes" imported="no">WatchThread.h</includes>
    <includes id="DayCare_8h" name="DayCare.h" local="yes" imported="no">DayCare.h</includes>
  </compound>
  <compound kind="file">
    <name>WatchThread.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>WatchThread_8h</filename>
    <includes id="Child_8h" name="Child.h" local="yes" imported="no">Child.h</includes>
    <includes id="MessageQueue_8h" name="MessageQueue.h" local="yes" imported="no">MessageQueue.h</includes>
    <class kind="class">libcomp::WatchThread</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="file">
    <name>WindowsService.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>WindowsService_8cpp</filename>
    <includes id="WindowsService_8h" name="WindowsService.h" local="yes" imported="no">WindowsService.h</includes>
  </compound>
  <compound kind="file">
    <name>WindowsService.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>WindowsService_8h</filename>
  </compound>
  <compound kind="file">
    <name>WindowsServiceMain.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>WindowsServiceMain_8cpp</filename>
    <includes id="WindowsService_8h" name="WindowsService.h" local="yes" imported="no">WindowsService.h</includes>
  </compound>
  <compound kind="file">
    <name>Worker.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Worker_8cpp</filename>
    <includes id="Worker_8h" name="Worker.h" local="yes" imported="no">Worker.h</includes>
    <includes id="Exception_8h" name="Exception.h" local="yes" imported="no">Exception.h</includes>
    <includes id="Log_8h" name="Log.h" local="yes" imported="no">Log.h</includes>
    <includes id="MessageShutdown_8h" name="MessageShutdown.h" local="yes" imported="no">MessageShutdown.h</includes>
  </compound>
  <compound kind="file">
    <name>Worker.h</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>Worker_8h</filename>
    <includes id="EnumMap_8h" name="EnumMap.h" local="yes" imported="no">EnumMap.h</includes>
    <includes id="Manager_8h" name="Manager.h" local="yes" imported="no">Manager.h</includes>
    <includes id="Message_8h" name="Message.h" local="yes" imported="no">Message.h</includes>
    <includes id="MessageExecute_8h" name="MessageExecute.h" local="yes" imported="no">MessageExecute.h</includes>
    <includes id="MessageQueue_8h" name="MessageQueue.h" local="yes" imported="no">MessageQueue.h</includes>
    <class kind="class">libcomp::Worker</class>
    <namespace>libcomp</namespace>
  </compound>
  <compound kind="group">
    <name>Platform</name>
    <title>Platform specific utility functions.</title>
    <filename>group__Platform.html</filename>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetLastErrorString</name>
      <anchorfile>group__Platform.html</anchorfile>
      <anchor>gae7164efca1459a057c11f602928c3c7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MariaDBAccount</name>
    <filename>classMariaDBAccount.html</filename>
    <member kind="function">
      <type></type>
      <name>MariaDBAccount</name>
      <anchorfile>classMariaDBAccount.html</anchorfile>
      <anchor>a8d051ea4e7da8b060bc2fc0301a95b5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RegisterPersistentType</name>
      <anchorfile>classMariaDBAccount.html</anchorfile>
      <anchor>a3948c3bd7120bd38b940d43edb2186f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>text</name>
      <anchorfile>classMariaDBAccount.html</anchorfile>
      <anchor>a315f06943c4ce00ae48ea08088c41e77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_DATA_DIRECTORY</name>
    <filename>structIMAGE__DATA__DIRECTORY.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Size</name>
      <anchorfile>structIMAGE__DATA__DIRECTORY.html</anchorfile>
      <anchor>a86c3a816673776994a9471b22b127931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>VirtualAddress</name>
      <anchorfile>structIMAGE__DATA__DIRECTORY.html</anchorfile>
      <anchor>af80f5b36cf2a26c2561dbf8b3a18bbde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_DOS_HEADER</name>
    <filename>structIMAGE__DOS__HEADER.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_cblp</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>afb22c21783778eb4d93be76a95e495fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_cp</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>aa07ff96ad6f83b261ea11bd085622aaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_cparhdr</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>afbb15a616aa1b867d3320ab7334a2e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_crlc</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>ab0e0bc4e67e1de847050d4590a6844d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_cs</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a64fbbd57099329b76e4cde965a88de36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_csum</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a7e0d6a9e8f3a51ef1776a4b323df7d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_ip</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a4e193ee58b5e5339ba2b96b4a162346a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>e_lfanew</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a214844eeb7a23dbb1d1280f30b365103</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_lfarlc</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a044bc057751ceae3a9216899d5425f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_magic</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a490c3866817499c610f63d6ed89add53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_maxalloc</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>adc385d86e160d8f3bd73f6ea777de151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_minalloc</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>aca140707b2c79bd8a010de66ca6863c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_oemid</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>aac818d44c3483831525b81519e9d3bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_oeminfo</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a24ab8f995cbb7207b3f2054f7a5a59a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_ovno</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>ae36c3e75496168f0a28581e485d4c640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_res</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a30a0c324f1500ad47c0fd48340d41662</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_res2</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>ae016e22b4ecc96220780d6f5526eed14</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_sp</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a2e037d3c82387d3782f77854e0482c36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>e_ss</name>
      <anchorfile>structIMAGE__DOS__HEADER.html</anchorfile>
      <anchor>a264a5b46754161b27fd0c7a0c7e9a062</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_FILE_HEADER</name>
    <filename>structIMAGE__FILE__HEADER.html</filename>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Characteristics</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>a16a93bce8001903b28d32f7ca0f9fab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Machine</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>a015f496c3957a28056de05deeb5dea20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>NumberOfSections</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>a72b902576487f8983e673e5bb09d88d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>NumberOfSymbols</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>a499e5f7f73883e805e8fab6e79c2d7e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>PointerToSymbolTable</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>a41beb8d9939a36359d58197c47c73d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SizeOfOptionalHeader</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>ae90c66a20b8f637094eb3b33180207d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>TimeDateStamp</name>
      <anchorfile>structIMAGE__FILE__HEADER.html</anchorfile>
      <anchor>ae77691f5e2ce24c8e93708d3939a0b38</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_NT_HEADERS32</name>
    <filename>structIMAGE__NT__HEADERS32.html</filename>
    <member kind="variable">
      <type>IMAGE_FILE_HEADER</type>
      <name>FileHeader</name>
      <anchorfile>structIMAGE__NT__HEADERS32.html</anchorfile>
      <anchor>a136393b81b4ff9be3a8bece74baeed62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IMAGE_OPTIONAL_HEADER32</type>
      <name>OptionalHeader</name>
      <anchorfile>structIMAGE__NT__HEADERS32.html</anchorfile>
      <anchor>a48f3ce36de8a4f9dae868f93b9c64438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Signature</name>
      <anchorfile>structIMAGE__NT__HEADERS32.html</anchorfile>
      <anchor>a4e921951bdcee8c9a9ad7ffbc04b7272</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_NT_HEADERS64</name>
    <filename>structIMAGE__NT__HEADERS64.html</filename>
    <member kind="variable">
      <type>IMAGE_FILE_HEADER</type>
      <name>FileHeader</name>
      <anchorfile>structIMAGE__NT__HEADERS64.html</anchorfile>
      <anchor>afafbe227b254729eb0223fbd64fd9d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IMAGE_OPTIONAL_HEADER64</type>
      <name>OptionalHeader</name>
      <anchorfile>structIMAGE__NT__HEADERS64.html</anchorfile>
      <anchor>a1139b56c63f71a0587462bf2dfcd5bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Signature</name>
      <anchorfile>structIMAGE__NT__HEADERS64.html</anchorfile>
      <anchor>ac63a6b027e38f3ba3a827aec5c014774</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_OPTIONAL_HEADER32</name>
    <filename>structIMAGE__OPTIONAL__HEADER32.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>AddressOfEntryPoint</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a9d6e81cfbe8fb2a7d26bc8f2aab27a2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>BaseOfCode</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>aafd7d7842bed9850826fb2828407198c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>BaseOfData</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>adf0d7a35d476375d80c76565da8dca10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>CheckSum</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a5a54705f82de17f1aebb99d47490e58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IMAGE_DATA_DIRECTORY</type>
      <name>DataDirectory</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a989d64ad8737de96fbcc56a2741cc20d</anchor>
      <arglist>[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>DllCharacteristics</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a787ce3c8823583a45fb2a04548ca0356</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>FileAlignment</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>adb9ef2df2a5ddd32fde4fe2eec2f2c34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ImageBase</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a0187c8b157c365fead6aca157d83b059</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>LoaderFlags</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a26439606afeb1b6b106008355b95cfcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Magic</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>afc35660cbb43d8d0872836d480ae32b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorImageVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a03aa9ccae2e884027327592533ded7e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>MajorLinkerVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>ab2b7023ebaa6bb9bd714ae317b26c8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorOperatingSystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a1fed5d3ac9603b2ae4b3f03bf6b462b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorSubsystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a1cce4e1462cee3e62e8cf161f17edff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorImageVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a4ac4bace270c3214c6e6375d46e66590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>MinorLinkerVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a589ccb81296395d2bac3a411d19d109d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorOperatingSystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a08be56e68a929486a38f8e2c3c8e5cff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorSubsystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a0801c3fb61ca8932a6b743a6223643ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>NumberOfRvaAndSizes</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>acafc9887aad74ca38b1626d05f30e384</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SectionAlignment</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a5e274a875cb111dd93b379e91771f9cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfCode</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a7bb1069ed4d3f6b50263d40b761f079f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfHeaders</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a5766ac62ff827b7e85082ef03e50d391</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfHeapCommit</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>ab36b7b6474a56953f565988496000be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfHeapReserve</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>aa8141ecc721834bcb8d44b433fbd97fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfImage</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a380fb99fd8fc40b989c3163df51a0846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfInitializedData</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a9700f80e21bf8a716544a4a1007a1c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfStackCommit</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>aacda404369e481bd16e4b9c7a85aab39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfStackReserve</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a2a9ffa7e25a1a3cea209601ed566b290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfUninitializedData</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a9cc569a8685edb25641d078517b11204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Subsystem</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a336670c987607bf244b97f77a508b3f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Win32VersionValue</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER32.html</anchorfile>
      <anchor>a1b46527234952fcd2bee103a0a4f8e79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_OPTIONAL_HEADER64</name>
    <filename>structIMAGE__OPTIONAL__HEADER64.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>AddressOfEntryPoint</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a9e1ffdfb691b608ac8e5325f9cac7531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>BaseOfCode</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a2a59084aec74d1b86dd06b35f363b503</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>CheckSum</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a7cc7ed67a9d1014d835af573c1b6cf0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IMAGE_DATA_DIRECTORY</type>
      <name>DataDirectory</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a7e9e9e62ffedef3e5fc8998e8de9e08c</anchor>
      <arglist>[IMAGE_NUMBEROF_DIRECTORY_ENTRIES]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>DllCharacteristics</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a53b3e13cfe507493687247f28683a89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>FileAlignment</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>aeb26bfcd1b8e2d291c9b56a11993d972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>ImageBase</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>afadaeefabaa27d28de89fa984ddaacd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>LoaderFlags</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>aece99af93af6de3f517d42608369c42c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Magic</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a11b32fb5a64be8b03c3f5954bd6bc88a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorImageVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>ada4f432ca1be53c1eff9b1f941efc1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>MajorLinkerVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a7f48811b5dab9f18f8794cb7689ba1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorOperatingSystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>abced85e78bccd1a5c6bbb092bb7bc526</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MajorSubsystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a4633d884253e60c610b8de11c5461d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorImageVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a8ecdf470e825a4c8a482fe1d3ea24e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>MinorLinkerVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a009a5c01455f9dbec3060a7e66603c0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorOperatingSystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>ab526b7170d9f6f423f25be4fddf4319a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MinorSubsystemVersion</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a31a84cf809ba3208dd79258c199584ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>NumberOfRvaAndSizes</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a81615dbd598341162982bf73295157d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SectionAlignment</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a2f3695f914228c546e2129874ace1009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfCode</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>aaf0a3d99c1ead43106d1e985052da23c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfHeaders</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a909f545cd0ea258c4c54c176584e3e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>SizeOfHeapCommit</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>afe00c87ca240ee798b4ca449fc21cc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>SizeOfHeapReserve</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a6da85b73d213af6d420c2b20b8f80bed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfImage</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>aaa1a9ad8f7039e6b042b4da631be586c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfInitializedData</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>ae1934ee08ebda2d78890bb92233b71f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>SizeOfStackCommit</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a16a37d0ece32bbcc1c355b2d08d07746</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>SizeOfStackReserve</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a3654d829be0f9d38d49cb1c3a0e6df7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfUninitializedData</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>ad85549a6d0940ab9153f6f05c8d309a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Subsystem</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a65da0207088cc8441bc1f0a3418ff6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Win32VersionValue</name>
      <anchorfile>structIMAGE__OPTIONAL__HEADER64.html</anchorfile>
      <anchor>a0fc546c9b8c257932d2708838fdea4d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>IMAGE_SECTION_HEADER</name>
    <filename>structIMAGE__SECTION__HEADER.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Characteristics</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>a06f65f067ba6cc3696fe5ce614cebbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union IMAGE_SECTION_HEADER::@0</type>
      <name>Misc</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>aeb7f789f83715a4decce259df510bba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>Name</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>a1281af808cae6e82cd8e4b9afc57e505</anchor>
      <arglist>[IMAGE_SIZEOF_SHORT_NAME]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>NumberOfLinenumbers</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>a10391f6db0e3fa5e922639cb2762ea06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>NumberOfRelocations</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>accfae4da0ca67322bc02f143ca6497d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>PointerToLinenumbers</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>aa8174c05e8092f07cc736481a2019764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>PointerToRawData</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>a0ed1b33e4dd411d8ab9302630adaf808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>PointerToRelocations</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>acabcd41098bc8615789386edbfbb6176</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SizeOfRawData</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>ac949ee2b0b5f310fa9859a5cd479af5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>VirtualAddress</name>
      <anchorfile>structIMAGE__SECTION__HEADER.html</anchorfile>
      <anchor>ad49f561ca25a33ef2a76614214aba281</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rbtree_t</name>
    <filename>structrbtree__t.html</filename>
    <member kind="variable">
      <type>rbtree_node</type>
      <name>root</name>
      <anchorfile>structrbtree__t.html</anchorfile>
      <anchor>a554d9ec3843ee540b2cb39bd6ca15d61</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>rbtree_node_t</name>
    <filename>structrbtree__node__t.html</filename>
    <member kind="variable">
      <type>enum rbtree_node_color</type>
      <name>color</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>a58db66bed9e019b99276e51ff7e6f778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rbtree_key</type>
      <name>key</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>a2f2c8b88b448bcb58e9997c9c564ef8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct rbtree_node_t *</type>
      <name>left</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>a881e0325dd6333515d09e0cd27ea2b61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct rbtree_node_t *</type>
      <name>parent</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>ad7a89c714b44a3d63f7c237c75283ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct rbtree_node_t *</type>
      <name>right</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>a84ce2b33607d7b2eecba5a21192b2a59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>rbtree_value</type>
      <name>value</name>
      <anchorfile>structrbtree__node__t.html</anchorfile>
      <anchor>adc89a070e4932a00fa81037cc132fa21</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Var&lt; const libcomp::String &amp; &gt;</name>
    <filename>structVar_3_01const_01libcomp_1_1String_01_6_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>Var</name>
      <anchorfile>structVar_3_01const_01libcomp_1_1String_01_6_01_4.html</anchorfile>
      <anchor>a2e8974b68658295d94081dffc18d303d</anchor>
      <arglist>(HSQUIRRELVM vm, SQInteger idx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>push</name>
      <anchorfile>structVar_3_01const_01libcomp_1_1String_01_6_01_4.html</anchorfile>
      <anchor>af8d04d8da4dc020567fd29301bf5b9cb</anchor>
      <arglist>(HSQUIRRELVM vm, const libcomp::String &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>value</name>
      <anchorfile>structVar_3_01const_01libcomp_1_1String_01_6_01_4.html</anchorfile>
      <anchor>a9c369f1acc253920cbb62f6f67d8b5ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Var&lt; const std::list&lt; std::shared_ptr&lt; T &gt; &gt; &amp; &gt;</name>
    <filename>structVar_3_01const_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_6_01_4.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Var</name>
      <anchorfile>structVar_3_01const_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_6_01_4.html</anchorfile>
      <anchor>a5a3a301a3f1f6ac9b0c4950b4a347898</anchor>
      <arglist>(HSQUIRRELVM vm, SQInteger idx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>push</name>
      <anchorfile>structVar_3_01const_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_6_01_4.html</anchorfile>
      <anchor>aa71212397a7e173a7c20071bacd1c782</anchor>
      <arglist>(HSQUIRRELVM vm, const std::list&lt; std::shared_ptr&lt; T &gt;&gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; T &gt; &gt;</type>
      <name>value</name>
      <anchorfile>structVar_3_01const_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_6_01_4.html</anchorfile>
      <anchor>a91b2c08327a5f079b9d7ea555fb8268e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Var&lt; libcomp::String &gt;</name>
    <filename>structVar_3_01libcomp_1_1String_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>Var</name>
      <anchorfile>structVar_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>ac77249328577535a11653a3b0d904be3</anchor>
      <arglist>(HSQUIRRELVM vm, SQInteger idx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>push</name>
      <anchorfile>structVar_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>a5db32f7211454b9cbdd4c49bbd9ca6d9</anchor>
      <arglist>(HSQUIRRELVM vm, const libcomp::String &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>value</name>
      <anchorfile>structVar_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>a758ea0bfd1ea13879c1f56dd36dc6d69</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Var&lt; std::list&lt; std::shared_ptr&lt; T &gt; &gt; &gt;</name>
    <filename>structVar_3_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Var</name>
      <anchorfile>structVar_3_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>a8809076c87958734c2e748ce8cc6cdec</anchor>
      <arglist>(HSQUIRRELVM vm, SQInteger idx)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>push</name>
      <anchorfile>structVar_3_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>a4f90f648a1d2266f754f2cb731146570</anchor>
      <arglist>(HSQUIRRELVM vm, const std::list&lt; std::shared_ptr&lt; T &gt;&gt; &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; T &gt; &gt;</type>
      <name>value</name>
      <anchorfile>structVar_3_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_4.html</anchorfile>
      <anchor>ac066562ff41af3d4ecde50ea661c03c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp</name>
    <filename>namespacelibcomp.html</filename>
    <namespace>libcomp::Compress</namespace>
    <namespace>libcomp::Config</namespace>
    <namespace>libcomp::Convert</namespace>
    <namespace>libcomp::Crypto</namespace>
    <namespace>libcomp::Message</namespace>
    <namespace>libcomp::Parsers</namespace>
    <namespace>libcomp::Platform</namespace>
    <namespace>libcomp::Shutdown</namespace>
    <class kind="class">libcomp::ArgumentParser</class>
    <class kind="class">libcomp::BaseServer</class>
    <class kind="class">libcomp::BasicPacketStream</class>
    <class kind="class">libcomp::BinaryDataSet</class>
    <class kind="class">libcomp::ChannelConnection</class>
    <class kind="class">libcomp::Child</class>
    <class kind="class">libcomp::Database</class>
    <class kind="class">libcomp::DatabaseBind</class>
    <class kind="class">libcomp::DatabaseBindBigInt</class>
    <class kind="class">libcomp::DatabaseBindBlob</class>
    <class kind="class">libcomp::DatabaseBindBool</class>
    <class kind="class">libcomp::DatabaseBindDouble</class>
    <class kind="class">libcomp::DatabaseBindFloat</class>
    <class kind="class">libcomp::DatabaseBindInt</class>
    <class kind="class">libcomp::DatabaseBindText</class>
    <class kind="class">libcomp::DatabaseBindUUID</class>
    <class kind="class">libcomp::DatabaseChangeSet</class>
    <class kind="class">libcomp::DatabaseMariaDB</class>
    <class kind="class">libcomp::DatabaseQuery</class>
    <class kind="class">libcomp::DatabaseQueryImpl</class>
    <class kind="class">libcomp::DatabaseQueryMariaDB</class>
    <class kind="class">libcomp::DatabaseQuerySQLite3</class>
    <class kind="class">libcomp::DatabaseSQLite3</class>
    <class kind="class">libcomp::DataFile</class>
    <class kind="class">libcomp::DataStore</class>
    <class kind="class">libcomp::DataSyncManager</class>
    <class kind="class">libcomp::DayCare</class>
    <class kind="class">libcomp::DBExplicitUpdate</class>
    <class kind="class">libcomp::DBOperationalChange</class>
    <class kind="class">libcomp::DBOperationalChangeSet</class>
    <class kind="class">libcomp::DBStandardChangeSet</class>
    <class kind="class">libcomp::DefinitionManager</class>
    <class kind="class">libcomp::DynamicObject</class>
    <class kind="class">libcomp::DynamicVariable</class>
    <class kind="class">libcomp::DynamicVariableArray</class>
    <class kind="class">libcomp::DynamicVariableFactory</class>
    <class kind="class">libcomp::DynamicVariableInt</class>
    <class kind="class">libcomp::DynamicVariableList</class>
    <class kind="class">libcomp::DynamicVariableReference</class>
    <class kind="class">libcomp::DynamicVariableString</class>
    <class kind="class">libcomp::EncryptedConnection</class>
    <class kind="class">libcomp::EnumClassHash</class>
    <class kind="class">libcomp::Exception</class>
    <class kind="class">libcomp::InternalConnection</class>
    <class kind="class">libcomp::LobbyConnection</class>
    <class kind="class">libcomp::Log</class>
    <class kind="class">libcomp::LogMessage</class>
    <class kind="class">libcomp::LogMessageFixed</class>
    <class kind="class">libcomp::LogMessageImpl</class>
    <class kind="class">libcomp::Manager</class>
    <class kind="class">libcomp::ManagerPacket</class>
    <class kind="struct">libcomp::MemoryAllocation</class>
    <class kind="class">libcomp::MemoryManager</class>
    <class kind="class">libcomp::MessageQueue</class>
    <class kind="class">libcomp::Mutex</class>
    <class kind="class">libcomp::Object</class>
    <class kind="class">libcomp::ObjectInStream</class>
    <class kind="class">libcomp::ObjectOutStream</class>
    <class kind="class">libcomp::ObjectReference</class>
    <class kind="class">libcomp::ObjectReferenceData</class>
    <class kind="class">libcomp::Packet</class>
    <class kind="class">libcomp::PacketException</class>
    <class kind="class">libcomp::PacketParser</class>
    <class kind="class">libcomp::PacketStream</class>
    <class kind="class">libcomp::PEFile</class>
    <class kind="class">libcomp::PersistentObject</class>
    <class kind="class">libcomp::Randomizer</class>
    <class kind="class">libcomp::ReadOnlyPacket</class>
    <class kind="class">libcomp::ReadOnlyPacketStream</class>
    <class kind="class">libcomp::RingBuffer</class>
    <class kind="class">libcomp::ScriptEngine</class>
    <class kind="class">libcomp::ServerCommandLineParser</class>
    <class kind="class">libcomp::ServerConstants</class>
    <class kind="class">libcomp::ServerDataManager</class>
    <class kind="struct">libcomp::ServerScript</class>
    <class kind="class">libcomp::SpawnThread</class>
    <class kind="class">libcomp::String</class>
    <class kind="class">libcomp::TcpConnection</class>
    <class kind="class">libcomp::TcpServer</class>
    <class kind="class">libcomp::TimerEvent</class>
    <class kind="class">libcomp::TimerEventComp</class>
    <class kind="class">libcomp::TimerManager</class>
    <class kind="class">libcomp::VectorStream</class>
    <class kind="class">libcomp::WatchThread</class>
    <class kind="class">libcomp::Worker</class>
    <member kind="typedef">
      <type>uint16_t</type>
      <name>CommandCode_t</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79ff02590a8d72c2abb8537458a72e9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; Key, T, HashType&lt; Key &gt;&gt;</type>
      <name>EnumMap</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a1442fc2425910540ae92c53a56c03cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_multimap&lt; Key, T, HashType&lt; Key &gt;&gt;</type>
      <name>EnumMultiMap</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a55359e16cdbf4adcdb1903fdb9c14968</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename std::conditional&lt; std::is_enum&lt; Key &gt;::value, EnumClassHash, std::hash&lt; Key &gt;&gt;::type</type>
      <name>HashType</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae51bc9f0bbe012f4ee4a81e96cf0f74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogComponent_t</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a57b40b6510404432c4e48817a3efd9cc</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca271998e8c4d6e52eb45c75a7f7f8b000">AccountManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac74a31d4dc3bc6c4f745c80f5efb7a58">ActionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca510e306209030a530c6051693ee06b25">AIManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaf6351d7b2f7854a6d676326c6bd89e16">Barter</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac211992ca445ea414d8de54f98dad169">Bazaar</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca1f269538f83b0a77c2469149334bcfe3">CharacterManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaff215c486452813c6cec04614d832cdf">ChatManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca603c07e2735df19b9a7ce091d7453d2b">Clan</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccac2cc7082a89c1ad6631a2f66af5f00c0">Connection</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca79ad4e0522a0a67a6e196be52357e60b">Crypto</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccae307db07b3975fef922a80d07455ee5e">Database</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca825c5fc312927882b716b6c2da3b816d">DataStore</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccacd2e929ef073c7359658db59a6f23f78">DataSyncManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5dc2c823d0f4a876d5f9c8c951eb5783">DefinitionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca300d4af0950c89b847cf6f7500e6060c">Demon</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccae92e4355fbc5fa667df8b35955fa6c03">EventManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca930a91848917f92cf7e2f8d744fa4177">Friend</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca17ff581beb250e95869a34d0ecdba410">FusionManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca0db377921f4ce762c62526131097968f">General</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca4bbb8f967da6d1a610596d7257179c2b">Invalid</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca7d74f3b92b19da5e606d737d339a9679">Item</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca2113b4b235d49f137d0619f749082d88">MatchManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaf39181116a0042e3b50710c2a1e70f74">Packet</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca094a173d3b32f44f5b5c996e8710ae28">Party</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5cb1b42adf01bb3785dfdf712c3b8255">ScriptEngine</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca9aa1b03934893d7134a660af4204f2a9">Server</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca6abfdf384d2e220a39cc38fc537c7f7c">ServerConstants</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca881107c911f6f9696d3ca76bca90397a">ServerDataManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca4601ab84eb2539acd99261401b3ceb8b">SkillManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaac848fa228f49ba2b8a5fbd76596817d">Team</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccaa39bd78e770d5dff400baf22d50bfd05">TokuseiManager</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9cca5f390d80b20daad8f5d2f483fb0ae9d8">Trade</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccadd04ca1265cb79b990b8120e5f5070d3">WebAPI</enumvalue>
      <enumvalue file="namespacelibcomp.html" anchor="a57b40b6510404432c4e48817a3efd9ccad353476338d7ed79dee1d7025b176009">ZoneManager</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a79cce8c37467b57fa0878c88f17ade16</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::Set&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac186379bcff09a602a7c25063a2481fa</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libcomp::String &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a970878719e0106f0e67b47ff49ec41f2</anchor>
      <arglist>(const libcomp::String &amp;column, libcomp::String value, libcomp::String expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DBExplicitUpdate::SetFrom&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6083d3788dcaecb3851340467658d783</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::UUID value, libobjgen::UUID expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiAIData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4ba933e2ce55bec5e0123a23963d780a</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiBlendData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a13c720db22f4fa0c74ea63ba2c4db0c1</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiBlendExtData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a23ed1498e758d6449feacfae1468a838</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCHouraiData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a69034d2b6a74b54a2df49b126a14d0b7</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5f0a1b1ea05439406aa9ab4d402f4727</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiCultureItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a20ec40214d6639693b8d4f907f1b0de9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBookData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4d5c1f774fb24bf28089eaf97d9191ab</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a058616deb3fff165a7cf72f1dd45ab41</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostExtraData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae582f92508f79613dcf09c5f86023411</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aeb8f446ac33e68d501120f404ca2f155</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilBoostLotData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a94b0d6c24010fbec468cc716a2fbc117</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>adea22bfdf35153b5128b58eccf8deee7</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilEquipmentData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6a98d7d92271c1d40cbecd04be8cf554</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilEquipmentItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aea61a4f8e0040fb05ad7a3a3bf4e36a9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilFusionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a583fda8cbcec5e108a2b717d328d43fb</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDevilLVUpRateData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab2e160118903e186ed02ec94ade4181c</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDisassemblyData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a83f61c6c0e158ca9aac5719df6f3d400</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDisassemblyTriggerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0c02a60a87cf206b329c9ce7846c2087</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiDynamicMapData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a014c721f424402e588dc5ef36acc8c85</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiEnchantData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad5066ded67690a05f4a74f09c96e38e9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiEquipmentSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac618d10cddbda2ed19c434b63ac0cb88</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiExchangeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a46a996df085608cd463d2557aa1991bb</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiExpertData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a6aa17ecc0aa43b7146e8977f3785809f</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianAssistData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aa151b139359c36a34ce4a1360e7ad584</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianLevelData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a47559e2394ecd18339b1e90694e4f2d5</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac4dffee98cd3980c5fd59f81844c5c13</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiGuardianUnlockData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac5545bcdaec45e8634a4a2683613f4e6</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiHNPCData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a866227fa7bb18070d2fddbf866a92a1b</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab8963783ea80aa6ba1277162e3347b8d</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMissionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aa79c9307ba36e1e6529245ad3b696df0</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaReunionBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a318c646957ec6e0b65b74441c4bd083e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaReunionSetBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0df56f1306ae531a8da1c7fe1567198e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiMitamaUnionBonusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5964073d49e5eb1b486e4ebfaa58b2c4</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>af844b0850da9d41f147e68bde70ebabf</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationExtEffectData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ab51110ad1f630fb291146b7fad574394</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationExtRecipeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a544abbcacf533e01ba7f0d9ba3ed4179</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModificationTriggerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a11cd37268a0fe2da0a66adf08e5a470c</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiModifiedEffectData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5256492ff434d2928a30d516680caabf</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterConditionData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a16eef6773267addf633d610ce5a3dd51</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a9494f904543f009b3288cbcf648fdd35</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiNPCBarterGroupData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a7c5a3afc546e03832047162493ecb95e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiONPCData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a636dae73f9918df74b3f21496eacac6e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiQuestBonusCodeData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a712d510d60a25ab6bd15d797e0437c71</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiQuestData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a11367918065363345f318bfa32ddc0ce</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiShopProductData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a3f011a82103d0fd47dc102e20811598b</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a98d5c3167f6107e955dad5802246d95e</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSkillData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a9189e9b0d9825d5d53948f2cfc5996b9</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad66aed96d5713d51d3979f62c71a967d</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiSynthesisData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2bd9b07caa8938875567d4b195af94f6</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTankData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a703ea17c89247228b8e3d7b74d47c5db</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTimeLimitData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a41b62d0474009eebd400d1ea823d8378</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTitleData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a779666099a173dcdd6ed1ecca82f8ec8</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiTriUnionSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>aea822e6b2f9e209d4c794952ecbc6625</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiUraFieldTowerData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5ff7ab102a1e0079e3fb39cc12c46962</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiWarpPointData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae8de22079743e452fcdb42a1772eb8d8</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::LoadData&lt; objects::MiZoneData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4f6704962a8ec0bf30654bacf5c1f5ca</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a990cd36a67fda02cfc87a982221dab63</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSetData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2f227b7da737bb3aeccabafffbfdf4f0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EnchantSpecialData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a64207f0d83c6273d2a0613f425b47e6c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSItemData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae04e775813a7befb59c35f5056b3f0a5</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSStatusData &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DefinitionManager::RegisterServerSideDefinition&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ac53e99b39ffba66973e3f947dfce572d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Tokusei &gt; &amp;record)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetMemoryStats</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a38a7b64e9329a53fab5849177bae122a</anchor>
      <arglist>(uint64_t &amp;allocationCount, size_t &amp;heapSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InitMemoryManager</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a05c51dbd3a597587a0d80346ca10003b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMemoryManagerEnabled</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a418037a46c45bbf37136bec1464a568b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>LogComponentToString</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>afe80056cfb1276db8758e1b7176eb802</anchor>
      <arglist>(LogComponent_t comp)</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; libobjgen::UUID &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a437bf8c16dc529fbaceddc55d492fb91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; Sqrat::s64 &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a56db014ee39fb0ef728d18ba57ce4a81</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>ScriptEngine::Using&lt; Sqrat::u64 &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a8318ff2db8eca2546a7801862d14a8fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::AILogicGroup &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a5feb3e4d32a7a5b76dd5d9fc88e578d9</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonFamiliarityType &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a66f7f407eb2de72ca3d433e10babaca4</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonPresent &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4f0280c8f124bea313f8fa5209945ef6</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DemonQuestReward &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>abd41a6f270064ac1a9931604481a8198</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::DropSet &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a677dc85ea0d544d99c17ebc220ec096b</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSetData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a876428ea15c5f8323e4d82e2f514f68e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::EnchantSpecialData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a282fd6a2a357f1c5f6a226d7ad31e6b7</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Event &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a98741e6a5355d756cabe22bfc05af7a3</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::MiSItemData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>abe9868d99f17086a36bde2a5bbf4249e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::MiSStatusData &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ae0ead762950f4e24f426c3858997d991</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerShop &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0142ab03575b635a88c9b691e990cb23</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZone &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a0d366da10417b39e657ff922f5be1812</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZoneInstance &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a4e572cf2ab83dc86193b64d5bf40f817</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZoneInstanceVariant &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a1c07a3936e20d98147edf7deaf53457e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::ServerZonePartial &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>af74e5667a2dcc7d6961b34376657ca4b</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ServerDataManager::LoadObject&lt; objects::Tokusei &gt;</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad85d85ace4ceb7ee4b4d51594dd5bf73</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>LogComponent_t</type>
      <name>StringToLogComponent</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad462493a85ae839c303d46a829fd69ec</anchor>
      <arglist>(const String &amp;comp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TriggerMemorySnapshot</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a53393b803e4c3d427f85b8b3ff4bfc0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const std::size_t</type>
      <name>BLOWFISH_BLOCK_SIZE</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a2765e02af07d8f628f6e5e93d4c95b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt32Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>a3cc8ff7334c57b39376e2f9c7a7a5271</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt;</type>
      <name>validInt64Types</name>
      <anchorfile>namespacelibcomp.html</anchorfile>
      <anchor>ad23f032a5d4228b97b4787845267f33d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ArgumentParser</name>
    <filename>classlibcomp_1_1ArgumentParser.html</filename>
    <class kind="struct">libcomp::ArgumentParser::Argument</class>
    <member kind="enumeration">
      <type></type>
      <name>ArgumentType</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a7d3c0dabd1068e57372c5b606dfb0416</anchor>
      <arglist></arglist>
      <enumvalue file="classlibcomp_1_1ArgumentParser.html" anchor="a7d3c0dabd1068e57372c5b606dfb0416ab50339a10e1de285ac99d4c3990b8693">NONE</enumvalue>
      <enumvalue file="classlibcomp_1_1ArgumentParser.html" anchor="a7d3c0dabd1068e57372c5b606dfb0416a7951811e4b085cf68ed3dc3191f36405">OPTIONAL</enumvalue>
      <enumvalue file="classlibcomp_1_1ArgumentParser.html" anchor="a7d3c0dabd1068e57372c5b606dfb0416aebdf9721be38d1fc1cd6db8c737d1be0">REQUIRED</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>ArgumentParser</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>af0c93fcd4e06c59c309bc5fb7f73d8e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ArgumentParser</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a9f0d5af005d495723d0068a10451a07d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; String &gt;</type>
      <name>GetStandardArguments</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a1f0e3a8a5af175ba27ea376d59ebd99c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Parse</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a2d0848b72a7ea20c246083b4124628c9</anchor>
      <arglist>(int argc, const char *const argv[])</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>Parse</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>ae8213306dbd3045babd0e2ef06bfc1dc</anchor>
      <arglist>(const std::vector&lt; String &gt; &amp;arguments)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ParseStandardArguments</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a83d67bc254b560f81176b3d6acb0fcd2</anchor>
      <arglist>(const std::vector&lt; String &gt; &amp;arguments)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>RegisterArgument</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a74b39fc8dc5e64d7956772119bef7592</anchor>
      <arglist>(char shortName, const String &amp;longName, ArgumentType argType, std::function&lt; bool(Argument *, const String &amp;)&gt; handler)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; Argument * &gt;</type>
      <name>mArgumentParsers</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a1e5a03e47213fc64f0a50fafa7b89833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; String, Argument * &gt;</type>
      <name>mLongParsers</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>a31233c4aa50593035f9bbc762c3b5f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; char, Argument * &gt;</type>
      <name>mShortParsers</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>ad0bc6884fde63e2465064ea573eeb174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; String &gt;</type>
      <name>mStandardArguments</name>
      <anchorfile>classlibcomp_1_1ArgumentParser.html</anchorfile>
      <anchor>ae107aef2bb472d045694642eb3719040</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::ArgumentParser::Argument</name>
    <filename>structlibcomp_1_1ArgumentParser_1_1Argument.html</filename>
    <member kind="variable">
      <type>ArgumentType</type>
      <name>argType</name>
      <anchorfile>structlibcomp_1_1ArgumentParser_1_1Argument.html</anchorfile>
      <anchor>a303bedabd779dbd9f9be96d5b62b14a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; bool(Argument *, const String &amp;)&gt;</type>
      <name>handler</name>
      <anchorfile>structlibcomp_1_1ArgumentParser_1_1Argument.html</anchorfile>
      <anchor>a143b9388ac3be84831c53048d45e22f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>longName</name>
      <anchorfile>structlibcomp_1_1ArgumentParser_1_1Argument.html</anchorfile>
      <anchor>a37f6b15938bdf712d8c36f4b24f5af9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>char</type>
      <name>shortName</name>
      <anchorfile>structlibcomp_1_1ArgumentParser_1_1Argument.html</anchorfile>
      <anchor>a5e6b90ad66fab4ce36be1593aab26585</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::BaseServer</name>
    <filename>classlibcomp_1_1BaseServer.html</filename>
    <base>libcomp::TcpServer</base>
    <base>libcomp::Manager</base>
    <member kind="typedef">
      <type>std::unordered_map&lt; std::string, std::list&lt; std::shared_ptr&lt; libcomp::PersistentObject &gt; &gt; &gt;</type>
      <name>PersistentObjectMap</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ab00d1dd4d6e965d76c482ef854459d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BaseServer</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a66f84ef85d0c9f6c1c7826f37bdb498f</anchor>
      <arglist>(const char *szProgram, std::shared_ptr&lt; objects::ServerConfig &gt; config, std::shared_ptr&lt; ServerCommandLineParser &gt; commandLine)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BaseServer</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>af26a04f6b9e4a614157bf92b69765979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Cleanup</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a558ac503ff5aef83d5b08cc0b7449722</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>FinishInitialize</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a0196923ac5f81b1f56e6d9502d2cfc00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ServerConfig &gt;</type>
      <name>GetConfig</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a3f136d3503bef43fc0001c8a9eb8d682</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Database &gt;</type>
      <name>GetDatabase</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a04ea7dd332cc42025e9d8d5f48921ec4</anchor>
      <arglist>(const EnumMap&lt; objects::ServerConfig::DatabaseType_t, std::shared_ptr&lt; objects::DatabaseConfig &gt;&gt; &amp;configMap, bool performSetup, DataStore *pDataStore=nullptr, const std::string &amp;migrationDirectory=std::string())</arglist>
    </member>
    <member kind="function">
      <type>DataStore *</type>
      <name>GetDataStore</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a9f88b56f0ef6c0c5660d2c5d9f6c2f7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a2d82da53eed26d1a3de1240e66789601</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TimerManager *</type>
      <name>GetTimerManager</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ad510738a585ad5bdcaf6cdde8f8ab268</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ada464b9076e97ea48fd7c747d5de41c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ad20402790af9e5c1b221bb784f3c9339</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>QueueWork</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>aedfc887738ff281ce6b5ae20c64318bc</anchor>
      <arglist>(Function &amp;&amp;f, Args &amp;&amp;...args) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveConnection</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a72bc46aa57e7b0fa194be6bb3cfe9ef4</anchor>
      <arglist>(std::shared_ptr&lt; TcpConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ServerReady</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a724620208dfb4a16fd5bff8e330c7ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Shutdown</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ad74f7a784b5eb617e096dcf8ff8e76e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Start</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a11b85f7704e169be0147dc98faf09fb3</anchor>
      <arglist>(bool delayReady=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>GenerateDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>ad268506b7769d563c11f8beba7233ab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetConfigPath</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a0644cb1881fdf1da8a3c5ecb7e8787e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Database &gt;</type>
      <name>GetDatabase</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>abb5525c3a3345fbec81add914178e9ec</anchor>
      <arglist>(objects::ServerConfig::DatabaseType_t dbType, const EnumMap&lt; objects::ServerConfig::DatabaseType_t, std::shared_ptr&lt; objects::DatabaseConfig &gt;&gt; &amp;configMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>GetDefaultConfigPath</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a0d8fcad71d3ff477fb1ba16457292639</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>LoadDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a93ac6ce649ed258ad0703daa7816388a</anchor>
      <arglist>(const String &amp;prime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ReadConfig</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a55ba372dd22d9c29a74ed61a024684e1</anchor>
      <arglist>(std::shared_ptr&lt; objects::ServerConfig &gt; config, libcomp::String filePath)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>ReadConfig</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a7ff99d04baf9d19b5b33098196977c2d</anchor>
      <arglist>(std::shared_ptr&lt; objects::ServerConfig &gt; config, tinyxml2::XMLDocument &amp;doc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetConfigPath</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a369f8983cada7f2daf5cfb0b664c6128</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AcceptHandler</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a463bff4fbe9cf9b703bf1b8919c7ea80</anchor>
      <arglist>(asio::error_code errorCode, asio::ip::tcp::socket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>AssignMessageQueue</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ab9978ae51f0f7986e284b7f559c7875b</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::EncryptedConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>CreateConnection</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>ad9e38654d84b3c3902d208f1cf6db2f1</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CreateWorkers</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ae7d6736d53c4c6c49a1bc856d0cddeb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>GetDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a9cce8e569e77164b99c2492f9af23b85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; libcomp::Worker &gt;</type>
      <name>GetNextConnectionWorker</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ad13b43c1005ae85f5a81f331aee199ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>InsertDataFromFile</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ac8571c58c0d1aa351fb584119175c29e</anchor>
      <arglist>(const libcomp::String &amp;filePath, const std::shared_ptr&lt; Database &gt; &amp;db, const std::set&lt; std::string &gt; &amp;specificTypes={})</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadDataFromFile</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a30ffbbe25582b0bdee423083593158eb</anchor>
      <arglist>(const libcomp::String &amp;filePath, PersistentObjectMap &amp;records, bool registerRecords, const std::set&lt; std::string &gt; &amp;specificTypes={})</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ab8242184f16ac6379b0deb827ca7920f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a718f3b3d0e8c5a4ca7c016e964c8f111</anchor>
      <arglist>(const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ServerCommandLineParser &gt;</type>
      <name>mCommandLine</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a40ceb65d4fb3f324ffd75841ac51f4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::ServerConfig &gt;</type>
      <name>mConfig</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a1464941c745d75dcc84e34819066e03e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; TcpConnection &gt; &gt;</type>
      <name>mConnections</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a82759a0ab288cad1d998a3fff79f4711</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mConnectionsLock</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>af7380cea26de0412af121ec8356c5fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::DataStore</type>
      <name>mDataStore</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a0ed20d3bff93f7b9c8d453ebfce149b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::Worker</type>
      <name>mMainWorker</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>ade237f520f624d480e02a7235c411809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::Worker</type>
      <name>mQueueWorker</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>acfe2403fc7925ba4d899ce5acf3978df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>asio::io_service</type>
      <name>mService</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a09f3da6ea1d1fb1fc3c3131aef334fb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::TimerManager</type>
      <name>mTimerManager</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a0cc084558cb650669a9fdc1c0aba328c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; libcomp::Worker &gt; &gt;</type>
      <name>mWorkers</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a084ec4211d2b1098bb53e41b6cbe13b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::string</type>
      <name>sConfigPath</name>
      <anchorfile>classlibcomp_1_1BaseServer.html</anchorfile>
      <anchor>a74e04a09f874ca344ba0359ae2fc5d1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::BasicPacketStream</name>
    <filename>classlibcomp_1_1BasicPacketStream.html</filename>
    <member kind="function">
      <type></type>
      <name>BasicPacketStream</name>
      <anchorfile>classlibcomp_1_1BasicPacketStream.html</anchorfile>
      <anchor>accca3da3eeb652e87176d4104d8a7e2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BasicPacketStream</name>
      <anchorfile>classlibcomp_1_1BasicPacketStream.html</anchorfile>
      <anchor>aee45893c53cfa5433911b4d0bb980cb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual pos_type</type>
      <name>seekoff</name>
      <anchorfile>classlibcomp_1_1BasicPacketStream.html</anchorfile>
      <anchor>a6072a9ed8763947e1561e91b292a4478</anchor>
      <arglist>(off_type off, std::ios_base::seekdir dir, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual pos_type</type>
      <name>seekpos</name>
      <anchorfile>classlibcomp_1_1BasicPacketStream.html</anchorfile>
      <anchor>af53b8f70ac7179034a9b7eaad4a29ff6</anchor>
      <arglist>(pos_type pos, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::BinaryDataSet</name>
    <filename>classlibcomp_1_1BinaryDataSet.html</filename>
    <member kind="function">
      <type></type>
      <name>BinaryDataSet</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a78e4eff76b02e82cd69f310831f0b852</anchor>
      <arglist>(std::function&lt; std::shared_ptr&lt; libcomp::Object &gt;()&gt; allocator, std::function&lt; uint32_t(const std::shared_ptr&lt; libcomp::Object &gt; &amp;)&gt; mapper)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BinaryDataSet</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>ad0a4fa40b887aa600b7a70b32ddf09c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Object &gt;</type>
      <name>GetObjectByID</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a75c8b117b442d4202278812f3946ea1d</anchor>
      <arglist>(uint32_t id) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; libcomp::Object &gt; &gt;</type>
      <name>GetObjects</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a2b404e277151132555fa00b75bed47bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetTabular</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a1752ff543139ca85deeb1f69986be04d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetXml</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a842d0407d285b3ff0e1e6b2846f07d38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>ac54aa637146e56d586d8443ff87f15e8</anchor>
      <arglist>(std::istream &amp;file, bool loadMore=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadXml</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>aa84b278dbeb6eff5eccf53234fc39c55</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, bool loadMore=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a461938f1779354a2b22ba9e94c2bf951</anchor>
      <arglist>(std::ostream &amp;file) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::function&lt; std::shared_ptr&lt; libcomp::Object &gt;)&gt;</type>
      <name>mObjectAllocator</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>af3ce56a5475dd194fcdfff0db44996f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::shared_ptr&lt; libcomp::Object &gt; &gt;</type>
      <name>mObjectMap</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>ac9ff17a2ee8cdc21f13cf6109841d69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::function&lt; uint32_t(const std::shared_ptr&lt; libcomp::Object &gt; &amp;)&gt;</type>
      <name>mObjectMapper</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>a098187be41986a4227f1fc1a554b734f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; libcomp::Object &gt; &gt;</type>
      <name>mObjects</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>ad75d92bbab85914ba57b22de59832d4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; std::string &gt;</type>
      <name>ReadNodes</name>
      <anchorfile>classlibcomp_1_1BinaryDataSet.html</anchorfile>
      <anchor>aacf89fb0ca549420aaf0bcbfb95a00cc</anchor>
      <arglist>(tinyxml2::XMLElement *node, int16_t dataMode) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ChannelConnection</name>
    <filename>classlibcomp_1_1ChannelConnection.html</filename>
    <base>libcomp::EncryptedConnection</base>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionStatus_t</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATUS_NOT_CONNECTED</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796ae7d750ffaa4bcfa717c958fb2af099d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATUS_CONNECTING</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796aaaae2f100a3e3f924e51e2a022ab35db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATUS_CONNECTED</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796aefdd5a70d030589ff3d1762d0685670a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATUS_WAITING_ENCRYPTION</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796aa23742366b4ccde8c3583676b8ed96c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>STATUS_ENCRYPTED</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac238c985bb979b6f49d28827cbe58796a81e8ce69a6c1e48793288dc9da68327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Role_t</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a4c3f53a0348cfdfa4255b8b67d239cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ROLE_SERVER</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a4c3f53a0348cfdfa4255b8b67d239ceea1e4ce2565a97d6a5d11dd00174ba2c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ROLE_CLIENT</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a4c3f53a0348cfdfa4255b8b67d239ceea12e0003c8c1b091bafeb9fa22cb56f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelConnection</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>a31ff2c0a16302dd39e5ba197c4a85ecf</anchor>
      <arglist>(asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ChannelConnection</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>aeca369f5977eedfb7e76c91487a762c7</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelConnection</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>ad0bb50e546f2b0311f366c4cdf54908a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a25b99e80c70677f5e3345259559c9acc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Connect</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a729d5bd879e34d1d280b511d2bb5f865</anchor>
      <arglist>(const String &amp;host, uint16_t port=0, bool async=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ConnectionSuccess</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>afdf8f76209ad2acbed875f8dad40e440</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FlushOutgoing</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a924053af98119046f19022f2631cbbbd</anchor>
      <arglist>(bool closeConnection=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetName</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ad90697f27489cea60d8c4131ce44562b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetRemoteAddress</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a5853c3bf926cb43b225e3a5cacb74b55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Role_t</type>
      <name>GetRole</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>abc7cb7067f08371c757403c4c1da2fb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConnectionStatus_t</type>
      <name>GetStatus</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac1ca083632490f95af04e6ff2b5a2a35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>QueueObject</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a5109dde7f1740798c3a5d377dc398b88</anchor>
      <arglist>(const Object &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>QueuePacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>afa2f1397fe3c8d90151a42036f4c540c</anchor>
      <arglist>(Packet &amp;packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>QueuePacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a236aec6d08c3f3455f4b59f3ce61d9e3</anchor>
      <arglist>(ReadOnlyPacket &amp;packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>QueuePacketCopy</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a06bbfcc02048901ac0444481524c478a</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RequestPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a412a55531c01fb16f0e1291e8641ff41</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SendObject</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a00ddf22ef7abe9c0c5339c509067037f</anchor>
      <arglist>(const Object &amp;obj, bool closeConnection=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SendPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ac0ea490b42aed50e66804539c39c4b9a</anchor>
      <arglist>(Packet &amp;packet, bool closeConnection=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SendPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a0c79feffc8a90d3ef7475484c2a5575f</anchor>
      <arglist>(ReadOnlyPacket &amp;packet, bool closeConnection=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>SendPacketCopy</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a89e01c7272f989a4cbadfa82069384ee</anchor>
      <arglist>(libcomp::Packet &amp;packet, bool closeConnection=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMessageQueue</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a20c842cc51f4e681575173284b47cc77</anchor>
      <arglist>(const std::weak_ptr&lt; MessageQueue&lt; libcomp::Message::Message * &gt;&gt; &amp;messageQueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetName</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>abe57b02b9b98f6cc97053dce3808d485</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetServerConfig</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a011ace39e63134c0d6af7e4cde3b5417</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerConfig &gt; &amp;config)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a99f2a1310e869a11536e490c7997748a</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; TcpConnection &gt;&gt; &amp;connections, Packet &amp;packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a902cc6db2914235a0e21a2b6d4aa9178</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; TcpConnection &gt;&gt; &amp;connections, ReadOnlyPacket &amp;packet)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>GenerateDiffieHellmanPublic</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>acd2cace5b3c75a3fb6827012bb4fe971</anchor>
      <arglist>(const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::vector&lt; char &gt;</type>
      <name>GenerateDiffieHellmanSharedData</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>af45c9719e42b367fd90e08c092846b7f</anchor>
      <arglist>(const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman, const String &amp;otherPublic)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>GetDiffieHellmanPrime</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ad6c38282a2afe10a5d5201fd9cc5d497</anchor>
      <arglist>(const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>void(EncryptedConnection::*</type>
      <name>PacketParser_t</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a2654b00b15a5509e2684917603e1ac9f</anchor>
      <arglist>)(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Connect</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a77fc24505b678238a1d9d375657f3321</anchor>
      <arglist>(const asio::ip::tcp::endpoint &amp;endpoint, bool async=true)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ConnectionEncrypted</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a092a81782c9fde5fe8b10c055f2bab8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>ConnectionFailed</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a5ba4f73c68fa2d2e9db43cc7a5e8dae4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>DecompressPacket</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>ae78433c7b5499ded47063589472a80e7</anchor>
      <arglist>(libcomp::Packet &amp;packet, uint32_t &amp;paddedSize, uint32_t &amp;realSize, uint32_t &amp;dataStart)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::list&lt; ReadOnlyPacket &gt;</type>
      <name>GetCombinedPackets</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>af768cf1eff7525801901a87633ff3f70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>GetHeaderSize</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>af457d3cf7d670ac71cea230ac7bfbf98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PacketReceived</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a61dbcfb52b816f199059f46ecdd5f4ab</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PacketSent</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>aa17bd57a6f9641de377d94b162bd62b1</anchor>
      <arglist>(ReadOnlyPacket &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParseClientEncryptionStart</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a4ed3a4e951d8f2b78441e66f5146f624</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ParseExtensionConnection</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a9216b12bdd2b45b9a28578d53eb7abd0</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParsePacket</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a92fe91508b1857376fffe890710fde5d</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParsePacket</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>af1aeae587009e7d1ae0d823a9f59d539</anchor>
      <arglist>(libcomp::Packet &amp;packet, uint32_t paddedSize, uint32_t realSize)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParseServerEncryptionFinish</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>ad75f5e3426063fdf6fbd94ce1c849955</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParseServerEncryptionStart</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a771cf024a14198f0ee74158753803710</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PreparePackets</name>
      <anchorfile>classlibcomp_1_1ChannelConnection.html</anchorfile>
      <anchor>af039f6829de3efab096688deb268d426</anchor>
      <arglist>(std::list&lt; ReadOnlyPacket &gt; &amp;packets)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SendMessage</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a44a0e426408564e5bab57ca042617671</anchor>
      <arglist>(const std::function&lt; libcomp::Message::Message *(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;)&gt; &amp;messageAllocFunction)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetEncryptionKey</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>affe1bdf86d9c2d760eb1240a358c93d1</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetEncryptionKey</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a2a943c4105db4bac3aa244c4df94ffb4</anchor>
      <arglist>(const void *pData, size_t dataSize)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SocketError</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>aaec864c6a99b8961045fad3cb2d36173</anchor>
      <arglist>(const libcomp::String &amp;errorMessage=libcomp::String())</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream *</type>
      <name>mCaptureFile</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a6361496f2b835265eef24b32752da54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>mDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>abe0afed6fd82e7cdc74b323751e924c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Crypto::Blowfish</type>
      <name>mEncryptionKey</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>aac3df67a82bcb463cc547a42ba5180a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; MessageQueue&lt; libcomp::Message::Message * &gt; &gt;</type>
      <name>mMessageQueue</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a194ce22c55e8e54c6c41ae1674909202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ReadOnlyPacket</type>
      <name>mOutgoing</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ab033ab0fe1f79d913440dad14009ff91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mOutgoingMutex</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a7d2bd09bef42ed91a62ce83926220641</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; ReadOnlyPacket &gt;</type>
      <name>mOutgoingPackets</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ad7393a70ef12f69fb76878ae18da7741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PacketParser_t</type>
      <name>mPacketParser</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>abd6751259781dc0ad457522483c638a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSendingPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a9a54087928b75379c1b6a25704ebe800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::ServerConfig &gt;</type>
      <name>mServerConfig</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a4a52c5ce37692447ca817a278f256f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConnectionStatus_t</type>
      <name>mStatus</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>aacb2f0baf37cf5d8e7580c0419a8d254</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Child</name>
    <filename>classlibcomp_1_1Child.html</filename>
    <member kind="function">
      <type></type>
      <name>Child</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a6835321a627e0dc8641b3b5a94582e97</anchor>
      <arglist>(const std::string &amp;program, const std::list&lt; std::string &gt; &amp;arguments, int bootTimeout=0, bool restart=false, bool displayOutput=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Child</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>acc93c4aff40a3269329aaab4f65d18ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetBootTimeout</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>aaa79b588589d10754b17e9ddfff43ad8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetCommandLine</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a7143a0a0345711e300ff15feecc52c6e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pid_t</type>
      <name>GetPID</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a621cce0560e1b1ab58c3c275a37f16f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Interrupt</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>aa2462225551a22eb5472b6e7670acab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a10b9793949cebda004ecce029adbcf84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ShouldRestart</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>add86239d00ca5dd9651e2f379cc9a5f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Start</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>acb217f21a02e6cc2322787500c43d1a2</anchor>
      <arglist>(bool notify=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::string &gt;</type>
      <name>mArguments</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>ad3f87a056a7a964a71579b926b693f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mBootTimeout</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>ac759f3ab47912745809c275d75180aca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDisplayOutput</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>af0e756cf7569e9770cf1eeffd71e0628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>pid_t</type>
      <name>mPID</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a036ec90ad5bc3766b2f8ca6678009097</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mProgram</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a2aaeff10a1ec567a1f6a01c5ec880e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mRestart</name>
      <anchorfile>classlibcomp_1_1Child.html</anchorfile>
      <anchor>a98c39c82f4936f5221b05b39a78ff8a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Database</name>
    <filename>classlibcomp_1_1Database.html</filename>
    <member kind="function">
      <type></type>
      <name>Database</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ac54a972830f30edf74be00dda5c4d006</anchor>
      <arglist>(const std::shared_ptr&lt; objects::DatabaseConfig &gt; &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Database</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a84d399a2ad58d69daab9b05330e1316d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ApplyMigration</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ae2ddcf6da45d7e3e1f3c1ea1c07701a6</anchor>
      <arglist>(const std::shared_ptr&lt; BaseServer &gt; &amp;server, DataStore *pDataStore, const libcomp::String &amp;migration, const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a760e06342224a40b248d9b53363a45cd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>DeleteObjects</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a7ba9941107ce107c20b953511217481c</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; PersistentObject &gt;&gt; &amp;objs)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteSingleObject</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a767850599cf498210c0cb65a70550c8f</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ad06582f7596b1d08996032087ea48e0b</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Exists</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>abfbdc79b6d70b10c9cf4c2f44c56eaea</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DatabaseConfig &gt;</type>
      <name>GetConfig</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a15be3e723e40a5544910edcc06bfabbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>GetLastError</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a37d1ccfada957aa849faf5afd1c7c4c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>InsertSingleObject</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a90ee5b76c504283e20377279a60c6cb8</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsOpen</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>abaff45117e3ab79bef9e81040d8c9009</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ada8807376bdfa27d064f9b8c2a074ec7</anchor>
      <arglist>(size_t typeHash, DatabaseBind *pValue)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>LoadSingleObject</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a204a443853d17c850c0c6601ed26f624</anchor>
      <arglist>(size_t typeHash, DatabaseBind *pValue)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Open</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>afd07200531c7e4b863b32012a20bff92</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual DatabaseQuery</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a43aee41a7db505e28a1fd60f4710e149</anchor>
      <arglist>(const String &amp;query)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ProcessChangeSet</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a703f9e5abe752cd96a1094b2b3731874</anchor>
      <arglist>(const std::shared_ptr&lt; DatabaseChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; libobjgen::UUID &gt;</type>
      <name>ProcessTransactionQueue</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a3ebb41182084673bcc841c1316ca097c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>QueueChangeSet</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>afc4182f297d82b6a82a53b0484543291</anchor>
      <arglist>(const std::shared_ptr&lt; DatabaseChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueDelete</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a50f057e6cdd00d3ca36863b799ce312d</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; obj, const libobjgen::UUID &amp;uuid=NULLUUID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueInsert</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ac57cf2dc9c9db068e6782de81699343a</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; obj, const libobjgen::UUID &amp;uuid=NULLUUID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueUpdate</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a97e9ef82c119acd3691ed4d261ee5b9e</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; obj, const libobjgen::UUID &amp;uuid=NULLUUID)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Setup</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a1b5ea8359282d4bd844d865b9d46e463</anchor>
      <arglist>(bool rebuild=false, const std::shared_ptr&lt; BaseServer &gt; &amp;server={}, DataStore *pDataStore=nullptr, const std::string &amp;migrationDirectory=std::string())=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>TableExists</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a1c7969fad6d6121c655a541379c12fc5</anchor>
      <arglist>(const libcomp::String &amp;table)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TableHasRows</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a3c2d92bc3c77b3aa0ec4ea135a6ecfbc</anchor>
      <arglist>(const String &amp;table)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>UpdateSingleObject</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a923b694aae4d48649c3f311d2ec30713</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Use</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a87cb4aadaa77e01dfb86ecc8bf3b4239</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UsingDefaultDatabaseType</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a4c125410c57437895ee1f0939d592166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::vector&lt; std::shared_ptr&lt; libobjgen::MetaObject &gt; &gt;</type>
      <name>GetMappedObjects</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>ae29041a046ab617389db97089f3d6cc0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>LoadSingleObjectFromRow</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a29b4f738fc527eea4eae650c612d65b9</anchor>
      <arglist>(size_t typeHash, DatabaseQuery &amp;query)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ProcessOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>aea0371bfd5be27e27595c446656bd6fb</anchor>
      <arglist>(const std::shared_ptr&lt; DBOperationalChangeSet &gt; &amp;changes)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>ProcessStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a1c7692ab1f24f2118c3a94a3ddd29c71</anchor>
      <arglist>(const std::shared_ptr&lt; DBStandardChangeSet &gt; &amp;changes)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::DatabaseConfig &gt;</type>
      <name>mConfig</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a3723884cf308ce285bcece4496d86a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>mError</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a1f8db340d7205d6727ad8c8f92706830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mTransactionLock</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a09fc7c168323901ffc6f21fb9b8374ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; DBStandardChangeSet &gt; &gt;</type>
      <name>mTransactionQueue</name>
      <anchorfile>classlibcomp_1_1Database.html</anchorfile>
      <anchor>a67c4562f0f43a011b93a132117dd5291</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBind</name>
    <filename>classlibcomp_1_1DatabaseBind.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseBind</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>a391ad4e84d32230f4695442c0f08fefa</anchor>
      <arglist>(const String &amp;column)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBind</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>ac98599f4fdde79ce1ce1ed81698573da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>ad0b2772226cb4dea0760aa82ffd19272</anchor>
      <arglist>(DatabaseQuery &amp;db)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>a9d9abe97f15efd2f21a60e4ba67211fb</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)=0</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetColumn</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>a6c456373564e8147e7495f92c653921f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetColumn</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>a5afe08ba0a60be3a28baa975bfcfe15e</anchor>
      <arglist>(const String &amp;column)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>mColumn</name>
      <anchorfile>classlibcomp_1_1DatabaseBind.html</anchorfile>
      <anchor>a8130557dbc6e7558b34fd16a4e81dd77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindBigInt</name>
    <filename>classlibcomp_1_1DatabaseBindBigInt.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindBigInt</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>a31c57e7d82c2a3eeeba25a7de2303846</anchor>
      <arglist>(const String &amp;column, int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindBigInt</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>a006535507de254b3cf1f943b5b956717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>a5a9caf437bd1ff76b4ebd9805e63eb9d</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>acc36861a219529b61214841b3bfe5113</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>ab65dc9ee2c9004c93636da96af947bed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int64_t</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBigInt.html</anchorfile>
      <anchor>aa0e040414d10d5c9af7f4715b1b44159</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindBlob</name>
    <filename>classlibcomp_1_1DatabaseBindBlob.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindBlob</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>aa363fddab982fae76d10f3bf6d445c6a</anchor>
      <arglist>(const String &amp;column, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindBlob</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>a4908814fc2387a1091d617396cc93e36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>ae5caabc6ae4986a249159ad09cf07284</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>a9bbc808201fe8ee8b35c80590d1b180a</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>aa0ef8e25b47f9a003b74549d9a873e39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; char &gt;</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBlob.html</anchorfile>
      <anchor>a15d8013071091d9e134f169a73d849c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindBool</name>
    <filename>classlibcomp_1_1DatabaseBindBool.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindBool</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>aae5537d2de863ea388433398a331616e</anchor>
      <arglist>(const String &amp;column, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindBool</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>aabbb7399d8d1075f53061602ac3b25a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>ac6d56dcc4e31535e0576d669a60a368c</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>acba7f545d169cb6deeecc1813c1c8d1b</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>ac080471b159f44de6232603098579038</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindBool.html</anchorfile>
      <anchor>a96bd18618bb76c9f260c3b862295e5b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindDouble</name>
    <filename>classlibcomp_1_1DatabaseBindDouble.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindDouble</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>a48a4fab46064381edddab89270fb0202</anchor>
      <arglist>(const String &amp;column, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindDouble</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>ae79187cb06f289cafabeb39147ad793d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>acbcfe9390224d0bbf8dda7245f7d9da2</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>a9a78ede3b46c610af0812bb8497b5c73</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>ae6d3c31fbdfa0e56391134ffc3906fdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindDouble.html</anchorfile>
      <anchor>a7260b33aded71a96be61eafda06e116a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindFloat</name>
    <filename>classlibcomp_1_1DatabaseBindFloat.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindFloat</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>aca16a1c1ac0405e2d33680c912309fac</anchor>
      <arglist>(const String &amp;column, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindFloat</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>aabb9cda58eb2f5c5a8e1a7c840aace8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>aea03af50cdd5ad15bffb07f7306aaa30</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>a3c89533e87040d97b80b9e8d4548951c</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>af9e6985f323afaed98b261c14f867fd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindFloat.html</anchorfile>
      <anchor>a54dea954df380edb4e865ec55f3cfb4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindInt</name>
    <filename>classlibcomp_1_1DatabaseBindInt.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindInt</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>a66a78252504a760bd704df842875b9fd</anchor>
      <arglist>(const String &amp;column, int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindInt</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>abd1233f1017494d2dbb1322d7bae84c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>ab589755a1fc87be719b88c4834890641</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>a5bc708f97b7c6c6ddeb185e8b9b5ab84</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>a498d0f74488af572593e7561c600f10f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindInt.html</anchorfile>
      <anchor>aedee81d1dc2f483b1d9f7decaba3823b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindText</name>
    <filename>classlibcomp_1_1DatabaseBindText.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindText</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>a7a0c5a7fada8a006315f9496114cce5c</anchor>
      <arglist>(const String &amp;column, const String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindText</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>a6b7e20941fbe6ce3f676708bb68dbe62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>aae4f647444bed8063d115ac4df7a1bed</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>ab17615a17ef07a86a06bee04ebbc5206</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>a21163d2d221e401d7c07979ad1ced4e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindText.html</anchorfile>
      <anchor>a143927f785e471db447ce658fcd9d14c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseBindUUID</name>
    <filename>classlibcomp_1_1DatabaseBindUUID.html</filename>
    <base>libcomp::DatabaseBind</base>
    <member kind="function">
      <type></type>
      <name>DatabaseBindUUID</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>a59d259a7516339407b29382117208050</anchor>
      <arglist>(const String &amp;column, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseBindUUID</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>a0f42f6859146a1c369d72bcefa8ca966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>aabfa7d02b00afaad77beb6391b4581f6</anchor>
      <arglist>(DatabaseQuery &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>a09e35a4f43daf9d7a285cf35fdbd6995</anchor>
      <arglist>(DatabaseQuery &amp;db, size_t idx)</arglist>
    </member>
    <member kind="function">
      <type>libobjgen::UUID</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>a7cdb24176541ceae621104773de4fff9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libobjgen::UUID</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DatabaseBindUUID.html</anchorfile>
      <anchor>a17d33e38c227dc4f26d5b2f8aadc21a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseChangeSet</name>
    <filename>classlibcomp_1_1DatabaseChangeSet.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a2a2a637b734d23907052939f0dacd103</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>ab7b621e36dac5d6df12d7fe31bdb8c42</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a034f57b197c0094431e62b187ef6a3b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Delete</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a1f925050e3fdd6a2304c134e9f2d02d4</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)=0</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetTransactionUUID</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a3ab8511a6d85a6eba5a8e0e7b4222a0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Insert</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a85944ed91189794581aefc9487aa4383</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a05878fe4bc5cd345347887da6c109ecd</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; DatabaseChangeSet &gt;</type>
      <name>Create</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a03a7037cb49e525b13310dfd97f469dc</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid=NULLUUID)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libobjgen::UUID</type>
      <name>mTransactionUUID</name>
      <anchorfile>classlibcomp_1_1DatabaseChangeSet.html</anchorfile>
      <anchor>a970bcaab75801de37bd6d2fe80ce28f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseMariaDB</name>
    <filename>classlibcomp_1_1DatabaseMariaDB.html</filename>
    <base>libcomp::Database</base>
    <member kind="function">
      <type></type>
      <name>DatabaseMariaDB</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a944fb35e354d33c4b53e207a778aac6b</anchor>
      <arglist>(const std::shared_ptr&lt; objects::DatabaseConfigMariaDB &gt; &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseMariaDB</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a603ce49363ba163a1874fefdca89c7d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a6cb6e3bfdb4e10b8ee926c6da0cfc4ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a86df1ad2a5b36c38d9d2599ff8a763cc</anchor>
      <arglist>(MYSQL *&amp;connection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteObjects</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a4c8fdfd6980162e40a209b8600ce7b27</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; PersistentObject &gt;&gt; &amp;objs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Exists</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a8fcbd653cb5ada40834d5ac8b1319a63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual String</type>
      <name>GetLastError</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a10355689e2b457c21490cb5905b96c31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetLastError</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a24c37d425839ee599d9023494735857c</anchor>
      <arglist>(MYSQL *pConnection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>InsertSingleObject</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a197b5f0bc9d0dbab80c3aa1b62bb2f48</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsOpen</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a5c142c227b0ba4f7bc7e7e258392e906</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>ad16be9b33c26f98a91e2c95ea4b1d01d</anchor>
      <arglist>(size_t typeHash, DatabaseBind *pValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Open</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a74cdeae80264fea64b368ab682214d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseQuery</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a738bac3b614eef7fab179427ff7c91b0</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Setup</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a8d322da49ab7325fb553b3772e70dba8</anchor>
      <arglist>(bool rebuild=false, const std::shared_ptr&lt; BaseServer &gt; &amp;server={}, DataStore *pDataStore=nullptr, const std::string &amp;migrationDirectory=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TableExists</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a59695f10d0d1a23d1e445256d56dc101</anchor>
      <arglist>(const libcomp::String &amp;table)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateSingleObject</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a4bd3821bd0e03a2fbe6f6ab3a1b9d4d2</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Use</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>add6ecfd95b4d3c17470d935e62e88dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyAndSetupSchema</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a278d62b6be9946694ce4eb49fbe77591</anchor>
      <arglist>(bool recreateTables=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a5e489ab787f2ac5e1125d4bfeb27f552</anchor>
      <arglist>(const std::shared_ptr&lt; DBOperationalChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a494196582df88b3df5e5638d3c78fceb</anchor>
      <arglist>(const std::shared_ptr&lt; DBStandardChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ConnectToDatabase</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a9a2e1bd1c1e863581cd227c38fe2ce69</anchor>
      <arglist>(MYSQL *&amp;connection, const libcomp::String &amp;databaseName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MYSQL *&amp;</type>
      <name>GetConnection</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a3d0099fee9562b2f28f84d8fd77d0cd5</anchor>
      <arglist>(bool autoConnect)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>String</type>
      <name>GetVariableType</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a3c5850fae695c34ece19da15fbb932fc</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; var)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ProcessExplicitUpdate</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a09c25cf98b1621a710f6485bf421f43e</anchor>
      <arglist>(const std::shared_ptr&lt; DBExplicitUpdate &gt; &amp;update)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mConnectionLock</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a881bcb3dff65f9c8f3679e4b6933cda8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::thread::id, MYSQL * &gt;</type>
      <name>mConnections</name>
      <anchorfile>classlibcomp_1_1DatabaseMariaDB.html</anchorfile>
      <anchor>a57bffb3be788d20c4ee4feeac7e0ee83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseQuery</name>
    <filename>classlibcomp_1_1DatabaseQuery.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseQuery</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a32240696d9e9df8e22a9fae6b1b5cbb9</anchor>
      <arglist>(DatabaseQueryImpl *pImpl)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseQuery</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a735fc58451c0ff4affd03b31a5c47657</anchor>
      <arglist>(DatabaseQueryImpl *pImpl, const String &amp;query)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseQuery</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a64447ba7879452fd39de5a16b0558e4e</anchor>
      <arglist>(const DatabaseQuery &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DatabaseQuery</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ac3945bca24e8f69b6d81f997e2361c45</anchor>
      <arglist>(DatabaseQuery &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DatabaseQuery</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>aa418f6f762edeeabec4ffd254241e0f5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>AffectedRowCount</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>aa390dab684c75767ea839c97a39fd365</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a4da71c04c6125878ee7067c50e3b9fe0</anchor>
      <arglist>(size_t index, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a829f3c81bbf5726912d63fa5afac649c</anchor>
      <arglist>(const String &amp;name, const String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a30d1d2cb3e7e81e924e2e7ce84c7f91c</anchor>
      <arglist>(size_t index, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>aafb9b693b4d907bad312989f441d07db</anchor>
      <arglist>(const String &amp;name, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a64979363b28e5dc25f1f6a4ba60b5e71</anchor>
      <arglist>(size_t index, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a9c43fce40b7ff1445f3603df3c0cb4d1</anchor>
      <arglist>(const String &amp;name, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ab1a9887ba57a17013d8ea200c205261a</anchor>
      <arglist>(size_t index, int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ac43fc2efd3e69111c03b4243f0a1a1ef</anchor>
      <arglist>(const String &amp;name, int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>aca8cce6e83cc39bab7709a53342b1ad5</anchor>
      <arglist>(size_t index, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a7434210d126f770a93e57de7d359942d</anchor>
      <arglist>(const String &amp;name, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a2a1eaae402504f932495305375af7f4a</anchor>
      <arglist>(size_t index, float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a62b998ab87e28ff8bbf0e68401fe8f7f</anchor>
      <arglist>(const String &amp;name, float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a3594c767925883cf0bff3a518df6dc2f</anchor>
      <arglist>(size_t index, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>abc58142cfea3f24194a892355f7a1552</anchor>
      <arglist>(const String &amp;name, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a7e25f6cb66f28da7d08ccfc19ff3a806</anchor>
      <arglist>(size_t index, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a5ab9cd63afd533f67466a7dd9de12a22</anchor>
      <arglist>(const String &amp;name, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ae8a341c637b80a13ab1e244db6a40af6</anchor>
      <arglist>(size_t index, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>af22c8ccb272c28ac839b808621e9beba</anchor>
      <arglist>(const String &amp;name, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Execute</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a02e6deceb10ff3a21371296a08ae5238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetRows</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ab5b2f16ddd83f5254581bb321d6c310d</anchor>
      <arglist>(std::list&lt; std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt;&gt; &amp;rows)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a9600002344840535f28330ca5bf5d19b</anchor>
      <arglist>(size_t index, String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ae74227f073b1ca8b1e7098b332b9becd</anchor>
      <arglist>(const String &amp;name, String &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ae317d8e9b76960c7a66b65f7caefaca7</anchor>
      <arglist>(size_t index, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ab3961a8c9bf2edf7f737518aa3c9bdc8</anchor>
      <arglist>(const String &amp;name, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a1cafdfd901e0137581434ffe05f3a664</anchor>
      <arglist>(size_t index, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>af44f53b6ea6be5140c2b9122abe96f2c</anchor>
      <arglist>(const String &amp;name, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a6599eaa683a1ac3e0d7cbfc7abc45e69</anchor>
      <arglist>(size_t index, int32_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a227918acbd2bc811c0a929a59af22d23</anchor>
      <arglist>(const String &amp;name, int32_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a685dd787b5a8e831be9c2b5fff475e32</anchor>
      <arglist>(size_t index, int64_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a769e019b4edd79a64da42eb3cd2112d6</anchor>
      <arglist>(const String &amp;name, int64_t &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ae088852da63a20536b7920fc8ac5978a</anchor>
      <arglist>(size_t index, float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ae6391e8229feed9c1cc7cbdde92ba3f2</anchor>
      <arglist>(const String &amp;name, float &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a68b17a48f071e384a1389a3acff12823</anchor>
      <arglist>(size_t index, double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a1871ede13e5da50403e05baa5ae84bf4</anchor>
      <arglist>(const String &amp;name, double &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a1efda92e122b1821e53205fd86a128b3</anchor>
      <arglist>(size_t index, bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a54dcdc5ab2a69585a8c306b429dc0ff0</anchor>
      <arglist>(const String &amp;name, bool &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a659783646dbe7f1ee9fac0a019888029</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Next</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>ab030495cbd5441189b9e438a87338a79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DatabaseQuery &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a1c21c645b4e1899cb6e9e914d71e6d49</anchor>
      <arglist>(DatabaseQuery &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a2c8066517dc12a84b2f1f70280e51b17</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DatabaseQueryImpl *</type>
      <name>mImpl</name>
      <anchorfile>classlibcomp_1_1DatabaseQuery.html</anchorfile>
      <anchor>a89ee0f2d04aa16cd00584ac314dc49c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseQueryImpl</name>
    <filename>classlibcomp_1_1DatabaseQueryImpl.html</filename>
    <member kind="function">
      <type></type>
      <name>DatabaseQueryImpl</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a3a06e1bc238438dae20d696fe09e03ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseQueryImpl</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a82e1110252c4ac36910525c5ff5e2561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>AffectedRowCount</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ae13c74fe429f9bca6494d1d74b5d41df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ab62f118c41013dfe5d813f4c83ace28d</anchor>
      <arglist>(size_t index, const String &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>aa7329f77dda2f25f3df2e1a421e97807</anchor>
      <arglist>(const String &amp;name, const String &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a50d97c50bdc7f1654258260b5432950e</anchor>
      <arglist>(size_t index, const std::vector&lt; char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>aca6585b5a4e80987a52cb6000a21a1c5</anchor>
      <arglist>(const String &amp;name, const std::vector&lt; char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a79f37aaee71fb69b5ce1351b36601e58</anchor>
      <arglist>(size_t index, const libobjgen::UUID &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>adc5b4a822d5a1c05d6b4198cb4afda10</anchor>
      <arglist>(const String &amp;name, const libobjgen::UUID &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a573a28c048011fe575802f8d592e5406</anchor>
      <arglist>(size_t index, int32_t value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>aa926073386f84240608cf34fafe56e5b</anchor>
      <arglist>(const String &amp;name, int32_t value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a5184d1506cea6af9e3a2d32bc17c7fa4</anchor>
      <arglist>(size_t index, int64_t value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>aa5acbf8f7408df0cad91bf4fab240f79</anchor>
      <arglist>(const String &amp;name, int64_t value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a2a913ad261dc61e48c124a083717a6ba</anchor>
      <arglist>(size_t index, float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a51930a4fa877104b13d85648441b87b6</anchor>
      <arglist>(const String &amp;name, float value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a3e6520ffc3d3a70cb5b4d3c586f5c00c</anchor>
      <arglist>(size_t index, double value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a3d6ee74a13a1f981881e89543faeefd2</anchor>
      <arglist>(const String &amp;name, double value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ae8d04d89817ffc7daa06b9d9d3832583</anchor>
      <arglist>(size_t index, bool value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a5814529a13a5464b3515b826f88820bf</anchor>
      <arglist>(const String &amp;name, bool value)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>af04debb78347537526d142704bb1e6ca</anchor>
      <arglist>(size_t index, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ada96c2ec27e3c8011a32d312ea23e787</anchor>
      <arglist>(const String &amp;name, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a9988818fbba355a8f2c1da9ef5561d50</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetRows</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a9c14661324890477a213f54d35d910c0</anchor>
      <arglist>(std::list&lt; std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt;&gt; &amp;rows)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a7a8bdc2a7b1cf242bd97074901f2d521</anchor>
      <arglist>(size_t index, String &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a54f811f88368df9ec66bb518d633cc00</anchor>
      <arglist>(const String &amp;name, String &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a35dcf449b122ecc75747e005273251d1</anchor>
      <arglist>(size_t index, std::vector&lt; char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a6ed6ec0075196cd295c748862d9a4846</anchor>
      <arglist>(const String &amp;name, std::vector&lt; char &gt; &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a7d9d8eac48e9c2b739c440a047b7c169</anchor>
      <arglist>(size_t index, libobjgen::UUID &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ac56c3726f80cb26877d7a0af47653fc4</anchor>
      <arglist>(const String &amp;name, libobjgen::UUID &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a6a9700fea32e2156f3bf16b9f200755a</anchor>
      <arglist>(size_t index, int32_t &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a1d6de517b8b4321839c5fb766dbdb91a</anchor>
      <arglist>(const String &amp;name, int32_t &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a758c34d4679c67ec649b4350ba98d363</anchor>
      <arglist>(size_t index, int64_t &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>aae68ba04442ef627e44ce5b4080ec037</anchor>
      <arglist>(const String &amp;name, int64_t &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a5fbd6ffc7aeedb39c35342843e4f55be</anchor>
      <arglist>(size_t index, float &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a3d93f00fdfef0261d3ea272f92ffd8a6</anchor>
      <arglist>(const String &amp;name, float &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a257392152a57d662c250a74518a845eb</anchor>
      <arglist>(size_t index, double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ae661f3187197fe8144b22a9bf000bef5</anchor>
      <arglist>(const String &amp;name, double &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a73d5b3e58afc33cf4b5c4f998a4e4496</anchor>
      <arglist>(size_t index, bool &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a7eb2114cb169dc0a6d1c1488277bf149</anchor>
      <arglist>(const String &amp;name, bool &amp;value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>abd4b01db1f49998de125489b82e7f5d2</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Next</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>ad186b58630aa1a2ae9c5f804d25af081</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>a708b44b99d8416380a0c7cd149033d24</anchor>
      <arglist>(const String &amp;query)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64_t</type>
      <name>mAffectedRowCount</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryImpl.html</anchorfile>
      <anchor>af4ef27900130f35cde49063f7b0a79a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseQueryMariaDB</name>
    <filename>classlibcomp_1_1DatabaseQueryMariaDB.html</filename>
    <base>libcomp::DatabaseQueryImpl</base>
    <member kind="function">
      <type></type>
      <name>DatabaseQueryMariaDB</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ae7e53c6d48793fb87df475e8f0a5b85b</anchor>
      <arglist>(MYSQL *pDatabase)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseQueryMariaDB</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a9ad7a52ea6ad2283654ca4e7ff3a5686</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a3de8e8b192998f084188bfb4d8a371be</anchor>
      <arglist>(size_t index, const String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aa7d9601c7c11324a967f01fa8cc41e64</anchor>
      <arglist>(const String &amp;name, const String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a852d274d72ff50a3f4d078ad4aa5b094</anchor>
      <arglist>(size_t index, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aed1c9545d66f5b1e36e7aa8751f962c6</anchor>
      <arglist>(const String &amp;name, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a1ed3346884b7d8aad3626f73e846e977</anchor>
      <arglist>(size_t index, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a52b5d5fccdf0f4e1eb31da8538878f6c</anchor>
      <arglist>(const String &amp;name, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a4e5e83c41d8ce67373c3c6696328e792</anchor>
      <arglist>(size_t index, int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a5ca9a280df65ae23c3ed7d05de498195</anchor>
      <arglist>(const String &amp;name, int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a1a04d0206865c3ddaa11e2386eb59668</anchor>
      <arglist>(size_t index, int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a42e2ea5268cc5e1e84fff2c1108bcb2a</anchor>
      <arglist>(const String &amp;name, int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ab623d2d74fd894f3d6d20d819a639574</anchor>
      <arglist>(size_t index, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ac6c1b5aa5471b97df080df8b12e96bf1</anchor>
      <arglist>(const String &amp;name, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ad0e0a804ad10c34c43d06c343f20e6bd</anchor>
      <arglist>(size_t index, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a7c440be7864c36523bc9c27a9ac7e326</anchor>
      <arglist>(const String &amp;name, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a677163131351a8316507eeb0d9699a83</anchor>
      <arglist>(size_t index, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a8cd602d868be3dc9be342ab857bb2aac</anchor>
      <arglist>(const String &amp;name, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aa697efc28bc737cd0b756217f9e114f2</anchor>
      <arglist>(size_t index, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a9b0b180dd793738900c4ea870711ae1e</anchor>
      <arglist>(const String &amp;name, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ae7a96d1ddbc04ea429b626dd0ed360a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetRows</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a78a71657e0818d4c5df6f650481b13ec</anchor>
      <arglist>(std::list&lt; std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt;&gt; &amp;rows)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a95efa700c0462f5366c77cafa1631b86</anchor>
      <arglist>(size_t index, String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a2f85201dabbb986d306dc7530e032dc1</anchor>
      <arglist>(const String &amp;name, String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a5daea654bce2c3cad1c7102b89c73f54</anchor>
      <arglist>(size_t index, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aee82e6b96de0b27db86043cffaf56c19</anchor>
      <arglist>(const String &amp;name, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a9f3b4c4551b82a6edba64af3064580ee</anchor>
      <arglist>(size_t index, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a437fbe187216d237fd038734be9dd684</anchor>
      <arglist>(const String &amp;name, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a0747c0ec84d4c022f437d9a4a6dfc7f9</anchor>
      <arglist>(size_t index, int32_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a13a193a2f4ea44f6fa12da50c5621ca9</anchor>
      <arglist>(const String &amp;name, int32_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a084c12a31636f76986f8e13a22d70a2a</anchor>
      <arglist>(size_t index, int64_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>afb1a2a4e3e2497ea210f5316befe2e73</anchor>
      <arglist>(const String &amp;name, int64_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>afb0699e69fafdbcb74594808f8a237dd</anchor>
      <arglist>(size_t index, float &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>abc658c4831289932cbfff3a7057fbfb5</anchor>
      <arglist>(const String &amp;name, float &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aa07d353c9b81ff6ce169a55c84f8fb96</anchor>
      <arglist>(size_t index, double &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a0eaba7958a1a7d5cbf0ed68688b26f2e</anchor>
      <arglist>(const String &amp;name, double &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ace803c033a5ff624e30ef6617afe3ab5</anchor>
      <arglist>(size_t index, bool &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a619227918fc88fb68176b01b134ed9f8</anchor>
      <arglist>(const String &amp;name, bool &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a4bc53dddb4926f62426413c9a3703921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Next</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a7bb7d8321d93ce0c9ab30bff8c0937c4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ac8812d4050390eeb8260e872dcaa1774</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetNamedBindingIndex</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a8f1ea7617ab31b3823be21d16e3e7c70</anchor>
      <arglist>(const String &amp;name)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetResultColumnIndex</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ad880683356e6a58a68e0e48608d06dd1</anchor>
      <arglist>(const String &amp;name, size_t &amp;index) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>MYSQL_BIND *</type>
      <name>PrepareBinding</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a21056ed8b260468beff4762ea908a33a</anchor>
      <arglist>(size_t index, int type)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MYSQL_BIND &gt;</type>
      <name>mBindings</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aea4d863ca8ece5af9808217e87ea5505</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int64_t &gt;</type>
      <name>mBufferBigInt</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a66a5843a9459a6951fa957d8875c03d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::vector&lt; char &gt; &gt;</type>
      <name>mBufferBlob</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a5f57b81057558fe543c1f4888547b5bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; bool &gt;</type>
      <name>mBufferBool</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>af0188eb1134131c7e0d68fe31a21631c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; double &gt;</type>
      <name>mBufferDouble</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>aa6e4cb62bd65f7a6b662ee27f0de9ecd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; float &gt;</type>
      <name>mBufferFloat</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ac41c6a18e0e8ab4eab5656503217fb1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mBufferInt</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a80d831c700e2ef830a201239c24e4aea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; unsigned long &gt;</type>
      <name>mBufferLengths</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a41d43e853c1febc83865b26cbc173229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; char &gt;</type>
      <name>mBufferNulls</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a10591acd069b1d2ec67900970dd81470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MYSQL *</type>
      <name>mDatabase</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a70e2f6a6ea85be8017908609d4a255b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>mParamNames</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a6184ff013aedc1beb73e8586c7c43320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; MYSQL_BIND &gt;</type>
      <name>mResultBindings</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a1c398bd4fa2ee4bd15cb354dfb52193e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>mResultColumnNames</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a57247978ea56a8237242d5d8e9d5ef7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mResultColumnTypes</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a53d2f75e3eaf6031fb686bbc0558d825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MYSQL_STMT *</type>
      <name>mStatement</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>ae889cdcf45743ab23b3361d5a21cf90e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mStatus</name>
      <anchorfile>classlibcomp_1_1DatabaseQueryMariaDB.html</anchorfile>
      <anchor>a66798bebd7e622679227903478c9844d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseQuerySQLite3</name>
    <filename>classlibcomp_1_1DatabaseQuerySQLite3.html</filename>
    <base>libcomp::DatabaseQueryImpl</base>
    <member kind="function">
      <type></type>
      <name>DatabaseQuerySQLite3</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a9eb566d0341a893ec65d7243f89dc661</anchor>
      <arglist>(sqlite3 *pDatabase, uint8_t maxRetryCount=3, uint16_t retryDelay=500)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseQuerySQLite3</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a9e911067572c4068fb2df88a34072e05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a9223b74e800a454bdb9ff33c5ac605f3</anchor>
      <arglist>(size_t index, const String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ae0bfd50dff4da4b3d5f938d04109c492</anchor>
      <arglist>(const String &amp;name, const String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a2d823560b39a00bd23c4381aa366565a</anchor>
      <arglist>(size_t index, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a2fedf8b78b177b1f4a58d93e6fe76b16</anchor>
      <arglist>(const String &amp;name, const std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ac360791c745eda117ac8316b7e85dd4f</anchor>
      <arglist>(size_t index, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a2884f867313eb3b0af07985226312a59</anchor>
      <arglist>(const String &amp;name, const libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a33c27df4b5b5dc7e1f7aa7ff785be992</anchor>
      <arglist>(size_t index, int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a20363f06208f08d9faed7bb7dce49fe6</anchor>
      <arglist>(const String &amp;name, int32_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a15c227c7a2e5ebb7395d762a2d5bf050</anchor>
      <arglist>(size_t index, int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>abb677434ea2c2239c517077ad703977e</anchor>
      <arglist>(const String &amp;name, int64_t value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>af0683294aec80b33f2497f2cac901fdc</anchor>
      <arglist>(size_t index, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a58514ff08f452ebad2c644a0d6d375e9</anchor>
      <arglist>(const String &amp;name, float value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ac749bb2f7c8164a41aa6d74d6b8e311f</anchor>
      <arglist>(size_t index, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a08f7cf8b8e1846cb630d535f9b8043d8</anchor>
      <arglist>(const String &amp;name, double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a21a15c3d2a6afe5d478aa0699fb4336b</anchor>
      <arglist>(size_t index, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>abd06c483d5cd242dde705c83795f1c81</anchor>
      <arglist>(const String &amp;name, bool value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>abaa2857891981c031ea2235192f26a86</anchor>
      <arglist>(size_t index, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a4ea97b14e50e253cd82b91d9fe00a3df</anchor>
      <arglist>(const String &amp;name, const std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Execute</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>abe0a89d18f63fa5dfb3bbd8186a03b61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetRows</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a5afe717c03f69ae470c9efb49e33ba78</anchor>
      <arglist>(std::list&lt; std::unordered_map&lt; std::string, std::vector&lt; char &gt;&gt;&gt; &amp;rows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetStatus</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a5782e2de9a1bcefbb007720989381829</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>af75dbc9302484f849cd2d8a0b1facb0d</anchor>
      <arglist>(size_t index, String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>aa06b4ca7e40c5af0477fbc01c6e1972b</anchor>
      <arglist>(const String &amp;name, String &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>aa77dea9217ce00cda8498365ace8b1fe</anchor>
      <arglist>(size_t index, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a02e11bd0b7c5e7c45e8a4d023f81b6b9</anchor>
      <arglist>(const String &amp;name, std::vector&lt; char &gt; &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a2e45abcaa50f1a369ee579638f324cf0</anchor>
      <arglist>(size_t index, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a795d0720c49e16574f5ba0db29183a6f</anchor>
      <arglist>(const String &amp;name, libobjgen::UUID &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ae31841b6acc757fd4ff4c548adf045b6</anchor>
      <arglist>(size_t index, int32_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a46f77e9a214c84f8abb49468410c4263</anchor>
      <arglist>(const String &amp;name, int32_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>af7c980fecc707fce9b20373e20f97277</anchor>
      <arglist>(size_t index, int64_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a27b7c83cb2692a5baecd7b77dd4937e3</anchor>
      <arglist>(const String &amp;name, int64_t &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a92eab1babfe4de23e42e153ea9301257</anchor>
      <arglist>(size_t index, float &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a038081b0dff908f1ba1e70c4628ec0ee</anchor>
      <arglist>(const String &amp;name, float &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a2a67b1243043139befc3e1d834fd7d1c</anchor>
      <arglist>(size_t index, double &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a78cdcbb3ffac5f3a442b659a8f0372a9</anchor>
      <arglist>(const String &amp;name, double &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a942250e0f96e8391080821572c83885f</anchor>
      <arglist>(size_t index, bool &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>GetValue</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a073c24db87f74b9498541c19ab14fa55</anchor>
      <arglist>(const String &amp;name, bool &amp;value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a1fb194927287c8a392799a5631113f79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Next</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ad066b7d8a798ac9d6d21a5f88d947c9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>afe042c36f1e04c536e988ddfa29b943b</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>GetNamedBinding</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a3f14a63dd80d53413ee3469d4e040349</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetNamedBindingIndex</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>acfafa5f5705b96c18689928b7b02bc8d</anchor>
      <arglist>(const String &amp;name) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetResultColumnIndex</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a6c8bddbade7201da623f4659ccd8b1a0</anchor>
      <arglist>(const String &amp;name, size_t &amp;index) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sqlite3 *</type>
      <name>mDatabase</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>af0f0c684c3865986e8570a9a09297565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDidJustExecute</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a8d997b6900b5937d5436d3484a4a824a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint8_t</type>
      <name>mMaxRetryCount</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>aa21372ccb1dca4eaede12d75ab66020b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>mResultColumnNames</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a8917b12cb10a7a223085e1362ff155a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>mResultColumnTypes</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>ac1872d400793191a2c9c59e73f4ee7e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mRetryDelay</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>aac79d5e8ed835d1695dba9aab20a06ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sqlite3_stmt *</type>
      <name>mStatement</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a4735b570c1297d58890feff5ec4e1967</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mStatus</name>
      <anchorfile>classlibcomp_1_1DatabaseQuerySQLite3.html</anchorfile>
      <anchor>a056ddb0c965db5278bedd64581107b94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DatabaseSQLite3</name>
    <filename>classlibcomp_1_1DatabaseSQLite3.html</filename>
    <base>libcomp::Database</base>
    <member kind="function">
      <type></type>
      <name>DatabaseSQLite3</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a8d9736c25788f3c5ef5f3a5916eaae42</anchor>
      <arglist>(const std::shared_ptr&lt; objects::DatabaseConfigSQLite3 &gt; &amp;config)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DatabaseSQLite3</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a61ffc9c1e09810562b595c0aa0f470ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a447300cd15983d0457bac0ae55a35546</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>DeleteObjects</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a1c357033746812028772e21b13c3a73f</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; PersistentObject &gt;&gt; &amp;objs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Exists</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a6bb20725dc0245014c5dfe18d5973ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>InsertSingleObject</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a0a8334b858d6227b7140fa7447c77b32</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsOpen</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>ab35db7c7e96637b94d3132237aa5aba9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>aae5d3fd7094ed34d45151423dfe8fb6a</anchor>
      <arglist>(size_t typeHash, DatabaseBind *pValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Open</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a1db4d065956dc1f95b81d7ea29f585ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual DatabaseQuery</type>
      <name>Prepare</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>afb29f1d80c1b48e27a49572190408f52</anchor>
      <arglist>(const String &amp;query)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Setup</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>ae85a63597720bb2d034b1ba98a552e87</anchor>
      <arglist>(bool rebuild=false, const std::shared_ptr&lt; BaseServer &gt; &amp;server={}, DataStore *pDataStore=nullptr, const std::string &amp;migrationDirectory=std::string())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TableExists</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>aa00577de4017e0a0bafd6a56389e8f31</anchor>
      <arglist>(const libcomp::String &amp;table)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>TableHasRows</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a888db19baef3e677f110be25e79097e8</anchor>
      <arglist>(const String &amp;table)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateSingleObject</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a5d09ea3c87472932b0cb836b48f90a79</anchor>
      <arglist>(std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Use</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>aa00f95bea19d5444f89248224a7edcb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyAndSetupSchema</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>adf2e0ae6952ebdb6069beda66400144e</anchor>
      <arglist>(bool recreateTables=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a9756e04eb6adb4f2c687d3c242609671</anchor>
      <arglist>(const std::shared_ptr&lt; DBOperationalChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a3452788f352196523fc46f7c7963ae99</anchor>
      <arglist>(const std::shared_ptr&lt; DBStandardChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>String</type>
      <name>GetFilepath</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a03745387ed65a15b2e560477aa5c72ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>String</type>
      <name>GetVariableType</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>a0cc9a2f616e7a0fab18f7a017383893f</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; var)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ProcessExplicitUpdate</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>ad22414780a657e57f92e92c58b3169f0</anchor>
      <arglist>(const std::shared_ptr&lt; DBExplicitUpdate &gt; &amp;update)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>sqlite3 *</type>
      <name>mDatabase</name>
      <anchorfile>classlibcomp_1_1DatabaseSQLite3.html</anchorfile>
      <anchor>aa41df82aeb46b19ca0e8ff9feb369f33</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DataFile</name>
    <filename>classlibcomp_1_1DataFile.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Whence_t</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>aa6ff1ed93162af325778c51ead0e5ba9</anchor>
      <arglist></arglist>
      <enumvalue file="classlibcomp_1_1DataFile.html" anchor="aa6ff1ed93162af325778c51ead0e5ba9a19aad9f2fe3ce0023298ab83f7e75775">BEGIN</enumvalue>
      <enumvalue file="classlibcomp_1_1DataFile.html" anchor="aa6ff1ed93162af325778c51ead0e5ba9aa2770969c827f0f2910f6179418462df">CURRENT</enumvalue>
      <enumvalue file="classlibcomp_1_1DataFile.html" anchor="aa6ff1ed93162af325778c51ead0e5ba9ab1a326c06d88bf042f73d70f50197905">END</enumvalue>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AtEOF</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>aa3aac75af8d199b8a8b6343e4468d655</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a0bece92c3643cdf94fdf9dd6fa0a9801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Flush</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a5991545b27897e773bbebc75315e019a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetPath</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>ad1c834706936dcfae12370bc5b30be3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetPosition</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a30881aa95bc3cef0fd4bc303be7a850b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetSize</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a225fa5957b930432c3ca3d660e5a5b13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsOpen</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a86d11df547ea879cc9aecedd94f37a4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Open</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a18f7d0d0166e0d540d7cb6bbffafd1e9</anchor>
      <arglist>(DataStore::FileMode_t mode=DataStore::FileMode_t::READ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Read</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a2f2adfe5e1543332839cf819a5b7480e</anchor>
      <arglist>(void *pBuffer, uint32_t bufferSize)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>Read</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a5dfe6dc611c8c61737a05387a86fd71f</anchor>
      <arglist>(uint32_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPath</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>add67b82ef8a2a1f10a06bb943b2dacde</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetPosition</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a625b0428a87ae604cc2b2727a947bf24</anchor>
      <arglist>(int64_t pos, Whence_t whence=Whence_t::BEGIN)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Write</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>ab81c726026b07dc1f2a9a2dba1bbd8a3</anchor>
      <arglist>(const void *pBuffer, uint32_t bufferSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Write</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a3c077fcd276a3ff3c2c6ea4255885bed</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DataFile</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>afdd425f4541d0b9060392ff05261ce21</anchor>
      <arglist>(const libcomp::String &amp;path, DataStore::FileMode_t mode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~DataFile</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a8717582401bcbb28a57af9bcf0788fdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHYSFS_File *</type>
      <name>mFile</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>ab259fb8ca041a284541c349d62f0a7d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::String</type>
      <name>mPath</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a728920ac63478b1dd5d6a9d3d81bea8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>DataStore</name>
      <anchorfile>classlibcomp_1_1DataFile.html</anchorfile>
      <anchor>a015ee5810ec0b4b9bb95bc269a97b4f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DataStore</name>
    <filename>classlibcomp_1_1DataStore.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>FileMode_t</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a62078745cab9a0d7706e9b570689d1e0</anchor>
      <arglist></arglist>
      <enumvalue file="classlibcomp_1_1DataStore.html" anchor="a62078745cab9a0d7706e9b570689d1e0a3466fab4975481651940ed328aa990e4">READ</enumvalue>
      <enumvalue file="classlibcomp_1_1DataStore.html" anchor="a62078745cab9a0d7706e9b570689d1e0ad4b9e47f65b6e79b010582f15785867e">WRITE</enumvalue>
      <enumvalue file="classlibcomp_1_1DataStore.html" anchor="a62078745cab9a0d7706e9b570689d1e0a375ffb668aa90f1c7fcae55e9734a752">APPEND</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DataStore</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a49195f20b99417f54dd0add5cc9c7fe1</anchor>
      <arglist>(const char *szProgram)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DataStore</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>ad6ae5ab8bc74da0033abd61d119f2728</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSearchPath</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a9b074973b11d9a4b617ed25eb46aff36</anchor>
      <arglist>(const libcomp::String &amp;path, bool append=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddSearchPaths</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a906523f88b3d02e8e8b22ed1f964430f</anchor>
      <arglist>(const std::list&lt; libcomp::String &gt; &amp;paths)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateDirectory</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a3136a5923287ee593676db6027f44ed3</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>DecryptFile</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a0cc3dfadc0db9eed3b58bad93c7b92cc</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Delete</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a3791f7360b345ef4cc3d02d8fffe8350</anchor>
      <arglist>(const libcomp::String &amp;path, bool recursive=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncryptFile</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a4892c42a5de9402a102b01f2a3b8a081</anchor>
      <arglist>(const libcomp::String &amp;path, const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Exists</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a6341ad0985e548b9eba6c5dcd4928fcb</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>FileSize</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a87b17b1382168ea39fbd11a1f3346716</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetError</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a031c472927e6d60eca1cbbc2af9759d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetHash</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>afd6a32e5091e94fb3cbe9106d02da93d</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetListing</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a0846aa43c880a8562b539b02fc613f6a</anchor>
      <arglist>(const libcomp::String &amp;path, std::list&lt; libcomp::String &gt; &amp;files, std::list&lt; libcomp::String &gt; &amp;dirs, std::list&lt; libcomp::String &gt; &amp;symLinks, bool recursive=false, bool fullPath=false)</arglist>
    </member>
    <member kind="function">
      <type>DataFile *</type>
      <name>Open</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>ac61ee97dd70fe4c5927ccd3dc3b7db94</anchor>
      <arglist>(const libcomp::String &amp;path, FileMode_t mode=FileMode_t::READ)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PrintListing</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>a734a094ad449bb690afea255cfd28040</anchor>
      <arglist>(const libcomp::String &amp;path, bool recursive=false, bool fullPath=false)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ReadFile</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>ae22b7e2e8ab83f927d04d370f48d3630</anchor>
      <arglist>(const libcomp::String &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>WriteFile</name>
      <anchorfile>classlibcomp_1_1DataStore.html</anchorfile>
      <anchor>af8c92fca5d6720f882a83f1d57d4fe5b</anchor>
      <arglist>(const libcomp::String &amp;path, const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DataSyncManager</name>
    <filename>classlibcomp_1_1DataSyncManager.html</filename>
    <class kind="class">libcomp::DataSyncManager::ObjectConfig</class>
    <member kind="function">
      <type></type>
      <name>DataSyncManager</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>af43bc5a6eed4271b0a0e780c4ba5d53b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DataSyncManager</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ac264928a0b1cba6d0596b3ce9ff8b8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Object &gt;</type>
      <name>New</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ab99b48839a5862b7ba72e7d7065458f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterConnection</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ad8a17dda7a851c9c2221ac3e215fc01c</anchor>
      <arglist>(const std::shared_ptr&lt; InternalConnection &gt; &amp;connection, std::set&lt; std::string &gt; types)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RemoveConnection</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a37f97f78e0948c17aa5adb05d84a8b12</anchor>
      <arglist>(const std::shared_ptr&lt; InternalConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>RemoveRecord</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ac1142242ad747f1627737cbc7c7e690c</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Object &gt; &amp;record, const libcomp::String &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SyncComplete</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ab43c814df2cac2fed883547777c78563</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SyncIncoming</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>ab7246d10f1369580a1b82a3109bc4bde</anchor>
      <arglist>(libcomp::ReadOnlyPacket &amp;p, const libcomp::String &amp;source=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SyncOutgoing</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a12a62581bedb6a8dee61dc372724c353</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SyncRecordRemoval</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a5e9b04ae7ab49ad1326bd3075df58289</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Object &gt; &amp;record, const libcomp::String &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SyncRecordUpdate</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a42773e95bb4e0a106db3ac5189d3248c</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Object &gt; &amp;record, const libcomp::String &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>Update</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a3b585d01d696928804b68c2534861911</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpdateRecord</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>abb2018dca67ddac0919548287f158bec</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Object &gt; &amp;record, const libcomp::String &amp;type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>QueueOutgoing</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>aa4ddf890bae87976e23f969abcc2e145</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; InternalConnection &gt; &amp;connection, const std::set&lt; std::shared_ptr&lt; libcomp::Object &gt;&gt; &amp;updates, const std::set&lt; std::shared_ptr&lt; libcomp::Object &gt;&gt; &amp;removes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>WriteOutgoingRecord</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a419f7cc03048c39590decee598af90c6</anchor>
      <arglist>(libcomp::Packet &amp;p, bool isPersistent, const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;record)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a964137fce868103cc57bef7fe75151a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ObjectConfig &gt; &gt;</type>
      <name>mRegisteredTypes</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a633daeeb0faf31f8ad6c8250de37781f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int8_t</type>
      <name>SYNC_FAILED</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a5e66dfb256049e24516c9928520bb8d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int8_t</type>
      <name>SYNC_HANDLED</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a71b54e55b684cf16e6d862cda1a7e27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int8_t</type>
      <name>SYNC_UPDATED</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a1c43deeb6048ef7f636af1eda337c082</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WriteOutgoingRecords</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a76292b0b1363a9f925e30ca7cf6765b5</anchor>
      <arglist>(libcomp::Packet &amp;p, bool isPersistent, const std::set&lt; std::shared_ptr&lt; libcomp::Object &gt;&gt; &amp;records)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::shared_ptr&lt; InternalConnection &gt;, std::set&lt; std::string &gt; &gt;</type>
      <name>mConnections</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a6d1bbab58525d496cfb69847fdd8565c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::set&lt; std::shared_ptr&lt; libcomp::Object &gt; &gt; &gt;</type>
      <name>mOutboundRemoves</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a7a32a782d2326dc711b5693ffb6a16f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::set&lt; std::shared_ptr&lt; libcomp::Object &gt; &gt; &gt;</type>
      <name>mOutboundUpdates</name>
      <anchorfile>classlibcomp_1_1DataSyncManager.html</anchorfile>
      <anchor>a50630329190454054c840b96494fac2c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DataSyncManager::ObjectConfig</name>
    <filename>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectConfig</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>ac27b324a65fd5823987a31879b75e1fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectConfig</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>a051ef9a4950841bcde0688ebb68d491f</anchor>
      <arglist>(const libcomp::String &amp;name, bool serverOwned, std::shared_ptr&lt; Database &gt; database=nullptr)</arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; std::shared_ptr&lt; libcomp::Object &gt; DataSyncManager &amp;)&gt;</type>
      <name>BuildHandler</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>af30aed17dd8aeaf08c0e5b8f425e234c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Database &gt;</type>
      <name>DB</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>ae6b7e91d7d35f2bcf28b54784755a165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>DynamicHandler</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>a666fbdd1874a46e937a841619c287fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>Name</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>a2bc161ddb1e7a0fb18936e655597e95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ServerOwned</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>addeeb72160c7c1561bb28fe0617a3031</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; void(DataSyncManager &amp;, const libcomp::String &amp;, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;, const libcomp::String &amp;)&gt;</type>
      <name>SyncCompleteHandler</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>ac6a64253fc19c67d61949d663a33a042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::function&lt; int8_t(DataSyncManager &amp;, const libcomp::String &amp;, const std::shared_ptr&lt; libcomp::Object &gt; &amp;, bool, const libcomp::String &amp;)&gt;</type>
      <name>UpdateHandler</name>
      <anchorfile>classlibcomp_1_1DataSyncManager_1_1ObjectConfig.html</anchorfile>
      <anchor>a1e1a348e4cf43cc9e8c7fe19acd57487</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DayCare</name>
    <filename>classlibcomp_1_1DayCare.html</filename>
    <member kind="function">
      <type></type>
      <name>DayCare</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>aaa1bae2235432952e82c6d8e86e42d4f</anchor>
      <arglist>(bool printDetails=true, std::function&lt; void()&gt; onDetain=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DayCare</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ad79a328f19a539a0dab707d0eafba046</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CloseDoors</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ac4ceb21375956f569980bdc9c1b8226a</anchor>
      <arglist>(bool kill=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DetainMonsters</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a0c478fb937c526911d8845ecc560c83c</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HaveChildren</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a5c6fac0317fa26f5dfa7b80d69b54e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRunning</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>acd88ebd817351b79b83369f09bd38614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadProcessXml</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a2b637ba1f0fdb7580b203480cf8d1ce2</anchor>
      <arglist>(const std::string &amp;xml)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NotifyExit</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ab898a0bf4fbcad300cc349243482be88</anchor>
      <arglist>(pid_t pid, int status)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; Child &gt; &gt;</type>
      <name>OrderChildren</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a8927081a51e6c0b170c72bedcfc61595</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; Child &gt;&gt; &amp;children)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a178606175e70b6665f5686ab32c5d49b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WaitForExit</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>aaf035c9478a1c401b2158412caa00d55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadProcessDoc</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a76274925a7e5cac620fcc1f022712cad</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; Child &gt; &gt;</type>
      <name>mChildren</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>a93b38d10f1c86362cda3144a17042570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mChildrenShackles</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ad1b16baca4debb169ecd5e900de510a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mPrintDetails</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>af6d42fc1521f3123e0bfa07c3c174b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mRunning</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>af5984075638e2bb6ca4c46669b168d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SpawnThread *</type>
      <name>mSpawnThread</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ac6754c937839eb7af1c5b395296a77ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WatchThread *</type>
      <name>mWatchThread</name>
      <anchorfile>classlibcomp_1_1DayCare.html</anchorfile>
      <anchor>ab8e8dcbc9cf6074d71ad7cb9bdde7594</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DBExplicitUpdate</name>
    <filename>classlibcomp_1_1DBExplicitUpdate.html</filename>
    <base>libcomp::DBOperationalChange</base>
    <member kind="enumeration">
      <type></type>
      <name>DBOperationType</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>aaee1058688546eaee509ed0a4de50cf3</anchor>
      <arglist></arglist>
      <enumvalue file="classlibcomp_1_1DBOperationalChange.html" anchor="aaee1058688546eaee509ed0a4de50cf3ab67a12181237036ef5de5b91e2c2b385">DBOP_INSERT</enumvalue>
      <enumvalue file="classlibcomp_1_1DBOperationalChange.html" anchor="aaee1058688546eaee509ed0a4de50cf3ae2ed19bdee57b0763c5ae933f93be7a1">DBOP_UPDATE</enumvalue>
      <enumvalue file="classlibcomp_1_1DBOperationalChange.html" anchor="aaee1058688546eaee509ed0a4de50cf3a2c134bfadaaf6dd2b3b25e090cd1fbb8">DBOP_DELETE</enumvalue>
      <enumvalue file="classlibcomp_1_1DBOperationalChange.html" anchor="aaee1058688546eaee509ed0a4de50cf3ad1b93a1006bf2547d9b250125e04d418">DBOP_EXPLICIT</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>DBExplicitUpdate</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a83a4be25a2c81d6f5c135ae0774713cd</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;record)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DBExplicitUpdate</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a52708a4f0f9da255e7c16c054c83df7a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Add</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a05e6a694184423bd0d0dd9521e1b5007</anchor>
      <arglist>(const libcomp::String &amp;column, T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Add</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a045cc32bf7ee49400f04ec2a67b0c01a</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Add</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a0f53d68e4e5c1432839b6cbd2e5443ec</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Add</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aee75a3aa70ece513279d551d8aaf8090</anchor>
      <arglist>(const libcomp::String &amp;column, float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Add</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aa58a273f6abb2e71468ccd53d6a95bf8</anchor>
      <arglist>(const libcomp::String &amp;column, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a035ce9524c7d2fc54279291728b058a2</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value, int32_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a406d2ab7a11040f736df846e6e5666e9</anchor>
      <arglist>(const libcomp::String &amp;column, T value, T expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a9d17f6077ecea26e9161f288a272cd26</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value, int64_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a7b0da26fbab433902ea5c30d299e0520</anchor>
      <arglist>(const libcomp::String &amp;column, float value, float expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a8c9af188784c076927a4fb65332e791b</anchor>
      <arglist>(const libcomp::String &amp;column, double value, double expected)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; std::string, DatabaseBind * &gt;</type>
      <name>GetChanges</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a41c2c05f3f64d1a5a51beda71695ad98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; std::string, DatabaseBind * &gt;</type>
      <name>GetExpectedValues</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a5a1202e58bbb69f43a8d717d0cedf88d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>GetRecord</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>a6ffcfb060e77e9bbe6c19e1b60e95f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DBOperationType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>af37bab5343e7a93f0dfd52f542b1b1b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ad79de9cfca4646c15ab6bde86de10c1f</anchor>
      <arglist>(const libcomp::String &amp;column, T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a0bc5208888f2bd2fb8dd1ebd1856a58f</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a948722816bea49ffd01ee4024a8a613c</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a2949bf6d4071c61060050f535325aaca</anchor>
      <arglist>(const libcomp::String &amp;column, float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aad0eebc1eb3081d314dd3b4b23af4412</anchor>
      <arglist>(const libcomp::String &amp;column, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Set</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a22a00223a507ddefd1418a07fed7150b</anchor>
      <arglist>(const libcomp::String &amp;column, bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aa5038384f3ecc566d137ad7cd9a180c2</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value, int32_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a26d129eecb45cc8be5e4beefaa5ee31a</anchor>
      <arglist>(const libcomp::String &amp;column, T value, T expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a8fecedd30c473bba2077cd7e7672ccfd</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value, int64_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a160a411bad101b07c36c3b33139011a6</anchor>
      <arglist>(const libcomp::String &amp;column, float value, float expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a2c611c53c84770fc33843ac35b757504</anchor>
      <arglist>(const libcomp::String &amp;column, double value, double expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a0acc1539139af367de853604d7933706</anchor>
      <arglist>(const libcomp::String &amp;column, bool value, bool expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Subtract</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a9b7adea48c0b2f4c14d77259f1c6156f</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Subtract</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a39ac66eedc5e3b1c6debec8ea9b877ed</anchor>
      <arglist>(const libcomp::String &amp;column, T value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Subtract</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a2b190a5960d01b61c6ab5fc1b707697a</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Subtract</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ae1201d8ffd5375bcfce0bb9a91d4fbb5</anchor>
      <arglist>(const libcomp::String &amp;column, float value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Subtract</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ade856a05856f710504eac121c8563164</anchor>
      <arglist>(const libcomp::String &amp;column, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SubtractFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a58bc6053bbeacc6070242718b399a212</anchor>
      <arglist>(const libcomp::String &amp;column, int32_t value, int32_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SubtractFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a9d4e68a5b2d53c8c88721d8230157aa5</anchor>
      <arglist>(const libcomp::String &amp;column, T value, T expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SubtractFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a334977beb2f8a0eaaa18dd1f3a47a9e0</anchor>
      <arglist>(const libcomp::String &amp;column, int64_t value, int64_t expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SubtractFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ac70613c95edef095628f490755fb75e0</anchor>
      <arglist>(const libcomp::String &amp;column, float value, float expected)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SubtractFrom</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a16acbe5e0d8dd083c568ee77e5444047</anchor>
      <arglist>(const libcomp::String &amp;column, double value, double expected)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>mRecord</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>ac0456984889ba213d5fee97d3c49edc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DBOperationType</type>
      <name>mType</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>a41bbf02be07b54a923b8f9dd8710bd58</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aefb04cf67ab966bc9a19bbc0a2483b1e</anchor>
      <arglist>(const libcomp::String &amp;column, DatabaseBind *binding, DatabaseBind *expected)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DatabaseBind *</type>
      <name>Verify</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ad7d3d4c0fe2dd8cce4723ecf46e012ed</anchor>
      <arglist>(const libcomp::String &amp;column, libobjgen::MetaVariable::MetaVariableType_t validType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>DatabaseBind *</type>
      <name>Verify</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aec19051fe17896528bb79a9d140977f7</anchor>
      <arglist>(const libcomp::String &amp;column, const std::set&lt; libobjgen::MetaVariable::MetaVariableType_t &gt; &amp;validTypes)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, DatabaseBind * &gt;</type>
      <name>mChanges</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>ae8850f743a384e433c69c97d84a1ef6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, DatabaseBind * &gt;</type>
      <name>mExpectedValues</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a356af1229592d34f9ffd760f8260ad78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>mMetadata</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>aadca44c38adbbd6228b7c9cbaad5048c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, DatabaseBind * &gt;</type>
      <name>mStoredValues</name>
      <anchorfile>classlibcomp_1_1DBExplicitUpdate.html</anchorfile>
      <anchor>a5da4833d130c5aca1d0c8c7a6e731cd5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DBOperationalChange</name>
    <filename>classlibcomp_1_1DBOperationalChange.html</filename>
    <member kind="function">
      <type></type>
      <name>DBOperationalChange</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>a7cb0e4144a9081fb99ca2188513446d6</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;record, DBOperationType type)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DBOperationalChange</name>
      <anchorfile>classlibcomp_1_1DBOperationalChange.html</anchorfile>
      <anchor>a0d7a509e4cc69abff0feb00fdf1eb609</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DBOperationalChangeSet</name>
    <filename>classlibcomp_1_1DBOperationalChangeSet.html</filename>
    <base>libcomp::DatabaseChangeSet</base>
    <member kind="function">
      <type></type>
      <name>DBOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a961e5395df46d038558bc913b94f541f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a284b4932b45feb2cf427611a95daad60</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DBOperationalChangeSet</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a5b42ed50e85f0d2f28b845415b596e4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddOperation</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>aafd596eb6c1dbfe70d37e0b286483eeb</anchor>
      <arglist>(const std::shared_ptr&lt; DBOperationalChange &gt; &amp;op)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Delete</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a8beead45a884e5e91e346d05b9013ffe</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; DBOperationalChange &gt; &gt;</type>
      <name>GetOperations</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a15646fd976c878bf977c8f91ac4a6787</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Insert</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>a94909b1cd0d74fafb30f624c06adc494</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>aa452e84270676bf52f4d1dd85b1030cc</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; DBOperationalChange &gt; &gt;</type>
      <name>mOperations</name>
      <anchorfile>classlibcomp_1_1DBOperationalChangeSet.html</anchorfile>
      <anchor>af46da1e7461916582aab0edaa50265e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DBStandardChangeSet</name>
    <filename>classlibcomp_1_1DBStandardChangeSet.html</filename>
    <base>libcomp::DatabaseChangeSet</base>
    <member kind="function">
      <type></type>
      <name>DBStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>aa88870fc841274fa141cfed50a4dcd2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DBStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a692bee56bc68ab0eb0ea4d8baf3242ca</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DBStandardChangeSet</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a111067dded034f375c9250ed27927029</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Delete</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a7c4a889b743d5c1ee5ec1f6afc83f263</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>GetDeletes</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>ac8743648748263a46ccb59bcf408630a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>GetInserts</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a17ce757c1d2d1adce877295cf44dcd23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>GetUpdates</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a5b223227225911b1364fc12f7092ca3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Insert</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a7a4a6a99aa27d763edbd1289b6b5b57b</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Update</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a59095863bc06e669de9d3534614bf1c1</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>mDeletes</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a07c0d9366d5685aa19c2f8017cccb6be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>mInserts</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>a41777be967f6eef11ac62dc4feac2fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>mUpdates</name>
      <anchorfile>classlibcomp_1_1DBStandardChangeSet.html</anchorfile>
      <anchor>ac4ff6980a74d0cecf5050b34d6f31c68</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DefinitionManager</name>
    <filename>classlibcomp_1_1DefinitionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>DefinitionManager</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5226e4dcfabb91078ccc93eb1e42442c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DefinitionManager</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae3af330e03d1b17be075935405f115d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiAIData &gt;</type>
      <name>GetAIData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5c3882ebb24ff2a0959949ab41976f87</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilLVUpRateData &gt; &gt;</type>
      <name>GetAllDevilLVUpRateData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ab06110e41e8feff1c3e44e832c4ac7f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int16_t, std::shared_ptr&lt; objects::MiEnchantData &gt; &gt;</type>
      <name>GetAllEnchantData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a25fd9fc5acf49ac50a345acec6a6a1f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::EnchantSetData &gt; &gt;</type>
      <name>GetAllEnchantSetData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af9ed94acfababbbbf3002c7528691dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSynthesisData &gt; &gt;</type>
      <name>GetAllSynthesisData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a79360d5aa4df0f570b988cc5ffc3149c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::Tokusei &gt; &gt;</type>
      <name>GetAllTokuseiData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a142a07546a2896a49682d1579ff7d24a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiBlendData &gt;</type>
      <name>GetBlendData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4898daf54a911be79cc8923f50671327</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiBlendExtData &gt;</type>
      <name>GetBlendExtData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5c12ba0e3f5edfae4c491b9fb560697f</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int8_t, std::shared_ptr&lt; objects::MiCHouraiData &gt; &gt;</type>
      <name>GetCHouraiData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a81cc5541177d732ac24cf8353e5e4c56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiCultureItemData &gt;</type>
      <name>GetCultureItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9da65d5f3d3df2ca0a59cebe01f98f4f</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilBookData &gt;</type>
      <name>GetDevilBookData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a70859478f4244a46f29cc4d3889d3aef</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilBookData &gt; &gt;</type>
      <name>GetDevilBookData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9d44317ef3600ab7a8b46ec6e16b2b19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilBoostData &gt;</type>
      <name>GetDevilBoostData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aa62d02789174a99502407a7e6a2022b5</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilBoostExtraData &gt;</type>
      <name>GetDevilBoostExtraData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8757a9e3aabc42d806d81f75f345e417</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilBoostItemData &gt;</type>
      <name>GetDevilBoostItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a471ff5199b4313fbe62daad855e702bd</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; uint16_t &gt;</type>
      <name>GetDevilBoostLotIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2c69b1c52a32291c871b7c22aa140080</anchor>
      <arglist>(int32_t count)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::MiDevilData &gt;</type>
      <name>GetDevilData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0718334258686035aed68e121a538c3b</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilData &gt;</type>
      <name>GetDevilData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a80f64671a59022b458bd2c3a30680dbd</anchor>
      <arglist>(const libcomp::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilEquipmentData &gt;</type>
      <name>GetDevilEquipmentData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a25a48c7c8ec2da103ee7065e93b5135c</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilEquipmentItemData &gt;</type>
      <name>GetDevilEquipmentItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad9ebaeecd5367d44b2f13060d23e0f80</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilFusionData &gt;</type>
      <name>GetDevilFusionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae0e6dbd50b9486eb695377c9c72cf109</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetDevilFusionIDsByDemonID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4a3ef7626000eeccb3e840e8401ca240</anchor>
      <arglist>(uint32_t demonID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDevilLVUpRateData &gt;</type>
      <name>GetDevilLVUpRateData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aa544c3ed2e791c0ba0cfc2c39946c4ba</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; uint32_t &gt;</type>
      <name>GetDisassembledItemIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aed0d9e2acc11f55dea1d2fff14b4f5f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDisassemblyData &gt;</type>
      <name>GetDisassemblyData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>abc59af7e820e585538e01d11ff2b35ae</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDisassemblyData &gt;</type>
      <name>GetDisassemblyDataByItemID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a01ec504baa947c1c529e50473d239fb3</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDisassemblyTriggerData &gt;</type>
      <name>GetDisassemblyTriggerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aaa02ecd94db5869553ca66c88751c62d</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiDynamicMapData &gt;</type>
      <name>GetDynamicMapData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a1bfc3a861a5c869d308896bf88655d1d</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiEnchantData &gt;</type>
      <name>GetEnchantData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>adac98d0554a2785c9b7821a602f04a9e</anchor>
      <arglist>(int16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiEnchantData &gt;</type>
      <name>GetEnchantDataByDemonID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a02fbb2da3e326aa161755a6c8b52d367</anchor>
      <arglist>(uint32_t demonID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiEnchantData &gt;</type>
      <name>GetEnchantDataByItemID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad226d33544b4c1109cf4904757e8cee8</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::EnchantSetData &gt;</type>
      <name>GetEnchantSetData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a405b62cf558083c1f14d760e31ed782a</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::EnchantSetData &gt; &gt;</type>
      <name>GetEnchantSetDataByEffect</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a40e53210c59e107f9b164b689f264a12</anchor>
      <arglist>(int16_t effectID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::EnchantSpecialData &gt;</type>
      <name>GetEnchantSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>add6a5a126ea134b3f358147b5632d165</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::EnchantSpecialData &gt; &gt;</type>
      <name>GetEnchantSpecialDataByInputItem</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a43ab696e1b2a2b83d6b6293851538bbc</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiEquipmentSetData &gt;</type>
      <name>GetEquipmentSetData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9ab145f89bf34c8ce8ff11cd8d0637b7</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiEquipmentSetData &gt; &gt;</type>
      <name>GetEquipmentSetDataByItem</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a611df0464685b6de831261fa5833610c</anchor>
      <arglist>(uint32_t equipmentID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiExchangeData &gt;</type>
      <name>GetExchangeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae9ec9e710e7fd0b7cd74f9bc087f120c</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiExpertData &gt;</type>
      <name>GetExpertClassData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>afe4358dbd1e41788e5e7ac281c04dcf0</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetFunctionIDSkills</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a408f59ce5977e7be3d66b3fd17cd43ea</anchor>
      <arglist>(uint16_t fid) const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::pair&lt; uint8_t, uint32_t &gt; &gt;</type>
      <name>GetFusionRanges</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a19b410f92f770dd71f5e5fa68860aa8e</anchor>
      <arglist>(uint8_t raceID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiGuardianAssistData &gt;</type>
      <name>GetGuardianAssistData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a31333a5afed6af8c60cccbd994f8cbae</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiGuardianLevelData &gt;</type>
      <name>GetGuardianLevelData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>abd58ed0d55b36232875be6b4697d7d24</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; uint8_t &gt;</type>
      <name>GetGuardianRaceIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a304c9ef0f2478e5d3dd3151e0fc077bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiGuardianSpecialData &gt;</type>
      <name>GetGuardianSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6e2a904c3abcec56398da005c1883792</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiGuardianUnlockData &gt;</type>
      <name>GetGuardianUnlockData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3cb3fd214c8ffd3be93cffbd0d1fec42</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiHNPCData &gt;</type>
      <name>GetHNPCData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8f0a8f87b4d0a2807f11ee89eb5dc8f8</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiItemData &gt;</type>
      <name>GetItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a741cf947fb1329503269e0df7f7c0591</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiItemData &gt;</type>
      <name>GetItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0feceeccc180f53d1314f523c15534d3</anchor>
      <arglist>(const libcomp::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiMissionData &gt;</type>
      <name>GetMissionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a37cb52f926c47cdcb30ef11635a2fd41</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiMitamaReunionBonusData &gt;</type>
      <name>GetMitamaReunionBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a44df6703765681d418d9fcc0ca3a17f4</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiMitamaReunionSetBonusData &gt; &gt;</type>
      <name>GetMitamaReunionSetBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a07586f0f3e90088d78ebc9c234632c24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiMitamaUnionBonusData &gt;</type>
      <name>GetMitamaUnionBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad07cc169cfc30dc593b5fd7a8194b22c</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationData &gt;</type>
      <name>GetModificationData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9aa7186158325aeca9bf78eeb4cb9dca</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationData &gt;</type>
      <name>GetModificationDataByItemID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aab4ffc05cc05d4d9ad2aaebc38fc2eef</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationExtEffectData &gt;</type>
      <name>GetModificationExtEffectData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a003fabeb7f78152f98d3d1d7f0b33828</anchor>
      <arglist>(uint8_t groupID, uint8_t slot, uint16_t subID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationExtRecipeData &gt;</type>
      <name>GetModificationExtRecipeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6e88fbf8e2c47035ea131c821703ef2a</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationExtRecipeData &gt;</type>
      <name>GetModificationExtRecipeDataByItemID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9363f74a700e811884d0e4a7eb5cac71</anchor>
      <arglist>(uint32_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModificationTriggerData &gt;</type>
      <name>GetModificationTriggerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3774014ccdcbd78b1848801add625832</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiModifiedEffectData &gt;</type>
      <name>GetModifiedEffectData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2bc82e37e8db21cc48766cd60714429d</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiNPCBarterConditionData &gt;</type>
      <name>GetNPCBarterConditionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a293f2e0adccaf9a072cb43302d024d10</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiNPCBarterData &gt;</type>
      <name>GetNPCBarterData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aa5396953d2b35aa01f8a6024cfc3ce8a</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiNPCBarterGroupData &gt;</type>
      <name>GetNPCBarterGroupData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a503c5f60182e410493ca7be723d7f37e</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiONPCData &gt;</type>
      <name>GetONPCData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4d3eefdae81d64d9af231d2c4f514a14</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiQuestBonusCodeData &gt;</type>
      <name>GetQuestBonusCodeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a155861ba0af8d91248ed6073868b0b7e</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiQuestData &gt;</type>
      <name>GetQuestData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>acb437fb52c3b6ab31e3941337653f4c8</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiShopProductData &gt;</type>
      <name>GetShopProductData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae921b15546ad31858f60d6c71e155bbe</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetSItemTokusei</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af28b5c35e44d5ba77bb30fdd31f986c7</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiSkillData &gt;</type>
      <name>GetSkillData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3a4fc617c009724b84e7926ae2a6caef</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSpotData &gt; &gt;</type>
      <name>GetSpotData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a115bb3d1d7988aab2b344b43dc99d148</anchor>
      <arglist>(uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiSStatusData &gt;</type>
      <name>GetSStatusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3f530643aa2967887614f1ad9429d5b5</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiStatusData &gt;</type>
      <name>GetStatusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a80c664985084a1f36469110b77eb4df0</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiSynthesisData &gt;</type>
      <name>GetSynthesisData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad27e2390cc0e5c58e2ee5a3e87827a64</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiTankData &gt; &gt;</type>
      <name>GetTankData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9a380100d1afaf151ef579461eb36aaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiTimeLimitData &gt;</type>
      <name>GetTimeLimitData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4566bba541e72af1577d916681c3e287</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiTitleData &gt;</type>
      <name>GetTitleData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5c0978697178502ffc13869057cb98d5</anchor>
      <arglist>(int16_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int16_t &gt;</type>
      <name>GetTitleIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a38888bf9bef6438916d8021095e0fa6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::Tokusei &gt;</type>
      <name>GetTokuseiData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a63e55389b67d93da7d404b9fb7930b61</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; objects::MiTriUnionSpecialData &gt; &gt;</type>
      <name>GetTriUnionSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6c65313a388ef8b9b1266c0ecc2d33d0</anchor>
      <arglist>(uint32_t sourceDemonTypeID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiUraFieldTowerData &gt;</type>
      <name>GetUraFieldTowerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a935bfbd3569471b39fd8b2d1b50c98c8</anchor>
      <arglist>(uint32_t dungeonID, uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiWarpPointData &gt;</type>
      <name>GetWarpPointData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ab82a198608c9bc45e7822c684150fb32</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::MiZoneData &gt;</type>
      <name>GetZoneData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a50630ae1d0e2257e7437ba028e7730be</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadAllData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae6b41d1e8e88775f003c104c7a0e39fb</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2705039f97697245a1dcbab66aeab440</anchor>
      <arglist>(DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::QmpFile &gt;</type>
      <name>LoadQmpFile</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2a320890cc032f71d73460004134367f</anchor>
      <arglist>(const libcomp::String &amp;fileName, DataStore *pDataStore)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterServerSideDefinition</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a7adc28f1404a02006af1d58b1a8a4a22</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;record)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetRecordByID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6c10010a77ff0986bbd4768d43954c42</anchor>
      <arglist>(X id, std::unordered_map&lt; X, std::shared_ptr&lt; T &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadBinaryData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad5e25005b8b9193c9726ad07edf386c0</anchor>
      <arglist>(DataStore *pDataStore, const libcomp::String &amp;binaryFile, bool decrypt, uint16_t tablesExpected, std::list&lt; std::shared_ptr&lt; T &gt;&gt; &amp;records, bool printResults=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadBinaryDataHeader</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a99b244e7068167284e8ad4960b1116d8</anchor>
      <arglist>(libcomp::ObjectInStream &amp;ois, const libcomp::String &amp;binaryFile, uint16_t tablesExpected, uint16_t &amp;entryCount, uint16_t &amp;tableCount)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>PrintLoadResult</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3df032b9141e1b7bd206088cb43f2bbf</anchor>
      <arglist>(const libcomp::String &amp;binaryFile, bool success, uint16_t entriesExpected, size_t loadedEntries)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiAIData &gt; &gt;</type>
      <name>mAIData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aac996bf459ca7e4524d7dfcafe912abe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiBlendData &gt; &gt;</type>
      <name>mBlendData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae847bf747f2d6424fe73679948ef75ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiBlendExtData &gt; &gt;</type>
      <name>mBlendExtData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ada2cf0d05727b7343366f108a0b1786e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int8_t, std::shared_ptr&lt; objects::MiCHouraiData &gt; &gt;</type>
      <name>mCHouraiData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0a0a5ec08befb6eaa7c28b4554c331be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, uint32_t &gt;</type>
      <name>mCItemNameLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a64712ec1b20ea65515f3577e74ff608c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiCultureItemData &gt; &gt;</type>
      <name>mCultureItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad356bfbf4ccc6d78432b55b6ef8d97ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilBookData &gt; &gt;</type>
      <name>mDevilBookData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a74afa930de0f6d0002bce9e26bb8ca1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilBoostData &gt; &gt;</type>
      <name>mDevilBoostData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>abdd3185cfd56332ad01a9d54dcdf55ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiDevilBoostExtraData &gt; &gt;</type>
      <name>mDevilBoostExtraData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad3b78b665f98919f5e6616a0b6ff840b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilBoostItemData &gt; &gt;</type>
      <name>mDevilBoostItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9fba1772bb63b03203a16b8dda34cfd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::list&lt; uint16_t &gt; &gt;</type>
      <name>mDevilBoostLots</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ab286d6a64444dd3df831c7e8c6152606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilData &gt; &gt;</type>
      <name>mDevilData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>acf8151610b70e37875dd0ed591514f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilEquipmentData &gt; &gt;</type>
      <name>mDevilEquipmentData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8866edb27da3ad94966ac1df3bccecac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilEquipmentItemData &gt; &gt;</type>
      <name>mDevilEquipmentItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af2b6db5b0aaa28412cf3a9774bc8c5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilFusionData &gt; &gt;</type>
      <name>mDevilFusionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>afde4198126e4c1439b3e741674e7cbc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mDevilFusionLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a873330f5de018b74559e6dd7e945f81b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDevilLVUpRateData &gt; &gt;</type>
      <name>mDevilLVUpRateData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a75a15726bea8b8ddd16d2305692d4610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, uint32_t &gt;</type>
      <name>mDevilNameLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ac02f07d713ee658a0cf51c12a2a0e794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>mDisassembledItemIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aaffd0156b877f7df16ce5fbe8d7e2c73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDisassemblyData &gt; &gt;</type>
      <name>mDisassemblyData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ada6548a4b726e56fe7d04586bc15126a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>mDisassemblyLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a3510f0ba6080b81e79954dfb76c7a809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDisassemblyTriggerData &gt; &gt;</type>
      <name>mDisassemblyTriggerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aeb31746dc0009dc51e117f071aca39ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiDynamicMapData &gt; &gt;</type>
      <name>mDynamicMapData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a34a303d080fc14f351bfc952a32eb9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int16_t, std::shared_ptr&lt; objects::MiEnchantData &gt; &gt;</type>
      <name>mEnchantData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5122c3cf87ae27987ee8a18fc5a06932</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, int16_t &gt;</type>
      <name>mEnchantDemonLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>adf4211f9e020ebc5492352dff22e6602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, int16_t &gt;</type>
      <name>mEnchantItemLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a7c0cdc17777015d32ee3aa5d5148089c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::EnchantSetData &gt; &gt;</type>
      <name>mEnchantSetData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ab4098bcd445858c5d76c9c4946f1cdf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int16_t, std::list&lt; uint32_t &gt; &gt;</type>
      <name>mEnchantSetLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a60728b44420f78594febf57d52248bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::EnchantSpecialData &gt; &gt;</type>
      <name>mEnchantSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a02a8b68ff0f24407abbf2440467d5cbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; uint32_t &gt; &gt;</type>
      <name>mEnchantSpecialLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad548bdfec9f800d57acb3cb25eeb2d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiEquipmentSetData &gt; &gt;</type>
      <name>mEquipmentSetData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9d91e6295ab405d92ee2984c5c429bb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; uint32_t &gt; &gt;</type>
      <name>mEquipmentSetLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a359e7f2dc00155d4bd5e3414047e7803</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiExchangeData &gt; &gt;</type>
      <name>mExchangeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0494807612c42ba8ead80f33bbd0952e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiExpertData &gt; &gt;</type>
      <name>mExpertData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af50ad3f8f602e9624eec581e4595700b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mFunctionIDSkills</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ae5f527931deb9b1f136d1fa709734bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::pair&lt; uint8_t, uint32_t &gt; &gt; &gt;</type>
      <name>mFusionRanges</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aa9176fbe7817b21f0b9b86e368f998b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiGuardianAssistData &gt; &gt;</type>
      <name>mGuardianAssistData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af284aaa058bc8ff254a5768217f51306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiGuardianLevelData &gt; &gt;</type>
      <name>mGuardianLevelData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ab9c0c05db16eda81de7fb8430e643a8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiGuardianSpecialData &gt; &gt;</type>
      <name>mGuardianSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9c6812173e32c86258b3e2736b281f76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiGuardianUnlockData &gt; &gt;</type>
      <name>mGuardianUnlockData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a246111796b362f31b0d999f449cc9164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiHNPCData &gt; &gt;</type>
      <name>mHNPCData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad44e2200b8b3d357436ee6b647525267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiItemData &gt; &gt;</type>
      <name>mItemData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a48174c33b268106bad164c88a302bdf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiMissionData &gt; &gt;</type>
      <name>mMissionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2ebf59d7c3733f85f174052a637b63be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiMitamaReunionBonusData &gt; &gt;</type>
      <name>mMitamaReunionBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a7e8e17d56514e45617888f49c6502e00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiMitamaReunionSetBonusData &gt; &gt;</type>
      <name>mMitamaReunionSetBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aec376de60c982f103db5969c2f6991a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiMitamaUnionBonusData &gt; &gt;</type>
      <name>mMitamaUnionBonusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aeb5e792b0549de455d5716b188a23db3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiModificationData &gt; &gt;</type>
      <name>mModificationData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a1bef259b52408f885ac1cb541b929cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::unordered_map&lt; uint8_t, std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiModificationExtEffectData &gt; &gt; &gt; &gt;</type>
      <name>mModificationExtEffectData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6de71279fa314578c74eda71284913e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiModificationExtRecipeData &gt; &gt;</type>
      <name>mModificationExtRecipeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a1635c58cebe05eddf54bad48e3fa0c1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>mModificationExtRecipeLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8b55a662b015ea79c094e5e758bb6795</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>mModificationLookup</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>afecb00e02a76601246b2e7f89146febb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiModificationTriggerData &gt; &gt;</type>
      <name>mModificationTriggerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a1aeb8423959a0f0b088e82b164ff3d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiModifiedEffectData &gt; &gt;</type>
      <name>mModifiedEffectData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4c272bea84cc24bd549c378d369baed5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiNPCBarterConditionData &gt; &gt;</type>
      <name>mNPCBarterConditionData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a694e3c9b13c402e02a7187d85062cb62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiNPCBarterData &gt; &gt;</type>
      <name>mNPCBarterData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a4b6f8b360c182adc9a38abc738b2d071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::MiNPCBarterGroupData &gt; &gt;</type>
      <name>mNPCBarterGroupData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a6328286f72aab6df3245f05e7a12fc4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiONPCData &gt; &gt;</type>
      <name>mONPCData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a7dd84052776a81fe4747ba5c623e3d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiQuestBonusCodeData &gt; &gt;</type>
      <name>mQuestBonusCodeData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af9b5e4b4e310fe1047f7e5dc48ba9381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiQuestData &gt; &gt;</type>
      <name>mQuestData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8be10913ac64de3621a7837033cb97c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiShopProductData &gt; &gt;</type>
      <name>mShopProductData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a73fbbfdf871e04a766899bdd2c3e8e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mSItemTokusei</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a622a1663f88565932765e1592903576b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSkillData &gt; &gt;</type>
      <name>mSkillData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>adbc3d360a048553fc23199b309a2e1ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSpotData &gt; &gt; &gt;</type>
      <name>mSpotData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a9be08052c3f498a1d5e90af6ea341162</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSStatusData &gt; &gt;</type>
      <name>mSStatusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a72cd338ae97cc5a708e57c534f52a991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiStatusData &gt; &gt;</type>
      <name>mStatusData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a2e1dc52e8e38ec145eed1479f011b9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiSynthesisData &gt; &gt;</type>
      <name>mSynthesisData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a8ac7574b47a12f9ce0a22c50849a8b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiTankData &gt; &gt;</type>
      <name>mTankData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a5c3c919dc51760bf605f2dc3670437d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiTimeLimitData &gt; &gt;</type>
      <name>mTimeLimitData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0381a39cced3cc9823732a44e34f62ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int16_t, std::shared_ptr&lt; objects::MiTitleData &gt; &gt;</type>
      <name>mTitleData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>aa4cf74aa5409fca7cd3af7c796f1ca92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int16_t &gt;</type>
      <name>mTitleIDs</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>adf315f3bfb0adead756c74619a7590ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::Tokusei &gt; &gt;</type>
      <name>mTokuseiData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a21145df3451809f6830d917a4e786e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiTriUnionSpecialData &gt; &gt;</type>
      <name>mTriUnionSpecialData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a0cc6bb64f3298e81d7c2e4abde940499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; uint32_t &gt; &gt;</type>
      <name>mTriUnionSpecialDataBySourceID</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>af0951178a9d6621f335a0eda621e6e50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiUraFieldTowerData &gt; &gt; &gt;</type>
      <name>mUraFieldTowerData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a27e47b26a448cec1c1e8f182a003604b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiWarpPointData &gt; &gt;</type>
      <name>mWarpPointData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>ad6b318e45157bb4793d01e92ee76656a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiZoneData &gt; &gt;</type>
      <name>mZoneData</name>
      <anchorfile>classlibcomp_1_1DefinitionManager.html</anchorfile>
      <anchor>a187b2ef31379766711a14235d730df10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicObject</name>
    <filename>classlibcomp_1_1DynamicObject.html</filename>
    <base protection="private">libcomp::Object</base>
    <member kind="function">
      <type></type>
      <name>DynamicObject</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>a47f8a1651b7e5a425daf05626196fd92</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaObject &gt; &amp;metaObject)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint16_t</type>
      <name>GetDynamicSizeCount</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>a4b82a5192796d425a227eec75021f185</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>a202d48566f9277e572dbfd9d91c6f268</anchor>
      <arglist>(bool recursive=true) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>GetXml</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>ae70378da44b9508697c898d25ed11a96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const tinyxml2::XMLElement *</type>
      <name>GetXmlChild</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a5a9a204c875a0c5204014751fa2b35cc</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root, const std::string name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::list&lt; const tinyxml2::XMLElement * &gt;</type>
      <name>GetXmlChildren</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>aa897ef8716eabc1b8c7cb3bf0eac5dce</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root, const std::string name) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::unordered_map&lt; std::string, const tinyxml2::XMLElement * &gt;</type>
      <name>GetXmlMembers</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a02b2bef25bcbd66ac7364e47c5432c15</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::string</type>
      <name>GetXmlText</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a92d676d6520230b286acf4c1a52a9df3</anchor>
      <arglist>(const tinyxml2::XMLElement &amp;root) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a32d4706f815f90eacd9e12cc7e7741f2</anchor>
      <arglist>(ObjectInStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a896688f2b1795703ab556c9a0978b657</anchor>
      <arglist>(std::istream &amp;stream, bool flat=false)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>af4b523a738c39a93f14036fae2f2bb2e</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement &amp;root)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LoadPacket</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a51ebaf6b8dbb45bf87bb1f7a7a48c0a0</anchor>
      <arglist>(libcomp::ReadOnlyPacket &amp;p, bool flat=true)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>abbeccce92279b9a1c3b0a9fdfa05f08d</anchor>
      <arglist>(ObjectOutStream &amp;stream) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a1a99431ee50e1c278bdc7d03d763cffb</anchor>
      <arglist>(std::ostream &amp;stream, bool flat=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a1494a819b0023e482e010d364d909a18</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, tinyxml2::XMLElement &amp;root, bool append=false) const =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>SavePacket</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a8beb10e8599f8e347167d44cdbbd9507</anchor>
      <arglist>(libcomp::Packet &amp;p, bool flat=true) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>SkipPadding</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a49f887ec98e5f34bc5973815cfe780df</anchor>
      <arglist>(std::istream &amp;stream, uint8_t count)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>WritePadding</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a94c4e0a1e8f3c20e4684599af22cba05</anchor>
      <arglist>(std::ostream &amp;stream, uint8_t count) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; Object &gt; &gt;</type>
      <name>LoadBinaryData</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a90c7dea889724ec9c09fd1b9a324bb0c</anchor>
      <arglist>(std::istream &amp;stream, const std::function&lt; std::shared_ptr&lt; Object &gt;()&gt; &amp;objectAllocator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SaveBinaryData</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>adecc5d44675148473947b8287115dd08</anchor>
      <arglist>(std::ostream &amp;stream, const std::list&lt; std::shared_ptr&lt; Object &gt;&gt; &amp;objs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mFieldLock</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a2926dd4b9178ac3bc9ac05dea9f55509</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>mMetaData</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>aeff40a15c676142c7c7339b0e491aee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; DynamicVariable &gt; &gt;</type>
      <name>mVariableLookup</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>aedb4087b9c26e6b70de9dc8f6c651dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; DynamicVariable &gt; &gt;</type>
      <name>mVariables</name>
      <anchorfile>classlibcomp_1_1DynamicObject.html</anchorfile>
      <anchor>a475a40c4aa00874dce769f3cf5f78ecc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariable</name>
    <filename>classlibcomp_1_1DynamicVariable.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicVariable</name>
      <anchorfile>classlibcomp_1_1DynamicVariable.html</anchorfile>
      <anchor>a6e3a36a83923b649ead8b04d21b77d6e</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariable</name>
      <anchorfile>classlibcomp_1_1DynamicVariable.html</anchorfile>
      <anchor>af8f8237d328007c2fd13eeaf458e5bdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariable.html</anchorfile>
      <anchor>aa019b94fa6dbf0c79949b763cbdf129e</anchor>
      <arglist>(ObjectInStream &amp;stream)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariable.html</anchorfile>
      <anchor>ab3e7609b149aa0b9f85c37f763089362</anchor>
      <arglist>(ObjectOutStream &amp;stream) const =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libobjgen::MetaVariable &gt;</type>
      <name>mMetaData</name>
      <anchorfile>classlibcomp_1_1DynamicVariable.html</anchorfile>
      <anchor>a1f284d2d50b547205f61c24ada80f941</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableArray</name>
    <filename>classlibcomp_1_1DynamicVariableArray.html</filename>
    <base>libcomp::DynamicVariable</base>
    <member kind="function">
      <type></type>
      <name>DynamicVariableArray</name>
      <anchorfile>classlibcomp_1_1DynamicVariableArray.html</anchorfile>
      <anchor>af718864774a16d7afccffbaa685fa20c</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariableArray</name>
      <anchorfile>classlibcomp_1_1DynamicVariableArray.html</anchorfile>
      <anchor>a4be5af2f48874474ec2d3468e203ef24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariableArray.html</anchorfile>
      <anchor>a92eda1dac561191d699d5b0f97fe4d23</anchor>
      <arglist>(ObjectInStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariableArray.html</anchorfile>
      <anchor>a947dd89971a7f0d80717c53e9ea98321</anchor>
      <arglist>(ObjectOutStream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableFactory</name>
    <filename>classlibcomp_1_1DynamicVariableFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>DynamicVariableFactory</name>
      <anchorfile>classlibcomp_1_1DynamicVariableFactory.html</anchorfile>
      <anchor>aa60916b4f855c293ed3dc47727cf885f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; DynamicVariable &gt;</type>
      <name>Create</name>
      <anchorfile>classlibcomp_1_1DynamicVariableFactory.html</anchorfile>
      <anchor>a44a83c621f8ae056087de433fefe5fd8</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EnumMap&lt; libobjgen::MetaVariable::MetaVariableType_t, std::function&lt; std::shared_ptr&lt; DynamicVariable &gt;const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)&gt; &gt;</type>
      <name>mAllocators</name>
      <anchorfile>classlibcomp_1_1DynamicVariableFactory.html</anchorfile>
      <anchor>a380b4c6f7abf894b79db990ace935d34</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableInt</name>
    <filename>classlibcomp_1_1DynamicVariableInt.html</filename>
    <templarg></templarg>
    <base>libcomp::DynamicVariable</base>
    <member kind="function">
      <type></type>
      <name>DynamicVariableInt</name>
      <anchorfile>classlibcomp_1_1DynamicVariableInt.html</anchorfile>
      <anchor>ada7e66eb60917f2ce1070a6ed0660d5e</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariableInt</name>
      <anchorfile>classlibcomp_1_1DynamicVariableInt.html</anchorfile>
      <anchor>a706f3df7137baac68abbb94abba9ab3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariableInt.html</anchorfile>
      <anchor>ae06b58225912815c41945ef8d7e36b43</anchor>
      <arglist>(ObjectInStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariableInt.html</anchorfile>
      <anchor>abe65343d69603ff267ab80362dba8a71</anchor>
      <arglist>(ObjectOutStream &amp;stream) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>mValue</name>
      <anchorfile>classlibcomp_1_1DynamicVariableInt.html</anchorfile>
      <anchor>a817f3a0e267c5e81a58eb636cfc9a950</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableList</name>
    <filename>classlibcomp_1_1DynamicVariableList.html</filename>
    <base>libcomp::DynamicVariable</base>
    <member kind="function">
      <type></type>
      <name>DynamicVariableList</name>
      <anchorfile>classlibcomp_1_1DynamicVariableList.html</anchorfile>
      <anchor>a5b8af12cd2fee29332e70c75a11e4468</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariableList</name>
      <anchorfile>classlibcomp_1_1DynamicVariableList.html</anchorfile>
      <anchor>a7ced6be3e3036b54e0f69d7623b34f79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariableList.html</anchorfile>
      <anchor>a65d4d706bca236694e9656b12ad893fe</anchor>
      <arglist>(ObjectInStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariableList.html</anchorfile>
      <anchor>a3fc8999b8b604806114fe2e036dde8d1</anchor>
      <arglist>(ObjectOutStream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableReference</name>
    <filename>classlibcomp_1_1DynamicVariableReference.html</filename>
    <base>libcomp::DynamicVariable</base>
    <member kind="function">
      <type></type>
      <name>DynamicVariableReference</name>
      <anchorfile>classlibcomp_1_1DynamicVariableReference.html</anchorfile>
      <anchor>a4b91bed4b2fd99e791a55a5444e23355</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariableReference</name>
      <anchorfile>classlibcomp_1_1DynamicVariableReference.html</anchorfile>
      <anchor>a3094435797f42c0f73855b9d3344e9b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariableReference.html</anchorfile>
      <anchor>a1224d80f0b4c5cbe6a71cc45ce4916f3</anchor>
      <arglist>(ObjectInStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariableReference.html</anchorfile>
      <anchor>a54e15f32f620ddf1bd70bab7ec7cabda</anchor>
      <arglist>(ObjectOutStream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::DynamicVariableString</name>
    <filename>classlibcomp_1_1DynamicVariableString.html</filename>
    <base>libcomp::DynamicVariable</base>
    <member kind="function">
      <type></type>
      <name>DynamicVariableString</name>
      <anchorfile>classlibcomp_1_1DynamicVariableString.html</anchorfile>
      <anchor>a61105b83442c111644f4a1e3336b5fc6</anchor>
      <arglist>(const std::shared_ptr&lt; libobjgen::MetaVariable &gt; &amp;metaVariable)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DynamicVariableString</name>
      <anchorfile>classlibcomp_1_1DynamicVariableString.html</anchorfile>
      <anchor>a2890a93995c0d5a972785905834c454d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Load</name>
      <anchorfile>classlibcomp_1_1DynamicVariableString.html</anchorfile>
      <anchor>a22f2f9580f28dde6e670e9bfff330361</anchor>
      <arglist>(ObjectInStream &amp;stream)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Save</name>
      <anchorfile>classlibcomp_1_1DynamicVariableString.html</anchorfile>
      <anchor>a5709265318ac053028cc03ce14a7518d</anchor>
      <arglist>(ObjectOutStream &amp;stream) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::EncryptedConnection</name>
    <filename>classlibcomp_1_1EncryptedConnection.html</filename>
    <base>libcomp::TcpConnection</base>
    <member kind="function">
      <type></type>
      <name>EncryptedConnection</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>acfe9f3215379b990ced61b74ba512318</anchor>
      <arglist>(asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EncryptedConnection</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a7af503048544163618fbc3596016896e</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EncryptedConnection</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a208666a78c33da42bfd59e1f2aa47fad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>DecompressPacket</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a93f69a9bf57e102d417f6621205a50e0</anchor>
      <arglist>(libcomp::Packet &amp;packet, uint32_t &amp;paddedSize, uint32_t &amp;realSize, uint32_t &amp;dataStart)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual uint32_t</type>
      <name>GetHeaderSize</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>ace5a1284d68cc84b45a1c8eb62cfc9da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PreparePackets</name>
      <anchorfile>classlibcomp_1_1EncryptedConnection.html</anchorfile>
      <anchor>a79a7b2a57acd879b26e97cfac690590e</anchor>
      <arglist>(std::list&lt; ReadOnlyPacket &gt; &amp;packets)</arglist>
    </member>
    <docanchor file="classlibcomp_1_1EncryptedConnection" title="Encryption Sequence">encryptseq</docanchor>
    <docanchor file="classlibcomp_1_1EncryptedConnection" title="Packet Protocol">protocol</docanchor>
  </compound>
  <compound kind="class">
    <name>libcomp::EnumClassHash</name>
    <filename>classlibcomp_1_1EnumClassHash.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>classlibcomp_1_1EnumClassHash.html</anchorfile>
      <anchor>a68f7e9d3513b26f49eb5a8bc1a305084</anchor>
      <arglist>(T t) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Exception</name>
    <filename>classlibcomp_1_1Exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a02b2804adb1309ceb46dbfb10905d008</anchor>
      <arglist>(const String &amp;msg, const String &amp;file, int line)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; String &gt;</type>
      <name>Backtrace</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a75c1fa7a19d94faf1d5be4badbc7013c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>File</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a7627bf0e51c1a16bc99440723978fae2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Line</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>ae6265857fae6b19b3cc7145c20274f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Log</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a354a86d176b99ed5aaec32bdcd506f8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Message</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>acab0332e5e0b2eb51cbf8884a9a5b97f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>RegisterSignalHandler</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a93b12d37835df925276636c35ca2be83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; String &gt;</type>
      <name>mBacktrace</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a31ae95d73292bc20828bf5c1208ca5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mFile</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a68b02358a584fc6b211c73dcc327d454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mLine</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a0c4b9a0dfa3101609fad29a6f6fce244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mMessage</name>
      <anchorfile>classlibcomp_1_1Exception.html</anchorfile>
      <anchor>a907004d9c4de6acc44a62e2449a74f89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::InternalConnection</name>
    <filename>classlibcomp_1_1InternalConnection.html</filename>
    <base>libcomp::EncryptedConnection</base>
    <member kind="function">
      <type></type>
      <name>InternalConnection</name>
      <anchorfile>classlibcomp_1_1InternalConnection.html</anchorfile>
      <anchor>a845e0b74d5d5ac2f3bd771e25501e8b3</anchor>
      <arglist>(asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InternalConnection</name>
      <anchorfile>classlibcomp_1_1InternalConnection.html</anchorfile>
      <anchor>af27491731d559ab111d50c4afb95cf3b</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InternalConnection</name>
      <anchorfile>classlibcomp_1_1InternalConnection.html</anchorfile>
      <anchor>a8840882dfbf0313fd927ef0ad8171233</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::LobbyConnection</name>
    <filename>classlibcomp_1_1LobbyConnection.html</filename>
    <base>libcomp::EncryptedConnection</base>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionMode_t</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a0f02726cbc7f0030b78d38bdf5560a68</anchor>
      <arglist></arglist>
      <enumvalue file="classlibcomp_1_1LobbyConnection.html" anchor="a0f02726cbc7f0030b78d38bdf5560a68abff9fadf17693558d8de3babcf787fe3">MODE_NORMAL</enumvalue>
      <enumvalue file="classlibcomp_1_1LobbyConnection.html" anchor="a0f02726cbc7f0030b78d38bdf5560a68a74cd309cdb5e9ae2d4ada7bcb99729d1">MODE_PING</enumvalue>
      <enumvalue file="classlibcomp_1_1LobbyConnection.html" anchor="a0f02726cbc7f0030b78d38bdf5560a68a7805b4d7fbb4c7f03ed8acf49f60118a">MODE_WORLD_UP</enumvalue>
    </member>
    <member kind="function">
      <type></type>
      <name>LobbyConnection</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a424e866ca6839242a0ec3e640cb54862</anchor>
      <arglist>(asio::io_service &amp;io_service, ConnectionMode_t mode=ConnectionMode_t::MODE_NORMAL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LobbyConnection</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a4b70a97076eb8e18ca352472e3e82a58</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LobbyConnection</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a42a04fe3f323c92641a9bdc45a152168</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ConnectionSuccess</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a28c3006cf677bc909b439575820bf916</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetListenPort</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a1bd11b09fe613e1c6e60ad7be2be889c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetListenPort</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a9393c1e95179ad12a14de593dc02cf28</anchor>
      <arglist>(uint16_t port)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ParseExtension</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a48b5bc18a027bcd6fab51acfd0aec60d</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ParseExtensionConnection</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a14e6d290aeb584de8cbecf94f9d4a8e9</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint16_t</type>
      <name>mListenPort</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>ab49a0f65546a29b3c0035f5598ee3098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ConnectionMode_t</type>
      <name>mMode</name>
      <anchorfile>classlibcomp_1_1LobbyConnection.html</anchorfile>
      <anchor>a558c7f399ed942ec48a9bb122ce7933c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Log</name>
    <filename>classlibcomp_1_1Log.html</filename>
    <member kind="typedef">
      <type>void(*</type>
      <name>Hook_t</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>af059f1b99ca8d56572f6ffe42bdbbed4</anchor>
      <arglist>)(LogComponent_t comp, Level_t level, const String &amp;msg, void *pUserData)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>Level_t</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_DEBUG</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6abad3b7419f0fe22e079690d6549ff5330c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_INFO</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6aba4207e1a23001fd951dbd2dd7290518de</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_WARNING</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6aba46f998103a5fb09a4879c259f3d9c58a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_ERROR</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6aba9df91f36622dcff9a8b19c5b7296f8ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_CRITICAL</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6abaedf5e9f93072516b2d90311d6d85f73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_LEVEL_COUNT</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1472098b0e9b0bfebec448507c9cc6abaa17536d1ed65be43ffe3a0e2065ace4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Log</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a0fbfda88fbee5027c89f6eb121059360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLogHook</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>ae75a6a3cef109ab760c147ba5b63f32b</anchor>
      <arglist>(Hook_t func, void *pUserData=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLogHook</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a3500564f5d672b4c48064ad083726bbd</anchor>
      <arglist>(const std::function&lt; void(LogComponent_t comp, Level_t level, const String &amp;msg)&gt; &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddStandardOutputHook</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>ab94ef62613a7be9c09779fcd31072120</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearHooks</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a13fe910ff962c28f4cd45e438e4618db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLogCompression</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a7203c23ba68ed63db6f8fe32b6338f10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLogFileTimestampsEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a9846a30192522d893efe37e86ee44aff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Level_t</type>
      <name>GetLogLevel</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a85b8b5c8014bee2bdb3883bcf1bf9008</anchor>
      <arglist>(LogComponent_t comp) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetLogPath</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a74068df07bfeb4bdc297fe0d83b2aa87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLogRotationCount</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a3886190c544d4b0af1e0ca36845b5dc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetLogRotationDays</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a95e840b9044a0a685cf714cfa57e34f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLogRotationEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a8183ccff25ae592e1d2b2105e861dd46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LogMessage</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a797669011b78ae14710d36013e5d8b37</anchor>
      <arglist>(libcomp::LogMessage *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogCompression</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>aeec8d587b0867acdbe40f22e1b88f3d7</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogFileTimestampsEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>afe340ed8397ffdc4ec2f60822cb44d47</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogLevel</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a629a0e73d1a659e0a675bbf7a040f433</anchor>
      <arglist>(LogComponent_t comp, Level_t level)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogPath</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a22f355e39b7e8a836e28b61ccb957df9</anchor>
      <arglist>(const String &amp;path, bool truncate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogRotationCount</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a70e8e46ec454bbc90f60bf4deab9339c</anchor>
      <arglist>(int count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogRotationDays</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a8a282ebb184a26d43d3bf47dfe1cb044</anchor>
      <arglist>(int days)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLogRotationEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>acf5533faca72d12024afcbf3f5d6547d</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ShouldLog</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a6cfafdc80587925596844ef6093c3b7e</anchor>
      <arglist>(LogComponent_t comp, Level_t level) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Log *</type>
      <name>GetSingletonPtr</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a95e9da48aa3d89097333b555514cdf2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Log</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>af6071a60aa52b6c1b511f99b4bc1b8fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>LogMessage</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a7f487a9faf670d1487815789de4c2b03</anchor>
      <arglist>(const std::chrono::time_point&lt; std::chrono::system_clock &gt; &amp;timestamp, LogComponent_t comp, Level_t level, const String &amp;msg)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>MessageLoop</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a24c60b0a4d8473edd998c2f9cf9fdad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RotateLogs</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a2c2f01142b6e39fcd0a9bbd698638c55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>FileDelete</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a251a836d87a44cb3fda0d858f5637c3b</anchor>
      <arglist>(const libcomp::String &amp;file)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>FileExists</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a7fb8c58767a29922bafa7836bdbb8f5c</anchor>
      <arglist>(const libcomp::String &amp;file)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static bool</type>
      <name>FileMove</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a57ccc287dc27898b1358ba3f850d43dd</anchor>
      <arglist>(const libcomp::String &amp;oldPath, const libcomp::String &amp;newPath)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EnumMap&lt; LogComponent_t, Level_t &gt;</type>
      <name>mComponentLogLevels</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>af21c7c24c5d6d2dc9d0136bd9e0bbd8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; Hook_t, void * &gt;</type>
      <name>mHooks</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a6ab877681c1e500ec1085f2321afb079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::function&lt; void(LogComponent_t comp, Level_t level, const String &amp;msg)&gt; &gt;</type>
      <name>mLambdaHooks</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a634e85203350929e84ae296a69629f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64_t</type>
      <name>mLastLog</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a6b064e4f6b60203c94b39a98937c0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mLogCompression</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>ae08d07689adfadc9f8973ecb4a45635b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ofstream *</type>
      <name>mLogFile</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a1aeaab18e56912c12ddfe2c464d792b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mLogFileTimestampEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>aaf1a75bdf37373c0642e85148609697d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String</type>
      <name>mLogPath</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>accf82f4888a291aaed19d5207133dbf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mLogRotationCount</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>acc8804b4fb7a02f2f8df30de96b7ca35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mLogRotationDays</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a5aa48e53c4c1eeab2d99f46385ce772a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mLogRotationEnabled</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>ac397ee8e7e4f21572f60fa48e0fa692e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MessageQueue&lt; libcomp::LogMessage * &gt;</type>
      <name>mMessages</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>ae8edfeff3522a76bdfd8a0752ec43c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::thread</type>
      <name>mThread</name>
      <anchorfile>classlibcomp_1_1Log.html</anchorfile>
      <anchor>a663915453b222a58cdb281e845a0e114</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::LogMessage</name>
    <filename>classlibcomp_1_1LogMessage.html</filename>
    <member kind="function">
      <type></type>
      <name>LogMessage</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a12b73af86f9c4e592892f7a6949cf7e0</anchor>
      <arglist>(LogComponent_t comp, Log::Level_t level)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LogMessage</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a7ac6d40193ecd4fa5e6fcc75ee2aaac5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>LogComponent_t</type>
      <name>GetComponent</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a61e4cb2c7e644534e999cdccce0544f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Log::Level_t</type>
      <name>GetLevel</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a8070909860db9d6973dc49898db87ab9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual String</type>
      <name>GetMsg</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>ab452fd72917af2f9e5aef7b9d6928801</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function">
      <type>std::chrono::time_point&lt; std::chrono::system_clock &gt;</type>
      <name>GetTimestamp</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>ab16ece03adc941547c28284664cfc8e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ShouldStop</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>af5f8cd2226a87d01fbd1a97e42955cd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>LogComponent_t</type>
      <name>mComponent</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a303a580a63c0d01e3ce2e6b80575e41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Log::Level_t</type>
      <name>mLevel</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>ae23d2817a830293e2b93d26a71e6ba19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::chrono::time_point&lt; std::chrono::system_clock &gt;</type>
      <name>mTimestamp</name>
      <anchorfile>classlibcomp_1_1LogMessage.html</anchorfile>
      <anchor>a33066ab9381e9afe3b6476c20c71040e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::LogMessageFixed</name>
    <filename>classlibcomp_1_1LogMessageFixed.html</filename>
    <base>libcomp::LogMessage</base>
    <member kind="function">
      <type></type>
      <name>LogMessageFixed</name>
      <anchorfile>classlibcomp_1_1LogMessageFixed.html</anchorfile>
      <anchor>aaf3401e0559909af9616e6b8cb43cecf</anchor>
      <arglist>(LogComponent_t comp, Log::Level_t level, const String &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LogMessageFixed</name>
      <anchorfile>classlibcomp_1_1LogMessageFixed.html</anchorfile>
      <anchor>a28030a0f224e230cb2ba59acd3bc4130</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetMsg</name>
      <anchorfile>classlibcomp_1_1LogMessageFixed.html</anchorfile>
      <anchor>a74f7d14e6385fe7e00174a3f3a24fb5b</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mMessage</name>
      <anchorfile>classlibcomp_1_1LogMessageFixed.html</anchorfile>
      <anchor>acf782adeeb747292dc95ba9c1ce0b292</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::LogMessageImpl</name>
    <filename>classlibcomp_1_1LogMessageImpl.html</filename>
    <templarg>Function</templarg>
    <base>libcomp::LogMessage</base>
    <member kind="typedef">
      <type>decltype(std::bind(std::declval&lt; std::function&lt; String(Function...)&gt;&gt;(), std::declval&lt; Function &gt;()...))</type>
      <name>BindType_t</name>
      <anchorfile>classlibcomp_1_1LogMessageImpl.html</anchorfile>
      <anchor>a4f7a3c7db3082e8865db6c8e9cfceb8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogMessageImpl</name>
      <anchorfile>classlibcomp_1_1LogMessageImpl.html</anchorfile>
      <anchor>abffb3afe04c3c841093e2549a6879940</anchor>
      <arglist>(LogComponent_t comp, Log::Level_t level, std::function&lt; String(Function...)&gt; f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LogMessageImpl</name>
      <anchorfile>classlibcomp_1_1LogMessageImpl.html</anchorfile>
      <anchor>a832f13026a928fada5948a500a8e40d8</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetMsg</name>
      <anchorfile>classlibcomp_1_1LogMessageImpl.html</anchorfile>
      <anchor>a34a0112489bb5916a966fa05599a9452</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BindType_t</type>
      <name>mBind</name>
      <anchorfile>classlibcomp_1_1LogMessageImpl.html</anchorfile>
      <anchor>a9eabda7af3af69438b99d6ebf2a5273b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Manager</name>
    <filename>classlibcomp_1_1Manager.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Manager</name>
      <anchorfile>classlibcomp_1_1Manager.html</anchorfile>
      <anchor>a2ebac40fa921d0d60226c40f836dce93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classlibcomp_1_1Manager.html</anchorfile>
      <anchor>a7c3c6d0af7c0e786236437ea1ae10582</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classlibcomp_1_1Manager.html</anchorfile>
      <anchor>af25967f12f0d27579511368a267e85e6</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ManagerPacket</name>
    <filename>classlibcomp_1_1ManagerPacket.html</filename>
    <base>libcomp::Manager</base>
    <member kind="function">
      <type></type>
      <name>ManagerPacket</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>aeb2e07de886e326b3e769f81a7438252</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerPacket</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a8668a9991762793616aba858ec096c5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddParser</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a8d39e81519df771cc7f9966472f30cab</anchor>
      <arglist>(CommandCode_t commandCode)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>GetServer</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>aa21f449c7953fe4108dbfb2f3334d869</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a61d670c147596262bab7f4c5ead159cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>ab43ad8108c9e1be96abd52b92890d94d</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ValidateConnectionState</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a53821fc4ff724db3939fb34d7f6eeba6</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, CommandCode_t commandCode) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; CommandCode_t, std::shared_ptr&lt; PacketParser &gt; &gt;</type>
      <name>mPacketParsers</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a9973e6c8d68ea17078819adb6dac9907</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::weak_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>ae62bf57a94bada8af636216972749f69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>sSupportedTypes</name>
      <anchorfile>classlibcomp_1_1ManagerPacket.html</anchorfile>
      <anchor>a6c36b91ca805425cf273ae14f12481c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::MemoryAllocation</name>
    <filename>structlibcomp_1_1MemoryAllocation.html</filename>
    <member kind="function">
      <type>void</type>
      <name>CreateBacktrace</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>adb839686f5aede2beef6eed36a26050d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FreeBacktrace</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>ad1b3cd81a193ae5974a1098d5de7bd61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LogBacktrace</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>a7a5126fc72559b69812882c7333faef6</anchor>
      <arglist>(FILE *out)</arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>allocBacktrace</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>ae0d52c82617221385b26cdaa40024b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>allocBacktraceChecksum</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>a4c6a45711a89ba997862cdd5f351d0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>allocBacktraceCount</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>a1e4494733b8ff9e8c1bde8a8fc45c7cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pAddress</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>a51feafc102b426db0988204bcbcb078f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>aa3051795035a472ec756834702780894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>time_t</type>
      <name>stamp</name>
      <anchorfile>structlibcomp_1_1MemoryAllocation.html</anchorfile>
      <anchor>ab68a61f8f872a7cc3baa6333c1b08ad6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::MemoryManager</name>
    <filename>classlibcomp_1_1MemoryManager.html</filename>
    <member kind="function">
      <type>void</type>
      <name>Allocate</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a1ff57155539a96d0a5e84373ba322022</anchor>
      <arglist>(void *pAddress, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Deallocate</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>aec22e344bcaebb6da516eb22610869bc</anchor>
      <arglist>(void *pAddress)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetStats</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a8f0ca895f648f960f4ce0abc77f11ca8</anchor>
      <arglist>(uint64_t &amp;allocationCount, size_t &amp;heapSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Setup</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a99a71ffd2035252f4fb01dbdeca39bd9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Snapshot</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a7ff757d105c1c2306427a4a62c915f36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>CollectAllocation</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a610b812bac90610ce861f4a1ef3b36ae</anchor>
      <arglist>(std::unordered_map&lt; uint32_t, std::list&lt; MemoryAllocation * &gt;&gt; &amp;collection, rbtree_node node)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mAllocationCount</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>af114e86d594b2167ebc83ef74df4b245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>rbtree</type>
      <name>mAllocations</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a272dc76fa85843b4df2e80aeaab7c000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>mHeapSize</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>ac48cb522da72a080d589f1a2349586e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex *</type>
      <name>mLock</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a689139afb690771dd34b4e207467aa49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mSnapshotInProgress</name>
      <anchorfile>classlibcomp_1_1MemoryManager.html</anchorfile>
      <anchor>a59c94ebec4bf9f3a090a0f56dd4a1e4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::MessageQueue</name>
    <filename>classlibcomp_1_1MessageQueue.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T</type>
      <name>Dequeue</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>a02ff6ff4f36be9f6185a77d622fb4df8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DequeueAll</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>a6e9263d7b44c553d10c6e29329acad78</anchor>
      <arglist>(std::list&lt; T &gt; &amp;destinationQueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DequeueAny</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>af8524c8f17bb5ee43004fe7abfdc42ff</anchor>
      <arglist>(std::list&lt; T &gt; &amp;destinationQueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enqueue</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>ac615c0078849fc80883ca064c04b8d54</anchor>
      <arglist>(T item)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Enqueue</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>a870ec19bd03c353e6524f34cf4e14360</anchor>
      <arglist>(std::list&lt; T &gt; &amp;items)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>mEmptyCondition</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>ac776ce2b92816ed38e295e7aaea77b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mEmptyConditionLock</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>a43529fb2fed6e1c1d85548f14e6f7c82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; T &gt;</type>
      <name>mQueue</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>ad86b45600f5cf1ac4a2f1671a9d40080</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mQueueLock</name>
      <anchorfile>classlibcomp_1_1MessageQueue.html</anchorfile>
      <anchor>aee63ddeb48cd25f4edd8342d8ff2cdf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Mutex</name>
    <filename>classlibcomp_1_1Mutex.html</filename>
    <member kind="function">
      <type></type>
      <name>Mutex</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>a593423d868daf926c7b0d63a833ae29a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Mutex</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>afb95eca05b6f3620d362785ec5f9af8f</anchor>
      <arglist>(const Mutex &amp;)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>ad91be808bf0a60a16f10b897ec246d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>a85bdf2b7c3d9ce789c61f8bc2a127c8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>a546a5b797ba29959357586aa2b3740a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mLocked</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>ace0f6d3c8270d47a712aa641e39449aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::recursive_mutex</type>
      <name>mMutex</name>
      <anchorfile>classlibcomp_1_1Mutex.html</anchorfile>
      <anchor>a66526b70627de43643fc6bf2c4f9f828</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Object</name>
    <filename>classlibcomp_1_1Object.html</filename>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a40860402e64d8008fb42329df7097cdb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a4df3adb362f4bfe65251dc6cbfc3bb65</anchor>
      <arglist>(const Object &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Object</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>ae8f5483f459e46687bd01e6f9977afd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual uint16_t</type>
      <name>GetDynamicSizeCount</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>a01d796ea78e0a33d7f998df1f037a056</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1Object.html</anchorfile>
      <anchor>aae0b0d5c28469eb52bed36473fb2ff2a</anchor>
      <arglist>(bool recursive=true) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ObjectInStream</name>
    <filename>classlibcomp_1_1ObjectInStream.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectInStream</name>
      <anchorfile>classlibcomp_1_1ObjectInStream.html</anchorfile>
      <anchor>a78afc75bc41c4c53ff23b96db4c0cceb</anchor>
      <arglist>(std::istream &amp;_stream)</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; uint16_t &gt;</type>
      <name>dynamicSizes</name>
      <anchorfile>classlibcomp_1_1ObjectInStream.html</anchorfile>
      <anchor>a34aa3e66a1c2412fc05c3ef2511ec5c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::istream &amp;</type>
      <name>stream</name>
      <anchorfile>classlibcomp_1_1ObjectInStream.html</anchorfile>
      <anchor>a921d8b987c0f80f2b09e809ba920f693</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ObjectOutStream</name>
    <filename>classlibcomp_1_1ObjectOutStream.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectOutStream</name>
      <anchorfile>classlibcomp_1_1ObjectOutStream.html</anchorfile>
      <anchor>ac9e8cd5086f63ce3932c7cfbac5e8bd7</anchor>
      <arglist>(std::ostream &amp;_stream)</arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; uint16_t &gt;</type>
      <name>dynamicSizes</name>
      <anchorfile>classlibcomp_1_1ObjectOutStream.html</anchorfile>
      <anchor>aee0235fb8fcb2bc8b22b4eb4f05a5071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream &amp;</type>
      <name>stream</name>
      <anchorfile>classlibcomp_1_1ObjectOutStream.html</anchorfile>
      <anchor>ad2795559bd090644717adfdcf02bf496</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ObjectReference</name>
    <filename>classlibcomp_1_1ObjectReference.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ObjectReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>ae307d3a4e6e1373581ce58bb04ab9d38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>adffe5af415dc198d0b3d652fed48b293</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a326d805ddfd83a07ce647f0435a66ece</anchor>
      <arglist>(std::shared_ptr&lt; T &gt; ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ObjectReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a80e6ea75b64815f530d7364d6ea8bd22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; T &gt;</type>
      <name>Get</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>aa2e931fec9476d134773cc7d81a4baa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; T &gt;</type>
      <name>Get</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a61f56a4be966dd3a163da3422a77d7ad</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db, bool reload=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; T &gt;</type>
      <name>GetCurrentReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a8c580f3570a9b5dab9b9f19121252d22</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID &amp;</type>
      <name>GetUUID</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>aef1eb697771b30136f6f1617f8e962d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNull</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>acdbd8b1b85ff178f8c914030c286251a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator bool</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>adea97ab638e7ed3dd21e8ebce92cc0f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>operator-&gt;</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a460c1c68a93b8662714cb537ca852659</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ObjectReference &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a7867fe216db7ebd96c4844c7165ee283</anchor>
      <arglist>(const ObjectReference &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a879e53371fb96065d70d6fb3c513eda2</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;ref)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetUUID</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a6576f36b458f3836fac3bd67ab849d30</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Unload</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>ab7c8d03b2285c8dc63097aee908410d3</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ClearReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a6a2b946b7b82c733538f05c3eaa4cc09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const std::shared_ptr&lt; T &gt;</type>
      <name>GetReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a136d38c7696f6838fd3227143860b4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>LoadReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a25c357d7e2de83291bb934ec357ee691</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db=nullptr, bool reload=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetReference</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>ab0db130d9c7635eb1f8a2e35e5859b26</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid, const std::shared_ptr&lt; PersistentObject &gt; &amp;ref=nullptr, bool setLoadFailure=false)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ObjectReferenceData &gt;</type>
      <name>mData</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>a88af2e9e47278c48aa30433bc1f98c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::mutex</type>
      <name>mReferenceLock</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>ae5dcab2566895d6977a9afdc95bcb2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::unordered_map&lt; std::string, std::shared_ptr&lt; ObjectReferenceData &gt; &gt;</type>
      <name>sData</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>aaef1118a66e55c48f8d39874136bfc74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static std::shared_ptr&lt; ObjectReferenceData &gt;</type>
      <name>sNull</name>
      <anchorfile>classlibcomp_1_1ObjectReference.html</anchorfile>
      <anchor>adf9f1d171264310dc5d1e26aa9604180</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ObjectReferenceData</name>
    <filename>classlibcomp_1_1ObjectReferenceData.html</filename>
    <member kind="function">
      <type></type>
      <name>ObjectReferenceData</name>
      <anchorfile>classlibcomp_1_1ObjectReferenceData.html</anchorfile>
      <anchor>ab2ec0d81917a89845f7eb548a91e4f12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ObjectReferenceData</name>
      <anchorfile>classlibcomp_1_1ObjectReferenceData.html</anchorfile>
      <anchor>a5d5bc74ba6f12b7059f651109bbbca13</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;ref, const libobjgen::UUID &amp;uuid=libobjgen::UUID())</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mLoadFailed</name>
      <anchorfile>classlibcomp_1_1ObjectReferenceData.html</anchorfile>
      <anchor>a4ea601a7c2c8b073a69b6530fafcd874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>mRef</name>
      <anchorfile>classlibcomp_1_1ObjectReferenceData.html</anchorfile>
      <anchor>a17d935675d8eb667080e8192c6008cdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const libobjgen::UUID</type>
      <name>mUUID</name>
      <anchorfile>classlibcomp_1_1ObjectReferenceData.html</anchorfile>
      <anchor>a52b6fa2a5d1fef02e7402b017f880baf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Packet</name>
    <filename>classlibcomp_1_1Packet.html</filename>
    <base>libcomp::ReadOnlyPacket</base>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>aabcfb963c0d5bc0fa554668f92989622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ae8d5dfea51fa7fe55e4705b176f326ec</anchor>
      <arglist>(const Packet &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a25e9bfe78dd227a9406f6eecd199586d</anchor>
      <arglist>(Packet &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a6b31985b2858d0322a6cd0b0ed29bc34</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a25ff1fceaf4f25018eaf0a7aabb66e11</anchor>
      <arglist>(const void *pData, uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Packet</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a48938391fb7e07460bb0e01198ae5ede</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Allocate</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aa00a7e8db4b61385ddb9660508cf4b6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a18fe5254e32ac247d9a254f0c713d6b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Compress</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a8e9c77c30d05345ec3af948d7f29bcb8</anchor>
      <arglist>(int32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>ConstData</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a69e01d178e3733fac85e620f9d490bfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Data</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a243e85c8262ce201bb0dd376588167e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Decompress</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a73a86b9fba0704a00ac248b2f46660b4</anchor>
      <arglist>(int32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>Direct</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a0916eed934eb35c12887c702a6ac228e</anchor>
      <arglist>(uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a368e6f70ec2341d88a121a286f9565ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>End</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>af8821a03ec77ef8482dc1397ce4e7b04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EraseRight</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a1ea560f2e966c9cb3cd5a3333759c3ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Free</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a472d24ec57cd9848dd83327eba36379a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HexDump</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ac65e3c29457d498f985eb07ba3f59322</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Left</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7f8a0775e240d3920ce6a5a593d950d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Length</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a0ee0a9bca7929774719e62b7eb3efd6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Packet &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>aab81844955b6a44b8f5ca07cf5018b40</anchor>
      <arglist>(Packet &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>PeekS16</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a2da8eb039004afa590a102a97f067ed5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>PeekS16Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a0e58edb1df8f4c90fb2082158ddc00bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>PeekS16Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7620ea40f05447a266c9f300248ce579</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>PeekS32</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a1ae0cb740f81e27901d202235acec654</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>PeekS32Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a349a45c97ebb90f1663ff15157e3c421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>PeekS32Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a0f352d76e23ea4abe6aa2d77398c51d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>PeekS8</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ad058ec4b1de4a1b07211ec40119ab32b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>PeekU16</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a8e6ecb5f233f3e540061ed5b51fbb548</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>PeekU16Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ac2e4903ee00321ff1626de381fd62e1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>PeekU16Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a1722ad0ba3efcaf587794e2b08460300</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PeekU32</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ade45fdb3308a498e199533f878a52f21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PeekU32Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a6d69f910b00c0c8502c9b55cd6d7fefb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>PeekU32Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a8bf05a779239866313b274c963b7de15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>PeekU8</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a130c8bc061a14726a0bf6bccdc77aacd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ReadArray</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>af2fedfbc3dbd16dcc49fee7e22907b0c</anchor>
      <arglist>(uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReadArray</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a8906499bcd2fc4f04929a597f90c789a</anchor>
      <arglist>(void *buffer, uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ReadDouble</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a490e3065a4aaa19da7c817725bc5bb70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ReadFloat</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7ae6bb8c60fdaba002cff529c404d972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>ReadS16</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ad9e2aae7a882d4c2329a9c4e3c993a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>ReadS16Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7c51f1160a063843b234a95cdca40b30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>ReadS16Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a3c014e6c387ab13f4dff13cf3c8ba03e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>ReadS32</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a987b82c7b6889bdf8afcf2122faf44ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>ReadS32Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7feaf2b6c66933f3d85dc905696738c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>ReadS32Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a07d26e7750f1cf1044be11dd19f77f52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ReadS64</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>adfddadf108f04b93b014829c3e9dbfd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ReadS64Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a20812e81f40fc471569f2776d3788586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>ReadS64Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a66956b5bd19502ed529460009cf8bde4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ReadS8</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a5ce2b7131c1ce6a53639742cf65216a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a014677054cdd7053808d6015c0e3a92e</anchor>
      <arglist>(Convert::Encoding_t encoding)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString16</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ac02394bfb560dc34487f2f1e0305eb2b</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString16Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a4b74f4f0de62f0fcec5528b8b47abfac</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString16Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>afea191b7edfa277902361d699296fba0</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString32</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>acb681576b11ce62ce8607be928b5a6f7</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString32Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aff8ee23fc537ebb9a1d83c485b373ca1</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ReadString32Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a34bebcbfde358c78ea64ee7a0d84ec79</anchor>
      <arglist>(Convert::Encoding_t encoding, bool trimNull=false)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>ReadU16</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a87911db90a0dbdfa5fe251184906d763</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>ReadU16Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ae18ff4829e10eb584734c12cb3536041</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>ReadU16Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aff045cd1e5bd210b1b4b0b5aa87d5e44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>ReadU32</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a4c9e94c236048dbfde9e569a374c969e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>ReadU32Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a41b84f624a22198b54d2c92549baf9a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>ReadU32Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a77df6bdb1e70e8fc7c4f4ab6975018ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ReadU64</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a6f13fe8a5a1ee598d11bbe9df1873e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ReadU64Big</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a75d62a47144d51b7839f09e510ae899d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>ReadU64Little</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>adacd1c079d8ddb6d238b9411c57c096e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>ReadU8</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7ff103a9c4137c2476ea49800643d118</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rewind</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a1149b160e249f2bd537540cf219570ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rewind</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a248310ed7cc526c85fdfa826f7cb300b</anchor>
      <arglist>(uint32_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Seek</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a392884f8baef58e545c9559e75733e69</anchor>
      <arglist>(uint32_t pos)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Size</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a760041f152f57ce4fdd5580c841bf41e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Skip</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a0889d24e27f40dbb478c6b3ac5553091</anchor>
      <arglist>(uint32_t bytes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Split</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>af4055b643ecda64de45c977499fc045a</anchor>
      <arglist>(Packet &amp;other, uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>Tell</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ab29306bb7ccc28f363252894539b8f9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteArray</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ab48ed3b0bd202fbfe9886097e2c800bc</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteArray</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ad2602b3998e4e11a76862d752dbdbc14</anchor>
      <arglist>(const void *pData, uint32_t sz)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteBlank</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a7b1c4b4277c89aa3fb079a74dbdfca63</anchor>
      <arglist>(uint32_t count)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteDouble</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a773d1cfe3fee3565d9412d97846cfba8</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteFloat</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a0552e50a74cbfb509fa07ab7afcaab2d</anchor>
      <arglist>(float value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteGameTicks</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>af7f538919ad0977a5f3fe123152046ca</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WritePacketCode</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a2334f0cb7c1a8b853cde6e92293b07fc</anchor>
      <arglist>(T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS16</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>adedccbb5548aef73dab0335ec7cdf9c8</anchor>
      <arglist>(int16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS16Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a64b67f29149bfd1bd6653b8460a4d506</anchor>
      <arglist>(int16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS16Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>aee1dbb724dcbb38c1a7b4093c0828cb9</anchor>
      <arglist>(int16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS32</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a50f614a36ccb598cd9382c79edc48b69</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS32Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a61fa4d3b5f6278f39c660d8669c25085</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS32Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ab4d39238a6c6aa34b51481009eabad10</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS64</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a39e030f5e215177ec357db8a66cf98fb</anchor>
      <arglist>(int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS64Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>aef6be63d9268d2f8958647ae9502733c</anchor>
      <arglist>(int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS64Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ae476b10477f85075b3405083205eb1d9</anchor>
      <arglist>(int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteS8</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>acb7bad5ab1a3bdba98aaa900a456a4a7</anchor>
      <arglist>(int8_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a8f7c448ee76ecbb698a1889b8268d755</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString16</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a8e053f9590227bdaa25b48b79fe983be</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString16Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a38fb8088d8ab13ca1c4fb53aa931b703</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString16Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ab7f2381548009b30746d4d8717bdcd7f</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString32</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a0102e6ecb3bd5cdc97116f986f5bf279</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString32Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a0e3dca6cf054773530eacd911dc4ad5a</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteString32Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>abcb1d90f8748fef410d53bb7858be74a</anchor>
      <arglist>(Convert::Encoding_t encoding, const String &amp;str, bool nullTerminate=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU16</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ad88f3cdd2756abaf4025cfd4951ded34</anchor>
      <arglist>(uint16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU16Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a86578628a7f326ff6b691042313f8af6</anchor>
      <arglist>(uint16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU16Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a170e6cd6bb4f2a3f28d2a892beb633d8</anchor>
      <arglist>(uint16_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU32</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a42d5cc275d54549c33df4f97bcbcb358</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU32Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a84c15301fecbc20bfc04a7ad1ff92014</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU32Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>ad995a520b3f035ccb13860b4801666f6</anchor>
      <arglist>(uint32_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU64</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>abcbf5ec2be94c295ca6a54b18a342692</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU64Big</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>abcf0504202fcb0c5a68dd245adbec705</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU64Little</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a0612410d0fba8b09d37db213204a8f51</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WriteU8</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a2507cb23cbaf9e6544370f7604c5810b</anchor>
      <arglist>(uint8_t value)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t *</type>
      <name>mData</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a3038f32a0c8aa6585ae6b06d967a4df1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; PacketArray &gt;</type>
      <name>mDataRef</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ad747130727c22c340a241107c2b7a010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mPosition</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a68a578eb0137eb9b1bc5fc739d36acb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mSize</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>ae649138df87cf65f7fd71aa4ccb64b0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GrowPacket</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a140abc43a314070ff468d96a593c565b</anchor>
      <arglist>(uint32_t count)</arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PacketException</name>
      <anchorfile>classlibcomp_1_1Packet.html</anchorfile>
      <anchor>a942590a4104e6361e4bf232cdf2bdb9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::PacketException</name>
    <filename>classlibcomp_1_1PacketException.html</filename>
    <base>libcomp::Exception</base>
    <member kind="function">
      <type></type>
      <name>PacketException</name>
      <anchorfile>classlibcomp_1_1PacketException.html</anchorfile>
      <anchor>a55adeeb8cc749ab56729b27be8c95706</anchor>
      <arglist>(const String &amp;msg, const ReadOnlyPacket *pPacket, const String &amp;file, int line)</arglist>
    </member>
    <member kind="function">
      <type>Packet &amp;</type>
      <name>GetPacket</name>
      <anchorfile>classlibcomp_1_1PacketException.html</anchorfile>
      <anchor>ad1f4603063c93d4b2f6db62c86cff073</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Packet &amp;</type>
      <name>GetPacket</name>
      <anchorfile>classlibcomp_1_1PacketException.html</anchorfile>
      <anchor>ac252c4e5421e40733edacc84cd13c624</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Log</name>
      <anchorfile>classlibcomp_1_1PacketException.html</anchorfile>
      <anchor>aa5c02e4a1cf3703ac927d781fd07a95d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Packet</type>
      <name>mPacket</name>
      <anchorfile>classlibcomp_1_1PacketException.html</anchorfile>
      <anchor>af8825510fcf9a5b8e9393606ce965ea6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::PacketParser</name>
    <filename>classlibcomp_1_1PacketParser.html</filename>
    <member kind="function">
      <type></type>
      <name>PacketParser</name>
      <anchorfile>classlibcomp_1_1PacketParser.html</anchorfile>
      <anchor>a2bd5a607ac7adc10a72cf942d22feb98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PacketParser</name>
      <anchorfile>classlibcomp_1_1PacketParser.html</anchorfile>
      <anchor>ada754d06e2fdc4cc707771c2e30a32d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>Parse</name>
      <anchorfile>classlibcomp_1_1PacketParser.html</anchorfile>
      <anchor>adc240ac7b00ff85a49b337ec3ac4fc31</anchor>
      <arglist>(ManagerPacket *pPacketManager, const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, libcomp::ReadOnlyPacket &amp;p) const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::PacketStream</name>
    <filename>classlibcomp_1_1PacketStream.html</filename>
    <base>libcomp::BasicPacketStream</base>
    <member kind="function">
      <type></type>
      <name>PacketStream</name>
      <anchorfile>classlibcomp_1_1PacketStream.html</anchorfile>
      <anchor>ab0baaeb049eaa7b43eb77e069b31601d</anchor>
      <arglist>(Packet &amp;p)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::basic_streambuf&lt; char &gt;::int_type</type>
      <name>overflow</name>
      <anchorfile>classlibcomp_1_1PacketStream.html</anchorfile>
      <anchor>a321dc89540f2b672e144857cac40145e</anchor>
      <arglist>(typename std::basic_streambuf&lt; char &gt;::int_type c=std::basic_streambuf&lt; char &gt;::traits_type::eof())</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Packet &amp;</type>
      <name>mPacket</name>
      <anchorfile>classlibcomp_1_1PacketStream.html</anchorfile>
      <anchor>a4a9fcad6796bc97ee6e0de35a165afa9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::PEFile</name>
    <filename>classlibcomp_1_1PEFile.html</filename>
    <member kind="function">
      <type></type>
      <name>PEFile</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>ac1e014e1812a82427d789d18c1f6a4b9</anchor>
      <arglist>(uint8_t *base)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>absoluteToOffset</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>ae3353cb77421375f978f689a474353a0</anchor>
      <arglist>(uint32_t address, const char *nameReq=0) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>addressToOffset</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a9a4d6773d353f06d1cabee6c37ea89c2</anchor>
      <arglist>(uint32_t address, const char *nameReq=0) const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_DOS_HEADER *</type>
      <name>dosHeader</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a43ea9aa1f62fff5ed554c97730bd6e59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>offsetToAddress</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>afdb30c1a6ece0a501185ff4d15dba547</anchor>
      <arglist>(uint32_t offset, const char *nameReq=0) const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_OPTIONAL_HEADER32 *</type>
      <name>optHeader32</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>abe71adb94b3dc3b481092f9c22b0b64b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_OPTIONAL_HEADER64 *</type>
      <name>optHeader64</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a665f0032d43d2fea0d2d5b2bd37aaa31</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_NT_HEADERS32 *</type>
      <name>peHeader32</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a27f7c8125209b683e33b450f0fec176c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_NT_HEADERS64 *</type>
      <name>peHeader64</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a16d03f66a0a582346b97cbaa6dcbb299</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IMAGE_SECTION_HEADER *</type>
      <name>section</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>acb8686736bd1ecdcb637f19df93f9277</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sectionByName</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>ac3be8dd431abded208fe99b97f3665c0</anchor>
      <arglist>(const char *name) const </arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>sectionCount</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a3bbc9ba704923a0d4c73af1c016f14a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t *</type>
      <name>mBase</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a15c0c49e6988d917008d501f53a6c728</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_DOS_HEADER *</type>
      <name>mDOSHeader</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a073c445e555393eb6bf51a97b6870fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_OPTIONAL_HEADER32 *</type>
      <name>mOptHeader32</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a8272203c0ed8b1c87b9daaf8496475c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_OPTIONAL_HEADER64 *</type>
      <name>mOptHeader64</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a5db203a04f37e92b0a510d10dfd225ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_NT_HEADERS32 *</type>
      <name>mPEHeader32</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>af3e1028518ed09574e44060071ba1e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_NT_HEADERS64 *</type>
      <name>mPEHeader64</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>a366d8ff36bf754c7757d355a4c8c5930</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IMAGE_SECTION_HEADER *</type>
      <name>mSectionHeaders</name>
      <anchorfile>classlibcomp_1_1PEFile.html</anchorfile>
      <anchor>adf57418ab3f59c84ddeac12cc0c94aa0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::PersistentObject</name>
    <filename>classlibcomp_1_1PersistentObject.html</filename>
    <base>libcomp::Object</base>
    <member kind="typedef">
      <type>std::unordered_map&lt; size_t, std::shared_ptr&lt; libobjgen::MetaObject &gt; &gt;</type>
      <name>TypeMap</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a7420260e98873124555d9142f9d3d937</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentObject</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a7fd2ce781fe1b91faca29e2c9797a270</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PersistentObject</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a106572177a0fb82e6bc690c0d1cdb087</anchor>
      <arglist>(const PersistentObject &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PersistentObject</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a5b6bf9ca886a6accf2fab12a3e6e3fec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Delete</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a8229bae3422d911dc0dcb6de7eba204a</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::list&lt; libcomp::DatabaseBind * &gt;</type>
      <name>GetMemberBindValues</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a0a74d85c97b95c5527cee9a88579853b</anchor>
      <arglist>(bool retrieveAll=false, bool clearChanges=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>GetObjectMetadata</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a618a6fad0d110c9dabc91060ffed18ce</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>libobjgen::UUID</type>
      <name>GetUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a7d869c150a0be237e92b8caf3fe5412e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Insert</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>ac71d5efa197d02ed1873bfda04aa8f02</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsDeleted</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a38150584e22bba836006cef948b45cdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>LoadDatabaseValues</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a3f3f0d41a8191a6a848d9cba10464cbe</anchor>
      <arglist>(DatabaseQuery &amp;query)=0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SaveWithUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>add84821095b9bd3f0cb7f8503a432edf</anchor>
      <arglist>(tinyxml2::XMLDocument &amp;doc, tinyxml2::XMLElement &amp;root, bool append=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Unregister</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a486e015254b4e13998403e97205823fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Update</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a92cadcac5abd91e1d350ca4cd4dda144</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>GetMetadataFromBytes</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a6435ff2fc8585549dbe80eb04c495ef7</anchor>
      <arglist>(const char *bytes, size_t length)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>GetObjectByUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>ad81a63b214eccb267d246000c33233a7</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>GetRegisteredMetadata</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a26f18a918f4a2303db3954c51b18caab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::shared_ptr&lt; libobjgen::MetaObject &gt;</type>
      <name>GetRegisteredMetadata</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a99ca5f0c3f220a5098cf7558bdeca091</anchor>
      <arglist>(size_t typeHash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeMap &amp;</type>
      <name>GetRegistry</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a36f891647a3a171f7c4337c1880cc9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>GetTypeHashByName</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a89edf76ee48db18e0f61f704f7349785</anchor>
      <arglist>(const std::string &amp;name, bool &amp;result)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>GetTypeHashByName</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a917fd71225e4dba66a86df592805e506</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Initialize</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a5da664c1018593fdd7877242d185f516</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; T &gt; &gt;</type>
      <name>LoadAll</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>abb2fbeaa9e8ad4dfc69e521a5df86684</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; T &gt;</type>
      <name>LoadObjectByUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a62921b93669fdaae19ba41de8997c88d</anchor>
      <arglist>(const std::shared_ptr&lt; Database &gt; &amp;db, const libobjgen::UUID &amp;uuid, bool reload=false, bool reportError=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>LoadObjectByUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a45c061c0723710e00967af72ea19fcad</anchor>
      <arglist>(size_t typeHash, const std::shared_ptr&lt; Database &gt; &amp;db, const libobjgen::UUID &amp;uuid, bool reload=false, bool reportError=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; T &gt;</type>
      <name>New</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a997d0624a8767a4c14052e7d82384a95</anchor>
      <arglist>(bool doRegister=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>New</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>abec602166989ad0ea78dbf07b776f069</anchor>
      <arglist>(size_t typeHash)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Register</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a33b7938304e0efd680f984a125a21198</anchor>
      <arglist>(const std::shared_ptr&lt; PersistentObject &gt; &amp;self, const libobjgen::UUID &amp;pUuid=NULLUUID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>ToList</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a911d35b1d3e5ab0b11e34fe13304ccec</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; T &gt;&gt; objList)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>LoadObject</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>aa29f0d3a0559e94d82d4a7811b835af9</anchor>
      <arglist>(size_t typeHash, const std::shared_ptr&lt; Database &gt; &amp;db, DatabaseBind *pValue)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::shared_ptr&lt; PersistentObject &gt;</type>
      <name>LoadObject</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>acd49033e860a8c2469464f8424c59ee0</anchor>
      <arglist>(size_t typeHash, const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a533d1e832b2fc7fe56bc02c2f7cf07ed</anchor>
      <arglist>(size_t typeHash, const std::shared_ptr&lt; Database &gt; &amp;db, DatabaseBind *pValue)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>ae85e26b62b780664377ec9f365551f40</anchor>
      <arglist>(size_t typeHash, const std::shared_ptr&lt; Database &gt; &amp;db)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static void</type>
      <name>RegisterType</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a1fa5b1c6ce4849852df97c257b22aa8c</anchor>
      <arglist>(std::type_index type, const std::shared_ptr&lt; libobjgen::MetaObject &gt; &amp;obj, const std::function&lt; PersistentObject *()&gt; &amp;f)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; std::string &gt;</type>
      <name>mDirtyFields</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a0075a897c8fe8152665458809952ae79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libobjgen::UUID</type>
      <name>mUUID</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a13568bc46e254b18219326e508fec40c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static bool</type>
      <name>sInitializationFailed</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>aa518c95a03befdb7c1eb51e30fb2e6bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDeleted</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>ae9fc140e33b34fd5118ddfbce4d0d90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; PersistentObject &gt;</type>
      <name>mSelf</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>abdb33f93f577eeba1ea1e4be8be77a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>mCacheLock</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>aedf080c5e73c3dc35903158e8b8f4aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; std::string, std::weak_ptr&lt; PersistentObject &gt; &gt;</type>
      <name>sCached</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a1f8e4004fa7a25482ff6815f20355387</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; size_t, std::function&lt; PersistentObject *()&gt; &gt;</type>
      <name>sFactory</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a92df60be9cf3b75272995ed1301becda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TypeMap</type>
      <name>sTypeMap</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>ae6be80a9b6d14a39ef6e32b21058a073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; std::string, size_t &gt;</type>
      <name>sTypeNames</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a0f4080030691ab96860a75b42c7685bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>ScriptEngine</name>
      <anchorfile>classlibcomp_1_1PersistentObject.html</anchorfile>
      <anchor>a6732e7667ed86d03ec878927893dd0ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Randomizer</name>
    <filename>classlibcomp_1_1Randomizer.html</filename>
    <member kind="function">
      <type>float</type>
      <name>GetRandomDecimal</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>affa681fada5ba3c1b317f8c972f83f64</anchor>
      <arglist>(float minVal, float maxVal, uint8_t precision)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandomDecimal</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>a1d5cce603054fea773583c1279591560</anchor>
      <arglist>(double minVal, double maxVal, uint8_t precision)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetEntry</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>a3ab09734881b8dc3af04d27ed98b3361</anchor>
      <arglist>(const std::list&lt; T &gt; &amp;dataset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetEntry</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>a44eef5f50e7928203981a60a35d5e1ab</anchor>
      <arglist>(const std::set&lt; T &gt; &amp;dataset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetRandomDecimal</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>a9cf33fa2bf60ecdd33955d95db4cdb5c</anchor>
      <arglist>(T minVal, T maxVal, uint8_t precision)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetRandomNumber</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>a3dbf247b2282114205cd8277383f056a</anchor>
      <arglist>(T minVal, T maxVal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>GetRandomNumber64</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>aab12c0d0244399545670fd4bbea7ae02</anchor>
      <arglist>(T minVal, T maxVal)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>SeedRNG</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>ac78d71f6c59bbc176e04def2881e4e47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static thread_local std::mt19937</type>
      <name>sGen</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>abecb81be3a52cf40c67c8f2dba915551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static thread_local std::mt19937_64</type>
      <name>sGen64</name>
      <anchorfile>classlibcomp_1_1Randomizer.html</anchorfile>
      <anchor>ad472aaa06b481e389da74e1516ae8506</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ReadOnlyPacket</name>
    <filename>classlibcomp_1_1ReadOnlyPacket.html</filename>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a563b65696cf6089f75251d56b7ed12c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aabeb4a70c8bc611e07ee343e1aa6392c</anchor>
      <arglist>(const ReadOnlyPacket &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7874ae45313df24f63eb4ef872ea8260</anchor>
      <arglist>(const ReadOnlyPacket &amp;other, uint32_t start, uint32_t size)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a7fbf82e758ee903c2b13906400e8637a</anchor>
      <arglist>(Packet &amp;&amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aa2651fe7b3f99b1fb824372e76f2b408</anchor>
      <arglist>(const Packet &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aac0e25f854debe5ec48fc8b2084f1e09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ReadOnlyPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a019e5c3087e5d11dc18b3f8b17ef5acc</anchor>
      <arglist>(ReadOnlyPacket &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>ReadOnlyPacket &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>aae0d5011cf5a0df62cd9f25d9c16ff7b</anchor>
      <arglist>(ReadOnlyPacket &amp;&amp;other)=delete</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ReadOnlyPacket</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>af117d3746a0de170d4f3de5dcc07f825</anchor>
      <arglist>(uint32_t position, uint32_t size, uint8_t *pData, std::shared_ptr&lt; PacketArray &gt; dataRef)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::array&lt; uint8_t, MAX_PACKET_SIZE &gt;</type>
      <name>PacketArray</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a6feebeff06fb7a3141c5fb9914d7626d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>PacketException</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacket.html</anchorfile>
      <anchor>a942590a4104e6361e4bf232cdf2bdb9d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ReadOnlyPacketStream</name>
    <filename>classlibcomp_1_1ReadOnlyPacketStream.html</filename>
    <base>libcomp::BasicPacketStream</base>
    <member kind="function">
      <type></type>
      <name>ReadOnlyPacketStream</name>
      <anchorfile>classlibcomp_1_1ReadOnlyPacketStream.html</anchorfile>
      <anchor>a8b6596a3ba57f793f7f0d1c3f7e1aee3</anchor>
      <arglist>(const ReadOnlyPacket &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::RingBuffer</name>
    <filename>classlibcomp_1_1RingBuffer.html</filename>
    <class kind="class">libcomp::RingBuffer::Exception</class>
    <member kind="function">
      <type></type>
      <name>RingBuffer</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a95699ddcdcb34e452b41e12d5ec1d016</anchor>
      <arglist>(int32_t capacity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RingBuffer</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a2715b2e99ea24521ef7a586c2f33e1c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Available</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a7ec8c879193fb4d17b2016cbbb7cf1d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const void *</type>
      <name>BeginRead</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a8327bfe5eeef67924ee7c0a3bfb22ee0</anchor>
      <arglist>(int32_t &amp;size) const </arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>BeginWrite</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>abedd315bc2beca8494b25c55aedffd17</anchor>
      <arglist>(int32_t &amp;size) const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Capacity</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>af72053c3d5e0063e8be784aba9da2f81</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>EndRead</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a3989fa61b7fc3c3767f9bf766d4712f9</anchor>
      <arglist>(int32_t &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>EndWrite</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a394a155abaf5f37889aa1ff177bd5271</anchor>
      <arglist>(int32_t &amp;size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Free</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a8753022aca7adf3bac8624f57f5154c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Read</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>ad022ab8f111c18c98c3ff4bfe841335f</anchor>
      <arglist>(void *pDestination, int32_t size)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Write</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>adfbd67c32d39623f22076384ae62a5e7</anchor>
      <arglist>(const void *pSource, int32_t size)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static int32_t</type>
      <name>GetPageSize</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a4740e27e962f7aa9918611164a8af84b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>IsMultipleOfTwo</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a77c8505452790bd67c40232cb16f9906</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static Exception</type>
      <name>MemoryMapException</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>ac7430fc9ac03b1afbca58be857357d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int8_t *</type>
      <name>mBuffer</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a09b0eb7887131b3059b614bc73a5c25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mCapacity</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>acd525eb3bb501c54846b1fa7b52af845</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mCapacityMask</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a24e4f86f52b53ab59e4178ef8e190c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mReadIndex</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a6f957a061a26b4d24f569f6804aabf10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mWriteIndex</name>
      <anchorfile>classlibcomp_1_1RingBuffer.html</anchorfile>
      <anchor>a6f26c94a7a88a4d0576b57ca48c45439</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::RingBuffer::Exception</name>
    <filename>classlibcomp_1_1RingBuffer_1_1Exception.html</filename>
    <member kind="function">
      <type></type>
      <name>Exception</name>
      <anchorfile>classlibcomp_1_1RingBuffer_1_1Exception.html</anchorfile>
      <anchor>a5ab8268ae820736c2f94e443c2256682</anchor>
      <arglist>(const std::string &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>Message</name>
      <anchorfile>classlibcomp_1_1RingBuffer_1_1Exception.html</anchorfile>
      <anchor>a9646d50af8e30e979f4eebc4ce81b48c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>mMessage</name>
      <anchorfile>classlibcomp_1_1RingBuffer_1_1Exception.html</anchorfile>
      <anchor>ac7731355d366e70fc85683868ef687c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ScriptEngine</name>
    <filename>classlibcomp_1_1ScriptEngine.html</filename>
    <member kind="function">
      <type></type>
      <name>ScriptEngine</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ab3ba834e1c57de7d41601309a3d8f9fd</anchor>
      <arglist>(bool useRawPrint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScriptEngine</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a6e7f804ad987ed0408b60cfa03850114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Eval</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ae513670bbc02ccaf9afa20443b7301ac</anchor>
      <arglist>(const String &amp;source, const String &amp;sourceName=String())</arglist>
    </member>
    <member kind="function">
      <type>HSQUIRRELVM</type>
      <name>GetVM</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>af33495f8601fd201a5e6a05830ac7c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Import</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a0e58d8cb9a52c4163e003e927eaaddbe</anchor>
      <arglist>(const std::string &amp;module)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Include</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a8d7d83e47d4c8affbc82bda5b27d22ce</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterModule</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>abb655a9495777cb1375c7bdbe205d295</anchor>
      <arglist>(const std::string &amp;module, const std::function&lt; bool(ScriptEngine &amp;, const std::string &amp;module)&gt; &amp;func)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ScriptEngine &gt;</type>
      <name>Self</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a80b469e80ac3265d16a37270e53a2421</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; const ScriptEngine &gt;</type>
      <name>Self</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a4218127b70575a001790de3e10ddbaf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>af2871da5b405d774d74093a89410ed39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScriptEngine &amp;</type>
      <name>Using</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a45fb0027da9c7dc495747c1e3118b294</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; ScriptEngine &gt;</type>
      <name>Self</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ae30214df6c6aadb04d03ca782a22dd55</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Bind</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ac74de0589d847984b03919bb29a9fb1c</anchor>
      <arglist>(const std::string &amp;name, Sqrat::Class&lt; T, A &gt; &amp;binding)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>BindingExists</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ab1b5823008347c0442dbcbf553a74ddd</anchor>
      <arglist>(const std::string &amp;name, bool lockBinding=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InitializeBuiltins</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a2a8aa8b1a2de1d74272d71246520596f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>mBindings</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a3d50b238d635686a93dd427d5c27dd72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; std::string &gt;</type>
      <name>mImports</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a870ff744c3da64b01eb18f680ff529a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mUseRawPrint</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>ae82d38e925355ade478198c564d05d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>HSQUIRRELVM</type>
      <name>mVM</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>a783d8a0b7657a18e29d01143db7f1e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; std::string, std::function&lt; bool(ScriptEngine &amp;, const std::string &amp;module)&gt; &gt;</type>
      <name>mModules</name>
      <anchorfile>classlibcomp_1_1ScriptEngine.html</anchorfile>
      <anchor>aed167dbab05d670d562ebb8daed8bacc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ServerCommandLineParser</name>
    <filename>classlibcomp_1_1ServerCommandLineParser.html</filename>
    <base>libcomp::ArgumentParser</base>
    <member kind="function">
      <type></type>
      <name>ServerCommandLineParser</name>
      <anchorfile>classlibcomp_1_1ServerCommandLineParser.html</anchorfile>
      <anchor>af20a5b932843828e8e31e89e86ce6f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ServerCommandLineParser</name>
      <anchorfile>classlibcomp_1_1ServerCommandLineParser.html</anchorfile>
      <anchor>a8955dce73d55e9d570e7e45988c4ddf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ServerConstants</name>
    <filename>classlibcomp_1_1ServerConstants.html</filename>
    <class kind="struct">libcomp::ServerConstants::Data</class>
    <member kind="function" static="yes">
      <type>static const Data &amp;</type>
      <name>GetConstants</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>ad9749564b987829e668fdca01a65c8df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>Initialize</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a8fd70cbd30c245c40bbfbc8e7a2283c5</anchor>
      <arglist>(const String &amp;filePath)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadDecimal</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a2132345ab427712abad1e1071abac3dd</anchor>
      <arglist>(const std::string &amp;value, T &amp;prop)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadInteger</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a4347e17ffc6b9906767b91602b0108ca</anchor>
      <arglist>(const std::string &amp;value, T &amp;prop)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadIntegerMap</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a62b2f29cbbdfdd55ff5fe437da04e767</anchor>
      <arglist>(const std::unordered_map&lt; std::string, std::string &gt; &amp;valueMap, std::unordered_map&lt; K, V &gt; &amp;propMap)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadKeyValueStrings</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>aa2f173694b7a0f09073ef50d8fda933a</anchor>
      <arglist>(const tinyxml2::XMLElement *elem, std::unordered_map&lt; std::string, std::string &gt; &amp;map)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadString</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a2c4260ebc22510244158dba7adc3039a</anchor>
      <arglist>(const std::string &amp;value, String &amp;prop)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>LoadStringList</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a89a727ecf079597f2b16e674f5d4bfeb</anchor>
      <arglist>(const tinyxml2::XMLElement *elem, std::list&lt; String &gt; &amp;prop)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>ToIntegerArray</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>ac5c2d92e5b67c590344fdb4bc1a4105c</anchor>
      <arglist>(std::array&lt; T, SIZE &gt; &amp;prop, std::list&lt; String &gt; values)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::list&lt; T &gt;</type>
      <name>ToIntegerRange</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>add1433af67b82e5d829201bfab9614fa</anchor>
      <arglist>(const std::string &amp;value, bool &amp;success)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>ToIntegerSet</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>a60257793e56eb4197471af5de54086cd</anchor>
      <arglist>(std::set&lt; T &gt; &amp;prop, std::list&lt; String &gt; values)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static Data</type>
      <name>sConstants</name>
      <anchorfile>classlibcomp_1_1ServerConstants.html</anchorfile>
      <anchor>ad411b32b502551b5ecfde514755dd71c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::ServerConstants::Data</name>
    <filename>structlibcomp_1_1ServerConstants_1_1Data.html</filename>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::array&lt; int32_t, 3 &gt; &gt;</type>
      <name>ADJUSTMENT_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad8c8d905bc587209645ebea8a21e9f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::array&lt; int32_t, 3 &gt; &gt;</type>
      <name>ADJUSTMENT_SKILLS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8f0c7df8b60bd63bb934e399af497c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_CREATE_PROMO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a758029c355a55ee2636274d8f15d2214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_DELETE_ACCOUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a1ce7c94605c0970e9d676e157e2b49ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_DELETE_PROMO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a3692c694906b8e2f06e8ea8b4519e854</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_GET_ACCOUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0bceacb96e1215ea8cb6716f1c410f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_GET_ACCOUNTS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa4a47682b65e2eeb0c8bc17c4c17c118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_GET_PROMOS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a65429269ab3bce2acb4f066def32217d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_KICK_PLAYER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa2c08c32392e42cd1c0ef28f1079f10d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_MESSAGE_WORLD</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a7414c7c8c29c682d1f01ce023a79fa9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_ONLINE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2318f0ef31d40767dfe12efa9de84f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_POST_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a171e83ace53a50104201fd46587473a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>API_ADMIN_LVL_UPDATE_ACCOUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0f397ba5f59e71c7f173cece9a65f457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, uint32_t &gt;</type>
      <name>BARTER_COOLDOWNS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a04f7e3b7b700af42016a4cd117999fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; uint32_t &gt; &gt;</type>
      <name>CAMEO_MAP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a65e65cb53c27a43e29db80775331f68f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>CLAN_FORM_MAP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a994b9eafaae9a74c9ece4fbf25f56c7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; std::set&lt; uint32_t &gt;, 10 &gt;</type>
      <name>CLAN_LEVEL_SKILLS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae69f8731978a39c71a76bc6c081655f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint16_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>DEMON_BOOK_BONUS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8915cd367284253244f5b56d96117054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; uint8_t &gt; &gt;</type>
      <name>DEMON_CRYSTALS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5f8af8eccf81eb7e9f9aeef33b71c2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; std::array&lt; uint32_t, 3 &gt;, 21 &gt;</type>
      <name>DEMON_FUSION_SKILLS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a73806b61266cb3defc5560e4969bd1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>DEMON_QUEST_XP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>adaf85dfcff0cacab3e46b5ef2636449a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>DEPO_MAP_DEMON</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a1adf17a613c3661d4cf4180fffb11fb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>DEPO_MAP_ITEM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aeac00220009aca14983cf58351510aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>DIGITALIZE_COOLDOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a94af4da263d5166a5dc918090d134f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint8_t, 2 &gt;</type>
      <name>DIGITALIZE_STAT_RATES</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a07827e46e240ea84b25a3ba7b4f9a140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ELEMENTAL_1_FLAEMIS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a7aac2a94ed7f49b62ef76a617119e7bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ELEMENTAL_2_AQUANS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac7fd7f9489c1e7743b1ec1ea46da05d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ELEMENTAL_3_AEROS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa23189c2c8673b096351f6e99116706c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ELEMENTAL_4_ERTHYS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae8b46be74827663cb95ab17a30fba7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::array&lt; int32_t, 3 &gt; &gt;</type>
      <name>EQUIP_MOD_EDIT_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5c6b6e1511517f0c718b31d4775d1345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::array&lt; int8_t, 2 &gt; &gt;</type>
      <name>FUSION_BOOST_SKILLS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a1f5647ddbf3f7cd262de37957d0d631a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, uint8_t &gt;</type>
      <name>FUSION_BOOST_STATUSES</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4464260446c61e385c43f8d567f90cf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ADD_CP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a883c5e5e92dfb635c10e6dc489d70b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ANNOUNCE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a376df59c9b1cda3d1b7923edd2c34d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_BAN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a21c8f37de150a493013524e50354c317</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_BATTLE_POINTS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ade77ae96fa6ade5a1668ac48401a14a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_BETHEL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af5b29d5f0d03c1b996def2324d1e7700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_COIN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4f4df3c875aed7c794ca03a0470920d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_CONTRACT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5930e5c65bc9f3c6532281880ab78385</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_COUNTER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a54e035a5559e401aa4fc0b067ab6281d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_COWRIE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a37dcefe98a729ed4b80b6a8ecb42c6f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_CRASH</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aca35528b710485ca4af11f4de64e0fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_DIGITALIZE_POINTS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0c8d6fad0af2c2d044288334cc1a69ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_EFFECT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaef911630342fd0907c8f87c07acbcae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ENCHANT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8aa1d1f768bf637d8634d7f97955ecf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ENEMY</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a75afdb7401e7a0db738ef7b00d4ca625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_EVENT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afb721ea384991557dcdf4dbe30120a32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_EXPERTISE_EXTEND</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af71ab9e84dd1e33e2ba00dd2c49a12c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_EXPERTISE_SET</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5323ec191fcb5629af291f9aaefd8d49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_FAMILIARITY</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae9f7ab79b094f42c9f05a2cc6e5d36a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_FLAG</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a01ff2e2ccf1b6f994bd6e1eaa879edaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_FUSION_GAUGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4798a2dd4d9f932b92dd2adbd78afc81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_GOTO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a55081fe7a7bf086ebea2738fe2ba6389</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_GRADE_POINTS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af5984f38d2cc4be11a78d66701b93cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_HELP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5fc45d03ebf90742eba134706de022ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_HOMEPOINT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aca6c8451bf1fba388356deed604a90be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_INSTANCE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8639b5e7ceb0ab927ebfd4aebd78e2f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ITEM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a523824c9ca549a89287ea68f846e2935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_KICK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4627eb2ad17944196634f48497f4de39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_KILL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a1582b73524769bc9bf59c0007df3edfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_LEVEL_UP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>adbef81430a25ddc2729a603d14522caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_LNC</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac945fd69e295105080a3bb759b637c9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_MAP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a9ed497a6cdfffb228eb5c5040552444c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ONLINE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aeee14c3dedd86208dd30a546ba6a69e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_PENALTY_RESET</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaca9f59d6ec765c9d180135900991a5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_PLUGIN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0e26622d5a9b6c64faf52f029b9ce178</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_POSITION</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaecb1244c181a8f4ef39f2a7e4012774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_POST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa0ea3e1e8f4a608f2d43a1d60805d910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_QUEST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2a61311fc81de5ae4280dd3573964565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_REPORTED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>abd1e74b7f0d6044da57032fbab16bc7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_RESOLVE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad8d2f6f4a4450570d9dbd309d750b973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_REUNION</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a49e625379217c3180cca94f6644be952</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SCRAP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad9c1aad68657a00410fe953d14066921</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SKILL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0b9a0d84880ceb76c8d330d690967531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SKILL_POINT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ab5f4b32cbc5785a57891c0d1f34455b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SLOT_ADD</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa28e5527bb969155599eea406cfa4426</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SOUL_POINTS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a7e9a76cc5bd3cfa0119fe365f121f09b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SPAWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afed4efefd35717043c86511abe8aa3b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SPEED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2bc817e8cae5bb1ad39d2fbc846c4ec3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SPIRIT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a3bfbe7bec36a64e31ca3a5ba4891613b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_SUPPORT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2af5001e8d73fb06244d6bb3be85d535</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_TICKER_MESSAGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5f4eb8b89520195ab2f90412052828d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_TITLE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a01ca7cb818f151912c836c7cc9eda98b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_TOKUSEI</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaa19d2bea911871c7851f37ffad39823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_VALUABLE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0cc8c286aecf22e8a3be3a24ee57ef4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_WORLD_TIME</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a11718fe793e1d674205a9d9ad0f0dbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_XP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6f7ea63416c0d40ca66876f671a784c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ZIOTITE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac329436be2030424cfee687aae9500fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GM_CMD_LVL_ZONE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a913eee495e5a9ff145a2a18de29cadfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_BALM_OF_LIFE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6bda83310c78adda4a74ef2eb08aeeda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_BALM_OF_LIFE_DEMON</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad45e032f248bd0f285f009946db7f251</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_KREUZ</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a80be36b45f120302ee5f296650991c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_MACCA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad0d654f53c22ccbbf8dbbaa37331c24e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_MACCA_NOTE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2bc92927dc235ae73b5d97e67b9682ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_MAG_PRESSER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a09824875dd6e340e048bdd5d52716670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_MAGNETITE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af0b125cb8712dcf19759c89d56755c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ITEM_RBLOODSTONE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2ed806b3cef35c43b4acd6223ce6c3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, uint8_t &gt;</type>
      <name>LEVELUP_STATUSES</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4275e0538a0e5db6d2002a2b5f10fb48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>MAX_MOVE_INCREASE_SUM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa81bd495ee555c5a6d01990fcda20bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_BARTER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a113255ab95963467910631a616b73741</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_BAZAAR</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a829679d378a76ccb47e79806e03adf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_COMP_SHOP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6c691c5832ca724ec07430c4354f8fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_CULTURE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8518dd1cbed81e3c22aedf44b79f5204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_DEMON_DEPO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac0453f778c0e40814fd84e6b85298a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_FUSION_KZ</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af6a98227eedb1fe44931f49c2b5548f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_ITEM_DEPO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a89205be035e6dffb795f752b1195b01d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_ITIME</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ab698106ac2e04d266b51161cfa2ce5a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_REPAIR_KZ</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa93fea9e3dd1cf319df4991eb1a3a269</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_SHOP_BUY</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4c34c72431d87db1e14a6bf554f051ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_SHOP_REPAIR</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8a9908c110ac07c3a87822839880c73a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_SHOP_SELL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a86858c0e08ee4e2fbcba7d25b7102a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_TRIFUSION</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac3bd3204c28f9804f8d6a3c9cb013133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_TRIFUSION_KZ</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a569969ae8035c59fa0e001a6d7a2e3a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_UB_RANKING</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a64f26e2a18d277ee6eb2abb7ddb8424e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MENU_WEB_GAME</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a407f7e4fe5665412b31a5429b14642b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MITAMA_1_ARAMITAMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0011e4ce5d8c563b797a4732c5d5ef52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MITAMA_2_NIGIMITAMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaade137513e46cc26a845b25fa825e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MITAMA_3_KUSHIMITAMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a751d95471d7717223b7c5ae7a8ad2c74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MITAMA_4_SAKIMITAMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af7f5d8e6a97db09a1662f21cfb59bb33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>MITAMA_SET_BOOST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaf14771dbba4f2c0c5f3b1ace1fd4817</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint16_t, int32_t &gt;</type>
      <name>QUEST_BONUS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6f535d0747f14e9d0fa65573e2d7bab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; std::list&lt; uint32_t &gt;, 4 &gt;</type>
      <name>RATE_SCALING_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afb69ac0b04a9fc497cebda08b7459aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>REUNION_EXTRACT_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a22ef50a0fdfeddf861067c2fb66b5fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>ROLLBACK_PG_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4ca92adbfdeefc3b99cb1879f397b5cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ABS_DAMAGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afad1b12207b4c33d7857959a21d25b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_CAMEO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a9b12c06adc885f9b9cce772e30507d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_CLAN_FORM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a3d12990138da65243e42bbfd7dbd093e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_CLOAK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5795566b22e972f2612b260fed78991c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_CULTURE_SLOT_UP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae323d28249216537c355f677cd13cf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_CULTURE_UP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>abaff97486e8c6bb5766c65f94d3dd710</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DCM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6d78f6489fde6e6e2303a547eef70165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DEMON_FUSION</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a307dd756d79fb16f96a042146951d69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DEMON_FUSION_EXECUTE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a504b7be2afe3a1c925fc4851d9bba9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DESPAWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a64a736195522af1f83bd20caca01170b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DESUMMON</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a81acdfe75f79f7021a2f96dfcf85b346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DIASPORA_QUAKE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af87386e8d2bd7ba08a70870803bb53ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DIGITALIZE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aad3b170e7b9a4eb4ddf6d7ab7f89a459</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DIGITALIZE_BREAK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac8b9d894d9dc8172bfe692edda0bdf74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DIGITALIZE_CANCEL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a063d04b2b4084a496d621768e8b80ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_DURABILITY_DOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a130723b4441c93580367b2b721f414c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EQUIP_ITEM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2e46f914d09aa9b9697ff97176fbd83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EQUIP_MOD_EDIT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a24ee3733bef291d86ccd632e87f8624e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ESTOMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5f8380eecd0690feee63511940290faf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EXPERT_CLASS_DOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae583ad54f33f3d78e0b641aaf32c389c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EXPERT_FORGET</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8c6f39ca41ffa308709550ec043c9896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EXPERT_FORGET_ALL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5b00155734bb94c762d91bc5d17eac1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_EXPERT_RANK_DOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4aea802c684cb7b6b650c00cdab80e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_FAM_UP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa1c965bf52a218e43dd48aecd9e1737a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_GEM_COST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a9295031b07628bd114976d9165ff4d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_GENDER_RESTRICTED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aea79e8e52e504b56e498d593866b730e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_HP_DEPENDENT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2c56d1b5618ba213a4028c38f0938f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_HP_MP_MIN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a7b53b262f6f2f81c86697fd475d66810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ITEM_FAM_UP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaae4533abbc7940676f1c559cd2ac8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_LIBERAMA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5861960c8cdf6dbe852c08e130f38fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_LNC_DAMAGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afa46fbe000fa9f1d408938dd3aa03a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MAX_DURABILITY_FIXED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5e64ef67a2d965d70569590fc2757345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MAX_DURABILITY_RANDOM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8557b1684d725e0f00814bca1fbc23a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MINION_DESPAWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a665756a167f2bb82d982e9aac172b8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MINION_SPAWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>adde51de2f46d39fecb331a6828784edf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MOOCH</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a99528cb7077f6fa0baad6c8f24d5303a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_MOUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a3f0a5d8849dc626411785368b4a6989e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_PIERCE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac54afb0bed9b4c2a5d84565487b8c9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_RANDOM_ITEM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a97891750b4278abe13c52c3885047236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_RANDOMIZE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a257f783688bb853b29d278c32f6bcbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_RESPEC</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ab1ea64a2099dd4961d8a5b9a16712f0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_REST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a9e33ba65998747b4d27966594e95988c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SLEEP_RESTRICTED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a7de81f3af523d7c7ec8913aae443f97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SPAWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa974ca7a74a25b2d5f8c6fa6e75168ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SPAWN_ZONE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae3533389f065fe5517d1eb76aacba938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SPECIAL_REQUEST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad04ac3eef082a32a54800fbe633c9bc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STAT_SUM_DAMAGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aece8b1ea0df4a146382a3bad75bfb88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_DIRECT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a6f7d2f32a0d7ef80476c077f4e983637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_LIMITED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2b016d1397620730959b022eddfa3c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_RANDOM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a61f88cae28cabce7de587cae25ee951e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_RANDOM2</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a951928a5efa7fe3195d561809f77b9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_RESTRICTED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aea2b1b9a9e2554d08d659b89e6889605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STATUS_SCALE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>adffcef5120c49489a12afeff72fa74e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_STORE_DEMON</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae924375c38a5bd34fe00598109cd6bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SUICIDE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>afc2a3c8016ca3e0f4178ae54829cd95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_SUMMON_DEMON</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a91477becedd7a58eabcc5a763bf2933e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_TAUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae54ff7300203945b9377cab2bcf87330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_TRAESTO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a8268ec62587b8b0c40eac5a16cdb449a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 3 &gt;</type>
      <name>SKILL_TRAESTO_ARCADIA</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a72216bc7a706b4ce75b94ae719f6989d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 3 &gt;</type>
      <name>SKILL_TRAESTO_DSHINJUKU</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0e6ec32a0fbf58779cae9547c17f682d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 3 &gt;</type>
      <name>SKILL_TRAESTO_KAKYOJO</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a30171985e192a4b5eb7ddbc6972c456d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 3 &gt;</type>
      <name>SKILL_TRAESTO_NAKANO_BDOMAIN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a35ca55ddcd538251dacadbe12b10680e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 3 &gt;</type>
      <name>SKILL_TRAESTO_SOUHONZAN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae0dee2d8b4b447de22597bae0617a5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_WARP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a03b03290eff7a038df749480134c8e66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_XP_PARTNER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>abc2b0290b664b5d4e52e7cd99be9ba1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_XP_SELF</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a4d26156bfd1fd57740c1e090ad68962a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ZONE_RESTRICTED</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a89201d71339f2bd35f380e0c99ffc1d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ZONE_RESTRICTED_ITEM</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a79372c8326d62e55709a41f23bdf257d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>SKILL_ZONE_TARGET_ALL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a23ed7319c1c86bb3aa22b854654f3479</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::array&lt; uint8_t, 2 &gt; &gt;</type>
      <name>SPIRIT_FUSION_BOOST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a013433ddc77ab911b38dc2bb6826e15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_BIKE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a811518cdeb8720b2b747bd7dd6fce851</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_CLOAK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a0b57418ff2be8e61d49d36e05b790be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>STATUS_COMP_TUNING</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aec6fc8f4d0a409e79a049f6dbc882a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_DEATH</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2d0482f267ec87c21e19784cda1ffdf6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_DEMON_ONLY</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aca324e72ebf251887340b5dbc03bed34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_DEMON_QUEST_ACTIVE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a9d2d011d6590b58859e42d745f6489de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 2 &gt;</type>
      <name>STATUS_DIGITALIZE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aca60b25186d6480a47db244bf86fdd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_DIGITALIZE_COOLDOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>abb2506d262c94a18afa604e727a7553c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_MOUNT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af7ddfdc8dc0a402dd447d5fc71c6f2a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_MOUNT_SUPER</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>af45a229da928f4d4b551fad26d438a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_REUNION_XP_SAVE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aeb17fef452a2e55bb6762c03c4de16da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_SLEEP</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac0a744ede43da5f2c29ebf7367e77d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_STEALTH</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a2177efb22efdb9ecbb1f8eb7b1485cb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_SUMMON_SYNC_1</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a51c53533833ab07edee29b7321c77610</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_SUMMON_SYNC_2</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a31c32fe5d68ac8d1c02f4603e06c0288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>STATUS_SUMMON_SYNC_3</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a32ea384a7d7b864c4b269ac78ef0357d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; uint32_t, 5 &gt;</type>
      <name>SYNTH_SKILLS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad70b737c4e25f3e95414aefdf7f8d0b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int8_t, uint32_t &gt;</type>
      <name>TEAM_STATUS_COOLDOWN</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ab3f1ef250e3b61b0470e1d428a7fac7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int8_t, std::list&lt; uint16_t &gt; &gt;</type>
      <name>TEAM_VALUABLES</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a56044f09001ea490a99fab1b868d33a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>TOKUSEI_BIKE_BOOST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ab1b8acebf3845a5f3d3dbd6272f224e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>TOKUSEI_MAGIC_CONTROL_COST</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac8edbdc42a609869a3b492c9ed612c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::pair&lt; uint8_t, uint32_t &gt; &gt;</type>
      <name>TRIFUSION_SPECIAL_DARK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a52a82dd68c0ba53f45759a63b414def1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; std::array&lt; uint32_t, 6 &gt;, 6 &gt;</type>
      <name>TRIFUSION_SPECIAL_ELEMENTAL</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a5a2c55a12067a640c3d689085890c908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>VA_ADD_ITEMS</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a410b50cb0e71d30b232b68a6a611af9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_DEMON_FORCE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae59cc1ff24db3ac4a62f02d43f7635af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_DEVIL_BOOK_V1</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aa7b8abf199ec2b471bdc7a19e570545f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_DEVIL_BOOK_V2</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ac4e11f72dae30232b01372b39e5cf2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_DIGITALIZE_LV1</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a633eb0cfa7556d62ca76e9074b6dd785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_DIGITALIZE_LV2</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ad7e36baa20210dcedebfdd92fcfe0025</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_FUSION_GAUGE</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>aaab0920c818015a0f95cc8cac566e5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>VALUABLE_MATERIAL_TANK</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>ae0121475556c2ef4220ffbc288420129</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ZONE_DEFAULT</name>
      <anchorfile>structlibcomp_1_1ServerConstants_1_1Data.html</anchorfile>
      <anchor>a53afee98122325b364015cfb262e095e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::ServerDataManager</name>
    <filename>classlibcomp_1_1ServerDataManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ServerDataManager</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ac840d7318d57f08deaf0ff8a7f5a9821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ServerDataManager</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ac74b9ea5a87f82a8dbaa0c688f162d3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AppendPendingDrops</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a1b90b8e550230ebe94c9783a192cec71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ApplyZonePartial</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a201f972c2c438335f79f24057fddf8a7</anchor>
      <arglist>(std::shared_ptr&lt; objects::ServerZone &gt; zone, uint32_t partialID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExistsInInstance</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a08a42504e715427a02f24e9e44e93598</anchor>
      <arglist>(uint32_t instanceID, uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::AILogicGroup &gt;</type>
      <name>GetAILogicGroup</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ace83ba01e0881c00a9161105b9e3f35a</anchor>
      <arglist>(uint16_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ServerScript &gt;</type>
      <name>GetAIScript</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>aed7ee5e210808f27a43b61d9af36b648</anchor>
      <arglist>(const libcomp::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>GetAllZoneIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a60beb661d0ea68e99d3d4db3e80ea21c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::set&lt; uint32_t &gt;</type>
      <name>GetAllZoneInstanceIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a21ba10bad3070f8523f9ecb19575c8e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>GetCompShopIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a929938fd4eb0598c3970a5ec130b87b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::DemonFamiliarityType &gt;</type>
      <name>GetDemonFamiliarityTypeData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a9fb0c6e98ced04d9eccdba60f3d24a21</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::DemonPresent &gt;</type>
      <name>GetDemonPresentData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>af07c17c7c7ef6bfae9775f9b504bcb1c</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::DemonQuestReward &gt; &gt;</type>
      <name>GetDemonQuestRewardData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a4201c24cbe840acada33edbd18f4d416</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::DropSet &gt;</type>
      <name>GetDropSetData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a8e82560f82617414da8dd0f38268b54f</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::Event &gt;</type>
      <name>GetEventData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a9e4ebfac7d159a01f7b868830e00e116</anchor>
      <arglist>(const libcomp::String &amp;id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::pair&lt; uint32_t, uint32_t &gt; &gt;</type>
      <name>GetFieldZoneIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a3eaba424e6f3e493fcbe206769ff07cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::DropSet &gt;</type>
      <name>GetGiftDropSetData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a7f3946c2217935e4be3098ca53ea5615</anchor>
      <arglist>(uint32_t giftBoxID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ServerScript &gt;</type>
      <name>GetScript</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a8e1e0cdbc21fa208af04009b4da37b21</anchor>
      <arglist>(const libcomp::String &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerShop &gt;</type>
      <name>GetShopData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ad13cf38338e11dfe63e76aad3289ec1f</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetStandardPvPVariantIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ac50038954f752fc4d2e1e03fa527a615</anchor>
      <arglist>(uint8_t type) const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZone &gt;</type>
      <name>GetZoneData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a035d28ba204c380e004359769aca6e3f</anchor>
      <arglist>(uint32_t id, uint32_t dynamicMapID, bool applyPartials=false, std::set&lt; uint32_t &gt; extraPartialIDs={})</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZoneInstance &gt;</type>
      <name>GetZoneInstanceData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a39f97f7a768c0511cefd18d025ac62a0</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZoneInstanceVariant &gt;</type>
      <name>GetZoneInstanceVariantData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a7d9f90847c95908058465cc7c0afd3b7</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::ServerZonePartial &gt;</type>
      <name>GetZonePartialData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a9162df8d9096941f780311e285c32a9a</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LoadData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a5cc28e8625dbb8854488758eb7e9ed12</anchor>
      <arglist>(DataStore *pDataStore, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ServerScript &gt; &gt;</type>
      <name>LoadScripts</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a6bab694abf9f2877329a9591762931a6</anchor>
      <arglist>(DataStore *pDataStore, const libcomp::String &amp;path, bool &amp;success, bool store=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>VerifyPvPInstance</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a1ed05a866fa1a082cbc23bda2704bb41</anchor>
      <arglist>(uint32_t instanceID, DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ApplyZonePartial</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a1c7c9c3fc45edd5cce0317a5e974204b</anchor>
      <arglist>(std::shared_ptr&lt; objects::ServerZone &gt; zone, const std::shared_ptr&lt; objects::ServerZonePartial &gt; &amp;partial, bool positionReplace)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetObjectByID</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a168155d57306bddf37c0468786fe2cb4</anchor>
      <arglist>(K id, std::unordered_map&lt; K, std::shared_ptr&lt; T &gt;&gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadObject</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a7587fa4e6f1378b1cf4db18fae43c263</anchor>
      <arglist>(const tinyxml2::XMLDocument &amp;doc, const tinyxml2::XMLElement *objNode, DefinitionManager *definitionManager=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadObjects</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>abd2a6c6f911853b07d473d77dea0be37</anchor>
      <arglist>(gsl::not_null&lt; DataStore * &gt; pDataStore, const libcomp::String &amp;datastorePath, DefinitionManager *definitionManager, bool recursive, bool fileOrPath)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadObjectsFromFile</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a86a5dc255c25bb579391e67a83e2e4d1</anchor>
      <arglist>(gsl::not_null&lt; DataStore * &gt; pDataStore, const libcomp::String &amp;filePath, DefinitionManager *definitionManager=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadScript</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a16dbc4dd9b2f23203cc75f43dbce8bb7</anchor>
      <arglist>(const libcomp::String &amp;path, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadScripts</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ad68a7d866f571901884bef06210b2721</anchor>
      <arglist>(gsl::not_null&lt; DataStore * &gt; pDataStore, const libcomp::String &amp;datastorePath, std::function&lt; bool(ServerDataManager &amp;, const libcomp::String &amp;, const libcomp::String &amp;)&gt; handler)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>TriggerIsAutoContext</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a076125fbca9406923f84e00cccc9c4a2</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerZoneTrigger &gt; &amp;trigger)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ValidateActions</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a5bebee6fe575924e9ea0f8148f6a9fef</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;actions, const libcomp::String &amp;source, bool autoContext, bool inEvent=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::shared_ptr&lt; objects::AILogicGroup &gt; &gt;</type>
      <name>mAILogicGroups</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>af9d3d3e1f1cc58b28de0f883c099512b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ServerScript &gt; &gt;</type>
      <name>mAIScripts</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a8af0c8d0106ba4a1a4d3326c89c050d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>mCompShopIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a9d54b537efdcec938a58b621e8f4fb06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::DemonFamiliarityType &gt; &gt;</type>
      <name>mDemonFamiliarityTypeData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>abf44c1c1bacefc20f7e8e8e701fcf091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::DemonPresent &gt; &gt;</type>
      <name>mDemonPresentData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>aecaab5cd7cebe9683af87bdd65d2d27d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::DemonQuestReward &gt; &gt;</type>
      <name>mDemonQuestRewardData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a151458aea2400d94d7b7349684b6208f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::DropSet &gt; &gt;</type>
      <name>mDropSetData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a604356cb30dc64a7b20136fdebdb99d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; objects::Event &gt; &gt;</type>
      <name>mEventData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a230f7ac4a101b883b2dc4dc181b736a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::pair&lt; uint32_t, uint32_t &gt; &gt;</type>
      <name>mFieldZoneIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>aafa569619cb6e1e54e47daeb099b0c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint32_t &gt;</type>
      <name>mGiftDropSetLookup</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a6a5fa19b7a2c9f446b4e5250755930b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt; &gt; &gt;</type>
      <name>mPendingMergeDrops</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a8632fcf3447728a94633531d35e911ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ServerScript &gt; &gt;</type>
      <name>mScripts</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a7a812bae6904fb635a631be4cebdde35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ServerShop &gt; &gt;</type>
      <name>mShopData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>ab3c9b3cbf6ecaaf940c76de68de70ed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mStandardPvPVariantIDs</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a1d942ecf100272a3f618bc59e3bbf51a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ServerZone &gt; &gt; &gt;</type>
      <name>mZoneData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a1eade8f79b7c2043b4849d01291327ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ServerZoneInstance &gt; &gt;</type>
      <name>mZoneInstanceData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a0c8d5e4d9c3a8591c334606ffb7f6958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ServerZoneInstanceVariant &gt; &gt;</type>
      <name>mZoneInstanceVariantData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>aa48b24f644640b86609d743f4b0b08a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::ServerZonePartial &gt; &gt;</type>
      <name>mZonePartialData</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>aa2f64074c9c0759303cfab494a400fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mZonePartialMap</name>
      <anchorfile>classlibcomp_1_1ServerDataManager.html</anchorfile>
      <anchor>a9ab916ac07de4a93054bf3439160cb13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::ServerScript</name>
    <filename>structlibcomp_1_1ServerScript.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>Instantiated</name>
      <anchorfile>structlibcomp_1_1ServerScript.html</anchorfile>
      <anchor>ab65b02c5396998a268621a86485f944c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>Name</name>
      <anchorfile>structlibcomp_1_1ServerScript.html</anchorfile>
      <anchor>ab2f1cd7d64911543878de50842666ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>Path</name>
      <anchorfile>structlibcomp_1_1ServerScript.html</anchorfile>
      <anchor>a6575d5cdfc914e7fc143851b897ff1c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>Source</name>
      <anchorfile>structlibcomp_1_1ServerScript.html</anchorfile>
      <anchor>a93cc79c1c7c12161d3953cb302d8cd39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>Type</name>
      <anchorfile>structlibcomp_1_1ServerScript.html</anchorfile>
      <anchor>a5aedc08d53a7d5c2637da56c3309f864</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::SpawnThread</name>
    <filename>classlibcomp_1_1SpawnThread.html</filename>
    <member kind="function">
      <type></type>
      <name>SpawnThread</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a9ba340bcb38908f82d6526e781222351</anchor>
      <arglist>(DayCare *pJuvy, bool printDetails=true, std::function&lt; void()&gt; onDetain=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpawnThread</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a26d4b2b3a83f762dfaf6256f7ff55d29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueChild</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>aa44c0854796acec9a403ca2d6bc35d21</anchor>
      <arglist>(const std::shared_ptr&lt; Child &gt; &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestExit</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>adcce3ac2fb0828d1c50934b430f6cc4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a1d6bc11e7122ed650128498d4deaf58b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WaitForExit</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a0cb7c19bf280d2dd7233fbdd08c5ed83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DayCare *</type>
      <name>mDayCare</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>aaa96b0c2246b610ce76fe9d910075ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::function&lt; void()&gt;</type>
      <name>mOnDetain</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a36cd6a7bf62ddf30f38294486519d9e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mPrintDetails</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>add96dd22f9da7c7095b28794e84bb09d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::MessageQueue&lt; std::shared_ptr&lt; Child &gt; &gt;</type>
      <name>mRestartQueue</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>aa046d9e84ae4ec8ce0e67a40fd3cb8ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread *</type>
      <name>mThread</name>
      <anchorfile>classlibcomp_1_1SpawnThread.html</anchorfile>
      <anchor>a72519479669731b814b57492bdd5f93e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::String</name>
    <filename>classlibcomp_1_1String.html</filename>
    <class kind="class">String::StringData</class>
    <member kind="typedef">
      <type>uint32_t</type>
      <name>CodePoint</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2e168f8054dc27fd2237f81ce1390145</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a8a7ef356e05eb9b1ea1ab518baee3095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>afc158dffcdf56e601bd640cbacdfcd3c</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aabdcd3850250e2abd8f1247fc93ef729</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a70d3cf01c15ee023b4cd8ac504431384</anchor>
      <arglist>(const char *szString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ad04527db4ee48042c2b25c1881c687be</anchor>
      <arglist>(const char *szString, size_t bytes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a0cdb6714f2018dc2dd9aff96f9b4dd17</anchor>
      <arglist>(const char *szString, size_t offset, size_t bytes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a1e108310dec47c445c1068975cc3515d</anchor>
      <arglist>(size_t bytes, char character)</arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>Append</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>afaa71f71fb76ffcf02156aab746db7d5</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a8ffc97ef5bf9121723545168e5dbb4ca</anchor>
      <arglist>(const String &amp;a) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ad4a7ff1507d66b5fd8fa6c4cee7d1fb7</anchor>
      <arglist>(int16_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>adf44bd07029e223cb438821541940399</anchor>
      <arglist>(uint16_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a4a4f0b005bfe203b9fdf6a29ee0d18f3</anchor>
      <arglist>(int32_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a3b29dce6c48b3352a5d5b0d0148c86ca</anchor>
      <arglist>(uint32_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a10584e191f7cfa62a1a650d48c697afa</anchor>
      <arglist>(int64_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2a7464d46df45d68f35155b411b7f4dc</anchor>
      <arglist>(uint64_t a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>adcb9fdcf12977b6fc2d25e3a1d021191</anchor>
      <arglist>(float a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Arg</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ac7eeba6aca754fc457c73c2e61031cd8</anchor>
      <arglist>(double a, int fieldWidth=0, int base=10, char fillChar= &apos; &apos;)</arglist>
    </member>
    <member kind="function">
      <type>CodePoint</type>
      <name>At</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ab0a5da19ed3b10dc36c535674081bf8f</anchor>
      <arglist>(size_t position) const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>C</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a45b79da926d19d372c8609c4ba82b4e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Clear</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a35bb6b54b6a3bd6b9e9ebf5c6a35eaa6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Contains</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a7468107e3817b7faee67d4cc1a183458</anchor>
      <arglist>(const String &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>Data</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aa72bdffec4535c186c8dcadbfee673b3</anchor>
      <arglist>(bool nullTerminate=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsEmpty</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2374550eaa6540c7f9fe58c389a27ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Left</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2a75fa643c649efdfc7b5741a5286940</anchor>
      <arglist>(size_t length) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>LeftJustified</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>abd9b7bfabd74b8929793899403bc3924</anchor>
      <arglist>(size_t width, char fill= &apos; &apos;, bool truncate=false) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>LeftOf</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>abd1396df14cc8325047ad8a6e359a2dc</anchor>
      <arglist>(const String &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>LeftTrimmed</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a57f9389c46304eaf04595819ef587f3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Length</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a4e8fb512730c14bb1ff9344df6184f32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Matches</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>abe0230746f3e7f3bd5bc0c5dff61f069</anchor>
      <arglist>(const libcomp::String &amp;expression) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Matches</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>adfb4e9cd54471a8edfb9916678228f8a</anchor>
      <arglist>(const libcomp::String &amp;expression, std::vector&lt; libcomp::String &gt; &amp;matches) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Mid</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a305d79da2ba9bb7fe1d27d189a60e4f8</anchor>
      <arglist>(size_t position, size_t count=0) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a4a6d958eeeb3acd855dac53462c1e42a</anchor>
      <arglist>(const char *szString) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ad3124ecb5b582bac4bffaadbd5d7b828</anchor>
      <arglist>(const std::string &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a3f789d339d7e6be1edaeb1e3b7e9e420</anchor>
      <arglist>(const String &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>operator+=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ab84728b14cac3bc213351c8ae8fb3364</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ab1b74f3da2a810718b97e523388b3fc4</anchor>
      <arglist>(const char *szString) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a1d55a93994c1d9e18ad2c88874066481</anchor>
      <arglist>(const std::string &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>abc87daa85235a1fa0334d5aad76af032</anchor>
      <arglist>(const String &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>String &amp;</type>
      <name>Prepend</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ae8705117beb1d85d790151516e9db00e</anchor>
      <arglist>(const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Replace</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>acc8bf927b67f784ccfe1b6772cdf8a08</anchor>
      <arglist>(const String &amp;search, const String &amp;replace) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Right</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>acce2479510266ceed3d428f21bed6d0a</anchor>
      <arglist>(size_t length) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>RightJustified</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a32c34ff9793f215158d3212326e40383</anchor>
      <arglist>(size_t width, char fill= &apos; &apos;, bool truncate=false) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>RightOf</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a480f8981ed0907d0e91c3b557bed1f3b</anchor>
      <arglist>(const String &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>RightTrimmed</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a55bf8d679ea8b3d5859cb6c19142197a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Size</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ad890f010a762c9f7a5c0c1b34661e0f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; String &gt;</type>
      <name>Split</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a6ba6dc4f0d21634f10e48270c594fed7</anchor>
      <arglist>(const String &amp;delimiter) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ToDecimal</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a9e16562ef5f579438e618fc7f6f0c575</anchor>
      <arglist>(bool *pOK=nullptr) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>ToInteger</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>af189b0634846030ec48fd0ac7134b252</anchor>
      <arglist>(bool *pOK=nullptr) const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ToLower</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2ea8e48b75f4e32e62b171f11c67932c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>ToUpper</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a88eefc90e6a540f758c006ed52a23633</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>ToUtf8</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a0f33fab6dbdf35a219ec5af90b8d6a5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>Trimmed</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a99c2b7a21a54b91b06126c5b1d4fd076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Truncate</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a1d912ae1803d800a523f3dd9295edd36</anchor>
      <arglist>(size_t position)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>FromCodePoint</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a467b3ada2cefef1b327d467c1b9eb168</anchor>
      <arglist>(CodePoint cp)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsReportingBadArguments</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a92ec59c14b520506a2ebbdd7e7230dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static String</type>
      <name>Join</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ad4eaa292f4b482094009ec896a646c77</anchor>
      <arglist>(const std::list&lt; String &gt; &amp;strings, const String &amp;delimiter)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SetBadArgumentReporting</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aba8caf29c46f9cfb9bfcd14e485a325f</anchor>
      <arglist>(bool enabled)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>String</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a67e795f975de382e5ae2b41c21ea7849</anchor>
      <arglist>(StringData *pData)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>CalculateLength</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aa5b0b26a4234a51a4601e42003fee34e</anchor>
      <arglist>(const std::string &amp;str) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Detatch</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aeb163e1a307372b35f8363f62a76217b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; StringData &gt;</type>
      <name>d</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ac3b525b3949565e201b636fc8f513afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>mBadArgumentReporting</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a87d67b1a0083feb1ff93a85798aa5537</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a2fcfff723f333066f1296d17cd01f4de</anchor>
      <arglist>(const char *szString, const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ae8b1c5c8a85ff68a6b6ccbb4fed8d7e0</anchor>
      <arglist>(const std::string &amp;str, const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>const String</type>
      <name>operator+</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>ac7ed7097a8f45d0db575d0c8b056f76d</anchor>
      <arglist>(const String &amp;a, const String &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a38e136fdbb1733da9e3843c0a9397c70</anchor>
      <arglist>(const libcomp::String &amp;a, const libcomp::String &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aef0e96aa2c28064d8dbc6d0465aeed40</anchor>
      <arglist>(::std::ostream &amp;os, const String &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>aaf1ffe8aba3c2d5bdee6aeefb7a464d7</anchor>
      <arglist>(const char *szString, const String &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classlibcomp_1_1String.html</anchorfile>
      <anchor>a079e6b867d8a7fab41c3a18d05c50550</anchor>
      <arglist>(const std::string &amp;str, const String &amp;other)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>String::StringData</name>
    <filename>classString_1_1StringData.html</filename>
    <member kind="function">
      <type></type>
      <name>StringData</name>
      <anchorfile>classString_1_1StringData.html</anchorfile>
      <anchor>a94c0ec5e6ce254b633195dd2aa11debf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringData</name>
      <anchorfile>classString_1_1StringData.html</anchorfile>
      <anchor>a07ffc68704cf9b5627d0b56e4c383736</anchor>
      <arglist>(const StringData &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringData</name>
      <anchorfile>classString_1_1StringData.html</anchorfile>
      <anchor>a49e5887fc5d8cf50026168cd10c2a61c</anchor>
      <arglist>(const std::string &amp;str, size_t length)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mLength</name>
      <anchorfile>classString_1_1StringData.html</anchorfile>
      <anchor>ab5ea797061ecd11bf45ba19ae8d6f2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>mString</name>
      <anchorfile>classString_1_1StringData.html</anchorfile>
      <anchor>ae59103cbc400e5f770e45b2bd6bf095e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::TcpConnection</name>
    <filename>classlibcomp_1_1TcpConnection.html</filename>
    <member kind="function">
      <type></type>
      <name>TcpConnection</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a202263897dccda924f441cd0ad3a5a00</anchor>
      <arglist>(asio::io_service &amp;io_service)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TcpConnection</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a6703773f79bba9634465ffb4a10c5173</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TcpConnection</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a57f0a40516d8bc7f6c83de77b730cf29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Close</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a4a3d80f5ced8ab19290e84b9f0d953b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ConnectionSuccess</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a85eae081e47701b7e0253bf08c954e75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::list&lt; ReadOnlyPacket &gt;</type>
      <name>GetCombinedPackets</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a26fdba69213ffa4959d7741218287224</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PacketReceived</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a518464231add05c6b1cbe4bfcca80e4e</anchor>
      <arglist>(Packet &amp;packet)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>PreparePackets</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a9b448d6c6bd858bf4e8f0c71f8e5ed27</anchor>
      <arglist>(std::list&lt; ReadOnlyPacket &gt; &amp;packets)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>SocketError</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>acdf4cf46c2ac2768f2575efdaa003219</anchor>
      <arglist>(const String &amp;errorMessage=String())</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>FlushOutgoingInside</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ad1027d3e0f1579f8b770e6928e148ce5</anchor>
      <arglist>(bool closeConnection=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleConnection</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a3b0a07bed6ab451b27744d32d5a612da</anchor>
      <arglist>(asio::error_code errorCode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendNextPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a7c7662b90fdb57d9d8968c9943157078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mName</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a469bdf5434c60f425134a9b3d2281160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Packet</type>
      <name>mReceivedPacket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>ad4c9fa48420cf09423e1db2a10f42931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mRemoteAddress</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>aa68802f4ab623b66914f7ad5ca3d495d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Role_t</type>
      <name>mRole</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a3481e314c9ecfe4081494a4a95cc2403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>asio::ip::tcp::socket</type>
      <name>mSocket</name>
      <anchorfile>classlibcomp_1_1TcpConnection.html</anchorfile>
      <anchor>a7f4e42c45bbb4117b27384be24250036</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::TcpServer</name>
    <filename>classlibcomp_1_1TcpServer.html</filename>
    <member kind="function">
      <type></type>
      <name>TcpServer</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>ac2f1934b662c659be54e6c54ab5e836b</anchor>
      <arglist>(const String &amp;listenAddress, uint16_t port)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TcpServer</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a728a9e31c53cf86887f1f6149b1c46dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ServerReady</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a7078e7c1394ba269348d03f1ab716078</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual int</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a927c8c1b17bb5a6832802ebc3b251d12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>asio::ip::tcp::acceptor</type>
      <name>mAcceptor</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a2da2e4e22dfe6b90828f6a25d12b5273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>mDiffieHellman</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>aac23bf40ab800922500ae0ffb9ec7c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mListenAddress</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a056a629a6e9ba9128660951522d1b085</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mPort</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a7e78313f5e433314fb93cd6cfcdbf705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread</type>
      <name>mServiceThread</name>
      <anchorfile>classlibcomp_1_1TcpServer.html</anchorfile>
      <anchor>a223d90e890a7c0c52cdd6da2822b4a16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::TimerEvent</name>
    <filename>classlibcomp_1_1TimerEvent.html</filename>
    <member kind="function" protection="protected">
      <type></type>
      <name>TimerEvent</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a011f911cb6bb7766090fc2a0f62728bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~TimerEvent</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a54b6f956609dde77a2a8ee9f0ada6213</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIsPeriodic</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>ad90d781734e67c1c71f86d58331f79e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::Message::Execute *</type>
      <name>msg</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a3f93b0a8e9b29ca6421593fa9e2d06b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::milliseconds</type>
      <name>period</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a0c65a71930b338b9a22dccd1a8219b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::chrono::steady_clock::time_point</type>
      <name>time</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a065ba655ad0912df48252f48aa3f1f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimerEventComp</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>abfced4dab8765ade38f1e03789d1aa38</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>TimerManager</name>
      <anchorfile>classlibcomp_1_1TimerEvent.html</anchorfile>
      <anchor>a8f762e12639d620eb0f10068e6ab6521</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::TimerEventComp</name>
    <filename>classlibcomp_1_1TimerEventComp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classlibcomp_1_1TimerEventComp.html</anchorfile>
      <anchor>af1b1a3f3a169b051d28b6d693c31d73a</anchor>
      <arglist>(const TimerEvent *lhs, const TimerEvent *rhs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::TimerManager</name>
    <filename>classlibcomp_1_1TimerManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TimerManager</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a42d72899be00f29c69df6001dfa7d766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimerManager</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>ae9676f2b9a1ed9b1ffd63f204eeccec6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a28a1b35e84c3537008be4d2ed13fc30a</anchor>
      <arglist>(TimerEvent *pEvent)</arglist>
    </member>
    <member kind="function">
      <type>TimerEvent *</type>
      <name>RegisterEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a9c1a2a948ed4f3c081c320ffb12c8c9c</anchor>
      <arglist>(const std::chrono::steady_clock::time_point &amp;time, libcomp::Message::Execute *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>TimerEvent *</type>
      <name>RegisterPeriodicEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a7c31f53e346d9a6f984aa32b0d50ec58</anchor>
      <arglist>(const std::chrono::milliseconds &amp;period, libcomp::Message::Execute *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>TimerEvent *</type>
      <name>ScheduleEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>aea3af86e076e54f58378dea794b91c6e</anchor>
      <arglist>(const std::chrono::steady_clock::time_point &amp;time, Function &amp;&amp;f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>TimerEvent *</type>
      <name>ScheduleEventIn</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>ac9f698e22c74b68a73918bca23b3490d</anchor>
      <arglist>(int seconds, Function &amp;&amp;f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>TimerEvent *</type>
      <name>SchedulePeriodicEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a40e6ccd110f9524d650398d12964eccb</anchor>
      <arglist>(const std::chrono::milliseconds &amp;period, Function &amp;&amp;f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessEvents</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>aaa0e945f1fdd500edc38667d77175083</anchor>
      <arglist>(std::unique_lock&lt; std::mutex &gt; &amp;lock)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WaitForEvent</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>ae4922d05a0144e3f7e6b5353b2990074</anchor>
      <arglist>(std::unique_lock&lt; std::mutex &gt; &amp;lock)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::condition_variable</type>
      <name>mEventCondition</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>ad04ef2c531f8bb768c3c5f74e42812bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mEventLock</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a15b8dcd7aa104f78490217ec6d4c6546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::multiset&lt; TimerEvent *, TimerEventComp &gt;</type>
      <name>mEvents</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a36c78087fb8754ed2e94cb205ff29e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volatile bool</type>
      <name>mProcessingEvents</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a75a79d84f8e92e4667143b0e4a7ff02a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>volatile bool</type>
      <name>mRunning</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a016ef814a4b39e955e73d7aeee086209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread</type>
      <name>mRunThread</name>
      <anchorfile>classlibcomp_1_1TimerManager.html</anchorfile>
      <anchor>a6b4363980119a1a16a196cebba8481be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::VectorStream</name>
    <filename>classlibcomp_1_1VectorStream.html</filename>
    <templarg>CharT</templarg>
    <templarg>TraitsT</templarg>
    <member kind="function">
      <type></type>
      <name>VectorStream</name>
      <anchorfile>classlibcomp_1_1VectorStream.html</anchorfile>
      <anchor>a766723f8ae8dcb7d388832d1de9c0374</anchor>
      <arglist>(std::vector&lt; CharT &gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::basic_streambuf&lt; CharT, TraitsT &gt;::int_type</type>
      <name>overflow</name>
      <anchorfile>classlibcomp_1_1VectorStream.html</anchorfile>
      <anchor>aa7daeeabf1b0f47e957b47bc905c3bbd</anchor>
      <arglist>(typename std::basic_streambuf&lt; CharT, TraitsT &gt;::int_type c=std::basic_streambuf&lt; CharT, TraitsT &gt;::traits_type::eof())</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::basic_streambuf&lt; CharT, TraitsT &gt;::pos_type</type>
      <name>seekoff</name>
      <anchorfile>classlibcomp_1_1VectorStream.html</anchorfile>
      <anchor>a609c05c44036cc8facdc840c4f749f89</anchor>
      <arglist>(typename std::basic_streambuf&lt; CharT, TraitsT &gt;::off_type off, std::ios_base::seekdir dir, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::basic_streambuf&lt; CharT, TraitsT &gt;::pos_type</type>
      <name>seekpos</name>
      <anchorfile>classlibcomp_1_1VectorStream.html</anchorfile>
      <anchor>ac5e152fd36ff925affcbbbedd8f1299b</anchor>
      <arglist>(typename std::basic_streambuf&lt; CharT, TraitsT &gt;::pos_type pos, std::ios_base::openmode which=std::ios_base::in|std::ios_base::out)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; CharT &gt; &amp;</type>
      <name>mData</name>
      <anchorfile>classlibcomp_1_1VectorStream.html</anchorfile>
      <anchor>ad73d0f324f078048517c0852db1a9bb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::WatchThread</name>
    <filename>classlibcomp_1_1WatchThread.html</filename>
    <member kind="function">
      <type></type>
      <name>WatchThread</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>af5506a81a617b252da328a12bf5180d2</anchor>
      <arglist>(DayCare *pJuvy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~WatchThread</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>a997d929a3fc9426fa978baf3efb47f58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>a4c83c1a52a51e925ad06508dd9aa05b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>WaitForExit</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>ae597bb96d6ed33a4d1e5dc90ddd4f754</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DayCare *</type>
      <name>mDayCare</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>a32f4e3e85a4b7592125e5f197e83d255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread *</type>
      <name>mThread</name>
      <anchorfile>classlibcomp_1_1WatchThread.html</anchorfile>
      <anchor>abaf537a514908def3f5ad901e0d34ce9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Worker</name>
    <filename>classlibcomp_1_1Worker.html</filename>
    <member kind="function">
      <type></type>
      <name>Worker</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a3754817df06ffe220f7f0d903c78ccac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Worker</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>aa8e4543ef1e93fd9d884269ba30c5bfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddManager</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a12989e593f18370720de5ed0971cf333</anchor>
      <arglist>(const std::shared_ptr&lt; Manager &gt; &amp;manager)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>AssignmentCount</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a276be3cd58c464216cdb0883c523fd38</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteInWorker</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>ad348bd75350967a68b2474159b93752e</anchor>
      <arglist>(Function &amp;&amp;f, Args &amp;&amp;...args) const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::MessageQueue&lt; libcomp::Message::Message * &gt; &gt;</type>
      <name>GetMessageQueue</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a8945242ba8f5a7f8748b146e01691728</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetWorkerName</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a1bc5272b35e588101f5db5869be38b1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRunning</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a232fa1ff6a81a81850fb12261660ab0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Join</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>aa78486b3e33d26fda8488d8a2a38d008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveAllManagers</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a508cc95abb6ed91e4209db6a08a6961b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>af12c6851bd6cb637a8fd6acabc2ed0d6</anchor>
      <arglist>(libcomp::MessageQueue&lt; libcomp::Message::Message * &gt; *pMessageQueue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextWorker</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a0ea0f4364d07f09b915ef58c52341e47</anchor>
      <arglist>(const std::weak_ptr&lt; Worker &gt; &amp;nextWorker)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Shutdown</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a4314153bde23f9f858ffd6a7041be5e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a128e7629843e40e2cc306a5e466aff64</anchor>
      <arglist>(const libcomp::String &amp;name, bool blocking=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>Cleanup</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>af3c567557c56ccacb3fd731e2a87fc33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>HandleMessage</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a258ffc8147ca1c0469488b7789121018</anchor>
      <arglist>(libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EnumMultiMap&lt; Message::MessageType, std::shared_ptr&lt; Manager &gt; &gt;</type>
      <name>mManagers</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a339d755c2c1859080e5087a4e50b2212</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libcomp::MessageQueue&lt; libcomp::Message::Message * &gt; &gt;</type>
      <name>mMessageQueue</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>ac4227ee1aa889864e744287b75594376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; Worker &gt;</type>
      <name>mNextWorker</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a7c6939513210a6fb1f875627f104c92d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mRunning</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>a65b685f2accfc247655d6d997d14bf58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::thread *</type>
      <name>mThread</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>af077156f697a906e9c7040734e39c935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mWorkerName</name>
      <anchorfile>classlibcomp_1_1Worker.html</anchorfile>
      <anchor>abafc79ce83ac739b36ed742b36e42186</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Compress</name>
    <filename>namespacelibcomp_1_1Compress.html</filename>
    <member kind="function">
      <type>int32_t</type>
      <name>Compress</name>
      <anchorfile>namespacelibcomp_1_1Compress.html</anchorfile>
      <anchor>ad9f8ecb356f874ef3ee2518234e12b8a</anchor>
      <arglist>(void *pIn, void *pOut, int32_t inSize, int32_t outSize, int32_t compressionLevel=-1)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>Decompress</name>
      <anchorfile>namespacelibcomp_1_1Compress.html</anchorfile>
      <anchor>ae8c3838cad938cfcad0da54ebea5e8e7</anchor>
      <arglist>(void *pIn, void *pOut, int32_t inSize, int32_t outSize)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Config</name>
    <filename>namespacelibcomp_1_1Config.html</filename>
    <member kind="function">
      <type>void</type>
      <name>LogVersion</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a16324002acea156d766260a7df69b041</anchor>
      <arglist>(const char *szServerName)</arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_IV</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a842abe352138c42cd859e9f4a9aa0ea7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_KEY</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a9365572eacd52fb8db65d878c7a744c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const char *</type>
      <name>ENCRYPTED_FILE_MAGIC</name>
      <anchorfile>namespacelibcomp_1_1Config.html</anchorfile>
      <anchor>a475501f783db93c1fee5fd471b45420a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Convert</name>
    <filename>namespacelibcomp_1_1Convert.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Encoding_t</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_UTF8</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a439ee39e30ecd2cb6dfec4020697eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_CP932</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a742723f1c461b21f8f2bb7b22a5daa9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>ENCODING_CP1252</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>acf55d81b176d67bdfa666b3248c16ac4a6300d588c68110542a73631d1f66589c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>FromEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>af3da32a9f8d267a0728a6c54985cf70a</anchor>
      <arglist>(Encoding_t encoding, const char *szString, int size=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>FromEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>a7f8ae52e500110bcfaa1fa94c762d3b1</anchor>
      <arglist>(Encoding_t encoding, const std::vector&lt; char &gt; &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>SizeEncoded</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>a41f45b500fe7c0e55bf4176eb482b1ae</anchor>
      <arglist>(Encoding_t encoding, const String &amp;str, size_t align=0)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>ToEncoding</name>
      <anchorfile>namespacelibcomp_1_1Convert.html</anchorfile>
      <anchor>aebc43605eff0977a22b2a51993ffd864</anchor>
      <arglist>(Encoding_t encoding, const String &amp;str, bool nullTerminator=true)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Crypto</name>
    <filename>namespacelibcomp_1_1Crypto.html</filename>
    <class kind="class">libcomp::Crypto::Blowfish</class>
    <class kind="struct">libcomp::Crypto::BlowfishPrivate</class>
    <class kind="class">libcomp::Crypto::DiffieHellman</class>
    <class kind="struct">libcomp::Crypto::DiffieHellmanPrivate</class>
    <member kind="function">
      <type>bool</type>
      <name>DecryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a21775fd26248b13b4c329ce5d6076563</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>DecryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a6ca565e7f4accd1cccb595a7286e9092</anchor>
      <arglist>(const std::string &amp;path)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a90e8c308bbb9a7e41387389bbe556a8b</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncryptFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a94f643e4b6bda36e13e061a0266cd4f8</anchor>
      <arglist>(const std::string &amp;path, const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GenDiffieHellman</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a090ae17a8f50fee1b2ba207976107ce4</anchor>
      <arglist>(const String &amp;g, const String &amp;p, const String &amp;a, int outputSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GenerateRandom</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a06a91dfe7c2b8a38cbfacdec34b18ecb</anchor>
      <arglist>(int sz=-1)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GenerateSessionKey</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>af7aa1a00c77b80e1cb8ecf4199a02a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>HashPassword</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ae99a236cdba9f951465ad3959dffb75c</anchor>
      <arglist>(const String &amp;password, const String &amp;salt)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>LoadFile</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>a22253ea28776e9bfdeb63c43cd233f1f</anchor>
      <arglist>(const std::string &amp;path, int requestedSize=-1)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>MD5</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ad072f0e4cc4b6c792602539bc9807caa</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>SHA1</name>
      <anchorfile>namespacelibcomp_1_1Crypto.html</anchorfile>
      <anchor>ac4d3e0b99789afef39dd860339d8a547</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Crypto::Blowfish</name>
    <filename>classlibcomp_1_1Crypto_1_1Blowfish.html</filename>
    <member kind="function">
      <type></type>
      <name>Blowfish</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>ab1e4057f26f6e4f285be8f02cc7789f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Blowfish</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a0c97c028d773d0c6d82aed831aa99cc9</anchor>
      <arglist>(const Blowfish &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Blowfish</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>ac2b3360cf03c7596466c047d8bd87195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decrypt</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a2ee6c3c5eb4cf75eacf6e9db79b8f2df</anchor>
      <arglist>(void *pData, uint32_t dataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Decrypt</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>adc5cc152a474d3e6b989ab979f81afcc</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data, std::vector&lt; char &gt;::size_type realSize=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DecryptCbc</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a36516ddd7abce950e9c15c2bbe636e59</anchor>
      <arglist>(uint64_t &amp;initializationVector, std::vector&lt; char &gt; &amp;data, std::vector&lt; char &gt;::size_type realSize=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DecryptCbc</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a1010d0f3aca320e678e42f28988cdfe7</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data, std::vector&lt; char &gt;::size_type realSize=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DecryptPacket</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a4fa9fc989dc258e6c2f557403623e885</anchor>
      <arglist>(Packet &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Encrypt</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a8fafb3725b400b9e3b20e35abe559668</anchor>
      <arglist>(void *pData, uint32_t dataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Encrypt</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a2a2fa897f34d9c4494e6e2a527ace072</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EncryptCbc</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a3ca5eb7116a0f499e930279266d7947d</anchor>
      <arglist>(uint64_t &amp;initializationVector, std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EncryptCbc</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a9e2a3430aac1805d226a8773bed3ae51</anchor>
      <arglist>(std::vector&lt; char &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EncryptPacket</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>ac0fdd91837667f3830078bd07b49f625</anchor>
      <arglist>(Packet &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Blowfish &amp;</type>
      <name>operator=</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a26889ca8b7c92648d6e76e30d7303ece</anchor>
      <arglist>(const Blowfish &amp;other)=delete</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKey</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a283cecadad1b5061ee3f4c1f63c7e75c</anchor>
      <arglist>(const void *pData, size_t dataSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetKey</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a241e67afb35f2b70219843d82e6f1f3e</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;key)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BlowfishPrivate *</type>
      <name>d</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1Blowfish.html</anchorfile>
      <anchor>a4087fb5baec5d4df90744eeaf1069bb1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::Crypto::BlowfishPrivate</name>
    <filename>structlibcomp_1_1Crypto_1_1BlowfishPrivate.html</filename>
    <member kind="variable">
      <type>BF_KEY</type>
      <name>key</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1BlowfishPrivate.html</anchorfile>
      <anchor>a20fd628a21035dc08d5dcc67a87c2de5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Crypto::DiffieHellman</name>
    <filename>classlibcomp_1_1Crypto_1_1DiffieHellman.html</filename>
    <member kind="function">
      <type></type>
      <name>DiffieHellman</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a64c8ec21041019745072328ff90b923b</anchor>
      <arglist>(const String &amp;prime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DiffieHellman</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a86ceecd402292f68a2a0ba30159851ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GeneratePublic</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a58e7c78f0c99d6a5c920cdbba7274a51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>GenerateSecret</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a40a6238597def654cede0edeebd3d470</anchor>
      <arglist>(const String &amp;otherPublic)</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetPrime</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a35d45d186b61cfbec7e62b5fe67f3fd4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetPublic</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a20205f2dbabc6a5d0bb8b3a9e13d386d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>GetSecret</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a357616aaf9a04942d14b2817de9ddeec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsValid</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>adc9bf835a084a55280ab804f85b888b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; Crypto::DiffieHellman &gt;</type>
      <name>Generate</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a71f424cd68e7e106115ecab65bb97da9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static String</type>
      <name>BufferToHexString</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a4a1b329fc986241ea31bc7ac1d652290</anchor>
      <arglist>(const uint8_t *pBuffer, size_t bufferSize)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::vector&lt; uint8_t &gt;</type>
      <name>HexStringToBuffer</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>ab9f06a2b8ce739ca2f6ed6fb0cf2896e</anchor>
      <arglist>(const String &amp;s)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DiffieHellmanPrivate *</type>
      <name>d</name>
      <anchorfile>classlibcomp_1_1Crypto_1_1DiffieHellman.html</anchorfile>
      <anchor>a561c1c0e619a8bed0ac02422e1e8d95e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>libcomp::Crypto::DiffieHellmanPrivate</name>
    <filename>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</filename>
    <member kind="variable">
      <type>DH *</type>
      <name>mContext</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</anchorfile>
      <anchor>aa706b126af46ab4bad6f1dff2cfa5c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>mPrime</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</anchorfile>
      <anchor>a8ce187689c5854d8e1b3eb86571c892b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>String</type>
      <name>mPublic</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</anchorfile>
      <anchor>ab61eb567c48860e6e5e8f7184c086c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; char &gt;</type>
      <name>mSecret</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</anchorfile>
      <anchor>aab4d0089be0fe380d434474701ba3464</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>mValid</name>
      <anchorfile>structlibcomp_1_1Crypto_1_1DiffieHellmanPrivate.html</anchorfile>
      <anchor>a1a4f41cb9b7f2540071092e102e496d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Message</name>
    <filename>namespacelibcomp_1_1Message.html</filename>
    <class kind="class">libcomp::Message::ConnectionClosed</class>
    <class kind="class">libcomp::Message::ConnectionMessage</class>
    <class kind="class">libcomp::Message::Encrypted</class>
    <class kind="class">libcomp::Message::Execute</class>
    <class kind="class">libcomp::Message::ExecuteImpl</class>
    <class kind="class">libcomp::Message::Init</class>
    <class kind="class">libcomp::Message::Message</class>
    <class kind="class">libcomp::Message::Packet</class>
    <class kind="class">libcomp::Message::Pong</class>
    <class kind="class">libcomp::Message::Shutdown</class>
    <class kind="class">libcomp::Message::Tick</class>
    <class kind="class">libcomp::Message::Timeout</class>
    <class kind="class">libcomp::Message::WorldNotification</class>
    <member kind="enumeration">
      <type></type>
      <name>ConnectionMessageType</name>
      <anchorfile>namespacelibcomp_1_1Message.html</anchorfile>
      <anchor>a6216a7d546bf04641027b3b0eb205692</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692ac2fa38340b1ae9f046c1e15c46a29fb4">CONNECTION_MESSAGE_ENCRYPTED</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692a1de154d67a5b2573bb93db7cc5ba40b8">CONNECTION_MESSAGE_CONNECTION_CLOSED</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a6216a7d546bf04641027b3b0eb205692afaf4889ac7178dd2a459437d6b6b721a">CONNECTION_MESSAGE_WORLD_NOTIFICATION</enumvalue>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MessageType</name>
      <anchorfile>namespacelibcomp_1_1Message.html</anchorfile>
      <anchor>a0816108a83e14b6ce2a0d9fb4084c2a6</anchor>
      <arglist></arglist>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a1e34573d4b8e31c2c6e8f61e5be8c3a5">MESSAGE_TYPE_SYSTEM</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6ac5738a71a691cb90f3b8be8ea6dc0c5d">MESSAGE_TYPE_PACKET</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a4861abdcfc1d4da64df07176c0e3b151">MESSAGE_TYPE_CONNECTION</enumvalue>
      <enumvalue file="namespacelibcomp_1_1Message.html" anchor="a0816108a83e14b6ce2a0d9fb4084c2a6a28cd6e055b51db68a00f90054edde412">MESSAGE_TYPE_CLIENT</enumvalue>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::ConnectionClosed</name>
    <filename>classlibcomp_1_1Message_1_1ConnectionClosed.html</filename>
    <base>libcomp::Message::ConnectionMessage</base>
    <member kind="function">
      <type></type>
      <name>ConnectionClosed</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>a4de036a08aa31eb46b5e0ff299a4812a</anchor>
      <arglist>(std::shared_ptr&lt; TcpConnection &gt; connection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionClosed</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>a8139a99e19946ccdc59bbc335e26b077</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>a48a04594e4975dbff68a9b0e79412df6</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>GetConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>aad28bf0869a3bc2a5b5c932d8da444ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionMessageType</type>
      <name>GetConnectionMessageType</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>a8f522c5242a7501141955e956a8e87f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionMessage.html</anchorfile>
      <anchor>a679ba3e386ed6f01b6ca046c8ffe5380</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>mConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionClosed.html</anchorfile>
      <anchor>afcb38875f0c051ed2ca74143e12ecd6b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::ConnectionMessage</name>
    <filename>classlibcomp_1_1Message_1_1ConnectionMessage.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnectionMessage</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionMessage.html</anchorfile>
      <anchor>a99d28f08a59a7e181682a8e68c4d81f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Message.html</anchorfile>
      <anchor>ae68844a620ce1307d6ef06f960550aa9</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ConnectionMessageType</type>
      <name>GetConnectionMessageType</name>
      <anchorfile>classlibcomp_1_1Message_1_1ConnectionMessage.html</anchorfile>
      <anchor>a9a60f3097705bc929f6fab11ca7b64d7</anchor>
      <arglist>() const =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Encrypted</name>
    <filename>classlibcomp_1_1Message_1_1Encrypted.html</filename>
    <base>libcomp::Message::ConnectionMessage</base>
    <member kind="function">
      <type></type>
      <name>Encrypted</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>aabbd94778614ac26a8ae93129800dbb5</anchor>
      <arglist>(const std::shared_ptr&lt; TcpConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Encrypted</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>a67cc2ad757e47255a2351b2967aed0e9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>ae7a6bf38c29bd49c8ccba0f5bcbb305c</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>GetConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>ac8f30af191fcf1351ea0ae36a99c5076</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionMessageType</type>
      <name>GetConnectionMessageType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>a7e7c4a48694b16894498a1b380d1a298</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>mConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1Encrypted.html</anchorfile>
      <anchor>a9121ee99bfabb279539ac91d2efb0889</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Execute</name>
    <filename>classlibcomp_1_1Message_1_1Execute.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function" virtualness="pure">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Message.html</anchorfile>
      <anchor>a6b92059d846f9897d72b5fb2ccd65d8d</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1Message_1_1Execute.html</anchorfile>
      <anchor>a44981bca59d583c1907fdff87aaa9f85</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::ExecuteImpl</name>
    <filename>classlibcomp_1_1Message_1_1ExecuteImpl.html</filename>
    <templarg>Function</templarg>
    <base>libcomp::Message::Execute</base>
    <member kind="typedef">
      <type>decltype(std::bind(std::declval&lt; std::function&lt; void(Function...)&gt;&gt;(), std::declval&lt; Function &gt;()...))</type>
      <name>BindType_t</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>af8504365732cbac6c479bc738e980654</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExecuteImpl</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>a626124c3bc2957072c5baf0d16c8c503</anchor>
      <arglist>(std::function&lt; void(Function...)&gt; f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExecuteImpl</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>a9f8040eab3a41e23570bbcd39e3e2e93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>af2b58412ae8c9426351d58aff0e3bbbe</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>a3d49cdaa2db7ee705d0757e0dab39d5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Run</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>a15c396f7f05757f9b1be9590ba32eb02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::String</type>
      <name>mBacktrace</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>aaf4c85aef8107549f47d5864aea0d3c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BindType_t</type>
      <name>mBind</name>
      <anchorfile>classlibcomp_1_1Message_1_1ExecuteImpl.html</anchorfile>
      <anchor>a232334b0b6c06adc12f72d0ee5c6420f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Init</name>
    <filename>classlibcomp_1_1Message_1_1Init.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Init</name>
      <anchorfile>classlibcomp_1_1Message_1_1Init.html</anchorfile>
      <anchor>a26c47ecaa8726fc5ad291cb86d75bc4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Init</name>
      <anchorfile>classlibcomp_1_1Message_1_1Init.html</anchorfile>
      <anchor>a23bb419e118501bb7eefcabaa7a67166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Init.html</anchorfile>
      <anchor>afd6bf252b6e58c53c1e877fbf448d82d</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Init.html</anchorfile>
      <anchor>a3972e18fb7d96712645e05e5e4716e27</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Message</name>
    <filename>classlibcomp_1_1Message_1_1Message.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Message</name>
      <anchorfile>classlibcomp_1_1Message_1_1Message.html</anchorfile>
      <anchor>a5b7faf2b959eb0d5bb39ff040fd5a41b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Packet</name>
    <filename>classlibcomp_1_1Message_1_1Packet.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Packet</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a521c8638f9bc1daf9f54d54a1a4780ab</anchor>
      <arglist>(const std::shared_ptr&lt; TcpConnection &gt; &amp;connection, uint16_t commandCode, ReadOnlyPacket &amp;packet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Packet</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>ad69773cfa4a1c6f1e8b560427740c93e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a83f9710b5f05d82439934091b641c18a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetCommandCode</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a1b86a2dcb769191f0c3e492e22091c66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>GetConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>ad17ac0f14941ecd674b15e52d1f2ee8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ReadOnlyPacket &amp;</type>
      <name>GetPacket</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a32737856c4a0a84f7c0618c342c980f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a507c70726e1a33e1a5e2806871f6f1a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mCommandCode</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a3b1ae3d923e5a92afd512af66b074d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; TcpConnection &gt;</type>
      <name>mConnection</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a7f7781a52393fa47e3abcb7b22944c0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ReadOnlyPacket</type>
      <name>mPacket</name>
      <anchorfile>classlibcomp_1_1Message_1_1Packet.html</anchorfile>
      <anchor>a40c5977f9caf805f4a1b98189437cd3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Pong</name>
    <filename>classlibcomp_1_1Message_1_1Pong.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Pong</name>
      <anchorfile>classlibcomp_1_1Message_1_1Pong.html</anchorfile>
      <anchor>a3b83ae410327a5a3a94429bd5b2b7cba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Pong</name>
      <anchorfile>classlibcomp_1_1Message_1_1Pong.html</anchorfile>
      <anchor>a027bd90aedfdb6c3f950c51a30c4baa1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Pong.html</anchorfile>
      <anchor>a06c0e3a8f0b2265c0bed67c6b4f9531a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Pong.html</anchorfile>
      <anchor>a07c988241561fb326c9cb771e50745c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Shutdown</name>
    <filename>classlibcomp_1_1Message_1_1Shutdown.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Shutdown</name>
      <anchorfile>classlibcomp_1_1Message_1_1Shutdown.html</anchorfile>
      <anchor>a410fe150c892a97a692cdbfdb0c66bd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Shutdown</name>
      <anchorfile>classlibcomp_1_1Message_1_1Shutdown.html</anchorfile>
      <anchor>ab2ab9e2204292012e0091e91d79aec77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Shutdown.html</anchorfile>
      <anchor>a85ae2b9f9dae96fb857b4e5f526eb08a</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Shutdown.html</anchorfile>
      <anchor>ab67007f14bd054e755fdc6c151d025c9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Tick</name>
    <filename>classlibcomp_1_1Message_1_1Tick.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Tick</name>
      <anchorfile>classlibcomp_1_1Message_1_1Tick.html</anchorfile>
      <anchor>aef79e8a9ad3f37431e36845776ca8a8b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Tick</name>
      <anchorfile>classlibcomp_1_1Message_1_1Tick.html</anchorfile>
      <anchor>a7a2b4ca3ff56247e3224c2416e66b86f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Tick.html</anchorfile>
      <anchor>a703b5ff7a91ba1d3c67eb13e3b877c44</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Tick.html</anchorfile>
      <anchor>a327e52d897b55b583df6c3abcf8563b9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::Timeout</name>
    <filename>classlibcomp_1_1Message_1_1Timeout.html</filename>
    <base>libcomp::Message::Message</base>
    <member kind="function">
      <type></type>
      <name>Timeout</name>
      <anchorfile>classlibcomp_1_1Message_1_1Timeout.html</anchorfile>
      <anchor>af1aa89938647f2ed949481f912024022</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Timeout</name>
      <anchorfile>classlibcomp_1_1Message_1_1Timeout.html</anchorfile>
      <anchor>acddb037fbd81fc001fd154ce4f1fae22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1Timeout.html</anchorfile>
      <anchor>ae0208b8492cf1c4b95a7b07e4cc93249</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MessageType</type>
      <name>GetType</name>
      <anchorfile>classlibcomp_1_1Message_1_1Timeout.html</anchorfile>
      <anchor>ac6a8da03fd88ac54a73637bb451159ff</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>libcomp::Message::WorldNotification</name>
    <filename>classlibcomp_1_1Message_1_1WorldNotification.html</filename>
    <base>libcomp::Message::ConnectionMessage</base>
    <member kind="function">
      <type></type>
      <name>WorldNotification</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a0a3f3d86dbbd7b4522b93e9fc25e49e7</anchor>
      <arglist>(const String &amp;address, uint16_t port)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WorldNotification</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a9a047e9ffb1d20d463e8f145ff079119</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual libcomp::String</type>
      <name>Dump</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a24f355358069dd3f22241ea75ad9f322</anchor>
      <arglist>() const override</arglist>
    </member>
    <member kind="function">
      <type>String</type>
      <name>GetAddress</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a1557674d3eaacd3b645163d2ac02f39e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ConnectionMessageType</type>
      <name>GetConnectionMessageType</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>ad2f0a17a8d4db1a98f8c6e90e2fe498d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetPort</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a17d3d268280a5d1b36002bc8fa2b2a1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>String</type>
      <name>mAddress</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a07cf3cc331b3e632268d973dd1aaf015</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mPort</name>
      <anchorfile>classlibcomp_1_1Message_1_1WorldNotification.html</anchorfile>
      <anchor>a409450ef7869e66e7b207d421f1fe1fa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Parsers</name>
    <filename>namespacelibcomp_1_1Parsers.html</filename>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacelibcomp_1_1Parsers.html</anchorfile>
      <anchor>aa24907e6642a4274dc87247d735b3828</anchor>
      <arglist>(Placeholder)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Platform</name>
    <filename>namespacelibcomp_1_1Platform.html</filename>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetLastErrorString</name>
      <anchorfile>group__Platform.html</anchorfile>
      <anchor>gae7164efca1459a057c11f602928c3c7a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>libcomp::Shutdown</name>
    <filename>namespacelibcomp_1_1Shutdown.html</filename>
    <member kind="function">
      <type>void</type>
      <name>Complete</name>
      <anchorfile>namespacelibcomp_1_1Shutdown.html</anchorfile>
      <anchor>a35d719b6b722c3b2ff38802742019566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Configure</name>
      <anchorfile>namespacelibcomp_1_1Shutdown.html</anchorfile>
      <anchor>a451af8c44675d24b95acb784489d9893</anchor>
      <arglist>(libcomp::BaseServer *pServer)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>objects</name>
    <filename>namespaceobjects.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Sqrat</name>
    <filename>namespaceSqrat.html</filename>
    <class kind="class">Sqrat::s64</class>
    <class kind="class">Sqrat::u64</class>
  </compound>
  <compound kind="class">
    <name>Sqrat::s64</name>
    <filename>classSqrat_1_1s64.html</filename>
    <member kind="function">
      <type></type>
      <name>s64</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>ab973bc9bd7349b9ffef17e48e3d4169c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>s64</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>ad701ba1a912579e9718fa6bb4a3f462a</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>s64</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a9a75a02507ec82ea525e6c995d9f280c</anchor>
      <arglist>(const s64 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>_tostring</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a00cb35e88b6681df0a562bcf3fdfb835</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>adb3d27d7670dfb3d5e7e961874c7d7e8</anchor>
      <arglist>(int64_t value)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>value</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>ad9db1f8c346470eaf95a7c1339a5d98b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>valueTruncated</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>ac5c7f685f0ec0408a99403d715dfc6c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_add</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a374160c04667895dd165989363e3c57b</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_cmp</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>afa19389669e02c600c5dccf23f5779e0</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_div</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a079d6530d00d6c71bbd0027d4c207ec3</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_mod</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a7fce1b1c4d808fa6701eb078ddf47198</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_mul</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a72bd0f123bbacad27dd5d450572f5480</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_sub</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a6f78f894bf9dc144958667e8eecac614</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>equal</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a7aa84e036927ee1de24831a671736b6d</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int64_t</type>
      <name>mValue</name>
      <anchorfile>classSqrat_1_1s64.html</anchorfile>
      <anchor>a43dd726b27af621fc8c19632357fcc9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sqrat::u64</name>
    <filename>classSqrat_1_1u64.html</filename>
    <member kind="function">
      <type></type>
      <name>u64</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>ac83c03b514572aa49cf2ce637fce8f54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>u64</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a6dae3f0951acb0ed021a0eb986a1146f</anchor>
      <arglist>(int32_t value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>u64</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a288c0030bd928b558d6b2bff51e45a58</anchor>
      <arglist>(const u64 &amp;other)</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>_tostring</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a1551e1530dd19442a7242f67e15fbeb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a4c1fb270b5d167fa9074026c93aa47c7</anchor>
      <arglist>(uint64_t value)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>value</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>abe4b433c4d288538303dde7a946e691b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>valueTruncated</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>af76e5c618ec950ad446566770c029763</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_add</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a63ad32ee341098345d69dfa2672dfdbf</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_cmp</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>ac0b28905a891c3a0b86fd3f3a1e917fc</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_div</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>aa2dd7e3ee990e6033f3e51e4feff4afd</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_mod</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a1abb6a6153c3655d0cde6d103218f260</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_mul</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a314c005817592cd6e9f2d7e9353e01ef</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>_sub</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a20d9b43ef06d039b1ab070ea6faf746a</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static SQInteger</type>
      <name>equal</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a0f0455e932f79e567866adbeeb78cc8b</anchor>
      <arglist>(HSQUIRRELVM vm)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mValue</name>
      <anchorfile>classSqrat_1_1u64.html</anchorfile>
      <anchor>a3516799b4d7a98695666eccc529d3639</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <class kind="struct">std::hash&lt; libcomp::String &gt;</class>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; libcomp::String &gt;</name>
    <filename>structstd_1_1hash_3_01libcomp_1_1String_01_4.html</filename>
    <member kind="typedef">
      <type>libcomp::String</type>
      <name>argument_type</name>
      <anchorfile>structstd_1_1hash_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>a9f486e679b06eaba94e4ea7a6a551112</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::size_t</type>
      <name>result_type</name>
      <anchorfile>structstd_1_1hash_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>a496b7017c1f66b36dc9155b363254c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>result_type</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01libcomp_1_1String_01_4.html</anchorfile>
      <anchor>a5666af598b0d834e7c08e981d831e5e6</anchor>
      <arglist>(const argument_type &amp;s) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>tinyxml2</name>
    <filename>namespacetinyxml2.html</filename>
  </compound>
  <compound kind="dir">
    <name>libcomp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/</path>
    <filename>dir_d4cc3e49d5cacb9d6bcecd4913f03b1d.html</filename>
    <dir>src</dir>
    <dir>tests</dir>
  </compound>
  <compound kind="dir">
    <name>libcomp</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/</path>
    <filename>dir_1f589673bfeaea1095583731d4c070b8.html</filename>
    <dir>libcomp</dir>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/src/</path>
    <filename>dir_0ec4e3f6df69d6cc186124c02bafcdde.html</filename>
    <file>ArgumentParser.cpp</file>
    <file>ArgumentParser.h</file>
    <file>BaseServer.cpp</file>
    <file>BaseServer.h</file>
    <file>BinaryDataSet.cpp</file>
    <file>BinaryDataSet.h</file>
    <file>ChannelConnection.cpp</file>
    <file>ChannelConnection.h</file>
    <file>Child.cpp</file>
    <file>Child.h</file>
    <file>Compress.cpp</file>
    <file>Compress.h</file>
    <file>Config.cpp</file>
    <file>Config.h</file>
    <file>ConnectionMessage.h</file>
    <file>src/Convert.cpp</file>
    <file>Convert.h</file>
    <file>src/Crypto.cpp</file>
    <file>Crypto.h</file>
    <file>CryptSupport.h</file>
    <file>CString.cpp</file>
    <file>CString.h</file>
    <file>src/Database.cpp</file>
    <file>Database.h</file>
    <file>DatabaseBind.cpp</file>
    <file>DatabaseBind.h</file>
    <file>DatabaseChangeSet.cpp</file>
    <file>DatabaseChangeSet.h</file>
    <file>DatabaseMariaDB.cpp</file>
    <file>DatabaseMariaDB.h</file>
    <file>DatabaseQuery.cpp</file>
    <file>DatabaseQuery.h</file>
    <file>DatabaseQueryMariaDB.cpp</file>
    <file>DatabaseQueryMariaDB.h</file>
    <file>DatabaseQuerySQLite3.cpp</file>
    <file>DatabaseQuerySQLite3.h</file>
    <file>DatabaseSQLite3.cpp</file>
    <file>DatabaseSQLite3.h</file>
    <file>DataFile.cpp</file>
    <file>DataFile.h</file>
    <file>DataStore.cpp</file>
    <file>DataStore.h</file>
    <file>DataSyncManager.cpp</file>
    <file>DataSyncManager.h</file>
    <file>DayCare.cpp</file>
    <file>DayCare.h</file>
    <file>DefinitionManager.cpp</file>
    <file>DefinitionManager.h</file>
    <file>DynamicObject.cpp</file>
    <file>DynamicObject.h</file>
    <file>DynamicVariable.cpp</file>
    <file>DynamicVariable.h</file>
    <file>DynamicVariableArray.h</file>
    <file>DynamicVariableFactory.cpp</file>
    <file>DynamicVariableFactory.h</file>
    <file>DynamicVariableInt.h</file>
    <file>DynamicVariableList.h</file>
    <file>DynamicVariableReference.h</file>
    <file>DynamicVariableString.h</file>
    <file>EncryptedConnection.cpp</file>
    <file>EncryptedConnection.h</file>
    <file>Endian.h</file>
    <file>EnumMap.h</file>
    <file>EnumUtils.h</file>
    <file>ErrorCodes.cpp</file>
    <file>ErrorCodes.h</file>
    <file>Exception.cpp</file>
    <file>Exception.h</file>
    <file>InternalConnection.cpp</file>
    <file>InternalConnection.h</file>
    <file>LobbyConnection.cpp</file>
    <file>LobbyConnection.h</file>
    <file>Log.cpp</file>
    <file>Log.h</file>
    <file>LookupTableCP1252.h</file>
    <file>LookupTableCP932.h</file>
    <file>Manager.h</file>
    <file>ManagerPacket.cpp</file>
    <file>ManagerPacket.h</file>
    <file>MemoryManager.cpp</file>
    <file>MemoryManager.h</file>
    <file>Message.h</file>
    <file>MessageConnectionClosed.cpp</file>
    <file>MessageConnectionClosed.h</file>
    <file>MessageEncrypted.cpp</file>
    <file>MessageEncrypted.h</file>
    <file>MessageExecute.h</file>
    <file>MessageInit.cpp</file>
    <file>MessageInit.h</file>
    <file>MessagePacket.cpp</file>
    <file>MessagePacket.h</file>
    <file>MessagePong.cpp</file>
    <file>MessagePong.h</file>
    <file>MessageQueue.h</file>
    <file>MessageShutdown.cpp</file>
    <file>MessageShutdown.h</file>
    <file>MessageTick.h</file>
    <file>MessageTimeout.cpp</file>
    <file>MessageTimeout.h</file>
    <file>MessageWorldNotification.cpp</file>
    <file>MessageWorldNotification.h</file>
    <file>Mutex.cpp</file>
    <file>Mutex.h</file>
    <file>Object.cpp</file>
    <file>Object.h</file>
    <file>ObjectReference.h</file>
    <file>src/Packet.cpp</file>
    <file>Packet.h</file>
    <file>PacketCodes.h</file>
    <file>PacketException.cpp</file>
    <file>PacketException.h</file>
    <file>PacketParser.h</file>
    <file>Packets.h</file>
    <file>PacketStream.h</file>
    <file>PEFile.cpp</file>
    <file>PEFile.h</file>
    <file>PEFormat.h</file>
    <file>PersistentObject.cpp</file>
    <file>PersistentObject.h</file>
    <file>Platform.h</file>
    <file>PlatformLinux.h</file>
    <file>PlatformWindows.cpp</file>
    <file>PlatformWindows.h</file>
    <file>PopIgnore.h</file>
    <file>PushIgnore.h</file>
    <file>Randomizer.cpp</file>
    <file>Randomizer.h</file>
    <file>rbtree.c</file>
    <file>rbtree.h</file>
    <file>ReadOnlyPacket.cpp</file>
    <file>ReadOnlyPacket.h</file>
    <file>RingBuffer.cpp</file>
    <file>RingBuffer.h</file>
    <file>src/ScriptEngine.cpp</file>
    <file>ScriptEngine.h</file>
    <file>ServerCommandLineParser.cpp</file>
    <file>ServerCommandLineParser.h</file>
    <file>ServerConstants.cpp</file>
    <file>ServerConstants.h</file>
    <file>ServerDataManager.cpp</file>
    <file>ServerDataManager.h</file>
    <file>Shutdown.cpp</file>
    <file>Shutdown.h</file>
    <file>SpawnThread.cpp</file>
    <file>SpawnThread.h</file>
    <file>SqratInt64.cpp</file>
    <file>SqratInt64.h</file>
    <file>SqratTypesInclude.h</file>
    <file>SqratTypesNonRef.h</file>
    <file>SqratTypesSource.h</file>
    <file>TcpConnection.cpp</file>
    <file>TcpConnection.h</file>
    <file>TcpServer.cpp</file>
    <file>TcpServer.h</file>
    <file>TimerManager.cpp</file>
    <file>TimerManager.h</file>
    <file>VectorStream.h</file>
    <file>WatchThread.cpp</file>
    <file>WatchThread.h</file>
    <file>WindowsService.cpp</file>
    <file>WindowsService.h</file>
    <file>WindowsServiceMain.cpp</file>
    <file>Worker.cpp</file>
    <file>Worker.h</file>
  </compound>
  <compound kind="dir">
    <name>tests</name>
    <path>/home/travis/build/comphack/comp_hack/libcomp/libcomp/tests/</path>
    <filename>dir_a32a89bc1af8602eb0153ac31bd19f80.html</filename>
    <file>tests/Convert.cpp</file>
    <file>tests/Crypto.cpp</file>
    <file>tests/Database.cpp</file>
    <file>DiffieHellman.cpp</file>
    <file>GeneratedObjects.cpp</file>
    <file>MariaDB.cpp</file>
    <file>tests/Packet.cpp</file>
    <file>tests/ScriptEngine.cpp</file>
    <file>String.cpp</file>
    <file>VectorStream.cpp</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>libcomp - The COMP_hack library for just about everything.</title>
    <filename>index</filename>
    <docanchor file="index" title="Encryption and Decryption">enc_and_dec</docanchor>
  </compound>
</tagfile>
