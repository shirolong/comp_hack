<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AccountDumpRequest.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/amala/</path>
    <filename>AccountDumpRequest_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PART_SIZE</name>
      <anchorfile>AccountDumpRequest_8cpp.html</anchorfile>
      <anchor>a8fa79e660e95274d9b77427fa7535a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DumpAccount</name>
      <anchorfile>AccountDumpRequest_8cpp.html</anchorfile>
      <anchor>a2f03a2f39ef547eea87536ef85edcdf1</anchor>
      <arglist>(AccountManager *accountManager, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AccountLogin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>AccountLogin_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginResponse</name>
      <anchorfile>AccountLogin_8cpp.html</anchorfile>
      <anchor>afbed0e021c8c8b741774697301704585</anchor>
      <arglist>(AccountManager *accountManager, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AccountLogout.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>AccountLogout_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>AccountManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AccountManager_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>AccountManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AccountManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::AccountManager</class>
    <namespace>channel</namespace>
    <member kind="enumeration">
      <type></type>
      <name>LogoutCode_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_UNKNOWN_MIN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a7055f4b2966e4f6dcbc57779e90378a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_QUIT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a84cfc137ccb674488bbd8ccf3b28406c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_CANCEL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75af898e5700a13e40bbfb99f168a7ff76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_SWITCH</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a9116879a6c9cf80094a48e39cb27d965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_UNKNOWN_MAX</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a1c949a28a2766bd9f780ae3f48f02b9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ActionManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ActionManager_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ActionManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ActionManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="struct">channel::ActionManager::ActionContext</class>
    <class kind="class">channel::ActionManager</class>
    <class kind="struct">channel::ActionOptions</class>
    <namespace>channel</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ActionRunScriptResult_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SUCCESS</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baac85ebc7797987bd5d0c952d35fc2a26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FAIL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baa63c93bb833e169b295480c3d44ebc8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_OFF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baa9d56646140a2d4a2b1e7966adc7cc724</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ActiveEntityState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ActiveEntityState_8cpp</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <namespace>channel</namespace>
    <member kind="variable">
      <type>const std::set&lt; CorrectTbl &gt;</type>
      <name>BASE_STATS</name>
      <anchorfile>ActiveEntityState_8cpp.html</anchorfile>
      <anchor>ac6145c3a22f4db3d5e0a9cf90eef8889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::set&lt; CorrectTbl &gt;</type>
      <name>FORCE_NUMERIC</name>
      <anchorfile>ActiveEntityState_8cpp.html</anchorfile>
      <anchor>a81b7893bd32baafea5bd1de208c4c2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::set&lt; CorrectTbl &gt;</type>
      <name>VISIBLE_STATS</name>
      <anchorfile>ActiveEntityState_8cpp.html</anchorfile>
      <anchor>afc129608a7f2cd5d04c1ffb9994778ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ActiveEntityState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ActiveEntityState_8h</filename>
    <class kind="class">channel::ActiveEntityState</class>
    <class kind="class">channel::ActiveEntityStateImp</class>
    <class kind="class">channel::StatusEffectChange</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::ActiveEntityStateObject::DisplayState_t</type>
      <name>ActiveDisplayState_t</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>af09b470d685d26db7b32cdc05e124747</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiCorrectTbl::ID_t</type>
      <name>CorrectTbl</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ae5e46bc20c247425b6c26aa4d9636868</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, StatusEffectChange &gt;</type>
      <name>StatusEffectChanges</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a754f2659c0023d7503b5dfb4ba938a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_DAMAGE</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a1bb5c0c0ade2c08463672c0b2d10f6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_DEATH</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a4a7cf288ce31d5da66fe4c0e8bf64254</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_HIT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a9a17bcddac46a78462fe1147d7e641eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_KNOCKBACK</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a2b892eb2e4b94733a609cc2a5304bfbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_LOGOUT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a7e87949df3090889646e6d48936dfb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_SKILL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a131cc9f4a3b696935201293c043ae3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>EFFECT_CANCEL_ZONEOUT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ace280ee30d918a88a3bca9a77da643fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_MOVE_SPEED</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a78e6ca97c0b1704894da400f32590465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_SKILL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>aa40ba62b3a2552eccd2182226a33e9ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_STAT_LOCAL</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a9e8f75b057ad2655c669eef5c6c6da1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>ENTITY_CALC_STAT_WORLD</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>aa4f41c3b5c4cfeada75897f02e084dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_CHARGING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ab3f87a6c9c37f221e176dbdda21afcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_HIT_STUN</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a532de644e701f70f49fc23b4e5b3da6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_IGNORE</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>aa520d19ee07e5b78461b925365191d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_IMMOBILE</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a434f92324724130b58f3de1d85f001b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_KNOCKBACK</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>ae2e5657f94c1486a34bc9ec39e2b45f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_LOCKOUT</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>af8c3ef7eb61a25458414b410c964e298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_RESTING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>a411f472122829e12d52b929cbaf47aa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>STATUS_WAITING</name>
      <anchorfile>ActiveEntityState_8h.html</anchorfile>
      <anchor>acbbdd172fcdb08aebd30e9bdc65531c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AICommand.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AICommand_8cpp</filename>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
  </compound>
  <compound kind="file">
    <name>AICommand.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AICommand_8h</filename>
    <class kind="class">channel::AICommand</class>
    <class kind="class">channel::AIMoveCommand</class>
    <class kind="class">channel::AIScriptedCommand</class>
    <class kind="class">channel::AIUseSkillCommand</class>
    <namespace>channel</namespace>
    <member kind="enumeration">
      <type></type>
      <name>AICommandType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa3cbbfe48a743c27c3a903bbaa680b2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MOVE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa0daed1c5edc9cd69fcfc61996b752e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>USE_SKILL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa86d23c33f6945848066094d158b39a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCRIPTED</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fad632772b6e465e1d09aa4adeae03773d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AIManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AIManager_8cpp</filename>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FOLLOW_DISTANCE_CLOSE</name>
      <anchorfile>AIManager_8cpp.html</anchorfile>
      <anchor>ab06342c8b7f86d6a207d1b7c05f534ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOLLOW_DISTANCE_FAR</name>
      <anchorfile>AIManager_8cpp.html</anchorfile>
      <anchor>aa3fdd8a207b3245dac2c36d35d4cb49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FOLLOW_DISTANCE_MAX</name>
      <anchorfile>AIManager_8cpp.html</anchorfile>
      <anchor>a64747d52cd2851ea5021c7879114bdbf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AIManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AIManager_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <class kind="class">channel::AIManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>AIState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AIState_8cpp</filename>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>AIState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AIState_8h</filename>
    <includes id="AICommand_8h" name="AICommand.h" local="yes" imported="no">AICommand.h</includes>
    <class kind="class">channel::AIState</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint16_t, std::list&lt; AISkillWeight_t &gt; &gt;</type>
      <name>AISkillMap_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3bf13310a93202f794145fdf2ad0d5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::shared_ptr&lt; objects::MiSkillData &gt;, uint16_t &gt;</type>
      <name>AISkillWeight_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abf6ec5a0957fa5b638bbd01ccc8ce9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AIStatus_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDLE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a44d90ba02e1b0b1214d3e834149db70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WANDERING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aee1e8c3c6c353d111d46e0fd98152994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FOLLOWING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a43820ca61664c60bfb90e9be0642c931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AGGRO</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aa45df7b2a577d15d8622433de2361e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COMBAT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a0b012e49498d31e33191354e1020e034</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7f9a8919790b4152a424ad64cefc2c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALLY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aeb94b90bc217b70b7aafe63080c8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ENEMY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab142235686532c75b9b5c0a6c343a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AllocateSkillPoint.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>AllocateSkillPoint_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AllocatePoint</name>
      <anchorfile>AllocateSkillPoint_8cpp.html</anchorfile>
      <anchor>ad4cf99e5a577ea8531af91cc5e546b9c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int8_t correctStatOffset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AllyState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AllyState_8cpp</filename>
    <includes id="AllyState_8h" name="AllyState.h" local="yes" imported="no">AllyState.h</includes>
  </compound>
  <compound kind="file">
    <name>AllyState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>AllyState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::AllyState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>Analyze.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Analyze_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>AppearanceAlter.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>AppearanceAlter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Auth.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Auth_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>AuthenticateAccount</name>
      <anchorfile>Auth_8cpp.html</anchorfile>
      <anchor>acbbba865acc13c52a61960316106fdbe</anchor>
      <arglist>(AccountManager *accountManager, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AutoRecoveryUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>AutoRecoveryUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>Barter.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Barter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>BarterConditionValid</name>
      <anchorfile>Barter_8cpp.html</anchorfile>
      <anchor>a8f7a0653bde47c12e76b92c6939e47d8</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; CharacterState &gt; &amp;cState, const std::shared_ptr&lt; DemonState &gt; &amp;dState, const std::shared_ptr&lt; objects::MiNPCBarterData &gt; &amp;barterData, const std::shared_ptr&lt; objects::MiNPCBarterConditionDataEntry &gt; &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleBarter</name>
      <anchorfile>Barter_8cpp.html</anchorfile>
      <anchor>ae0c15ea6e49c0a8f7d206c69dc56bd73</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint16_t barterID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>BazaarClerkSet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarClerkSet_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarInteract.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarInteract_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemAdd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemAdd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemBuy.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemBuy_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemDrop.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemDrop_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarItemUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarItemUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketClose.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketClose_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketComment.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketComment_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketEnd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketInfo_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketInfoSelf.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketInfoSelf_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketOpen.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketOpen_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarMarketSales.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarMarketSales_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarPrice.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BazaarPrice_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>BazaarState_8cpp</filename>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>packets/game/BazaarState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>packets_2game_2BazaarState_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>BazaarState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>BazaarState_8h</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="no" imported="no">EntityState.h</includes>
    <class kind="class">channel::BazaarState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>BikeBoostOff.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BikeBoostOff_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BikeBoostOn.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BikeBoostOn_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>BikeDismount.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BikeDismount_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>Blacklist.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Blacklist_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>BlacklistUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>BlacklistUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CashBalance.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CashBalance_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CasinoCoinTotal.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CasinoCoinTotal_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelClientConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelClientConnection_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelClientConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelClientConnection_8h</filename>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <class kind="class">channel::ChannelClientConnection</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>RelativeTimeMap</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a14eef5d98e622aebad487c9f0a2c25ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>state</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a42a66bec35cf06d954702b2d0e1ecca3</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ChannelList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelServer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelServer_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerSystem_8h" name="ManagerSystem.h" local="no" imported="no">ManagerSystem.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerClientPacket_8h" name="ManagerClientPacket.h" local="yes" imported="no">ManagerClientPacket.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="Packets_8h" name="Packets.h" local="yes" imported="no">Packets.h</includes>
    <includes id="PerformanceTimer_8h" name="PerformanceTimer.h" local="yes" imported="no">PerformanceTimer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChannelServer.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelServer_8h</filename>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="no" imported="no">ManagerConnection.h</includes>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
    <class kind="class">channel::ChannelServer</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>ServerTime(*</type>
      <name>GET_SERVER_TIME</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7ae1857f999fb65bcca580ba6e274278</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>ServerTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3645d2f2639d292478c3287540fc9052</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelSyncManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelSyncManager_8cpp</filename>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <namespace>channel</namespace>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::CharacterLogin &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3c69d977b9441c4029ee76566eb58545</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::InstanceAccess &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abf70bcf5cf8570b6cd88e9c8ab587896</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::MatchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf3086a45c5e2a6f1ceb54bf4fc1f773</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::PvPMatch &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>af421043df61debc24b9aaa1dc95c848c</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::UBResult &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a788e7b90769ad53acd71e51ddc4d5b4a</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::EventCounter &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa65cfae4f64ce7a09d7af466cec846d6</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::PentalphaMatch &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a50fcdfcff8b59e200df2ff35328fa33c</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::SearchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a8c43c37ab7136499fbb877011f2ee5db</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::StatusEffect &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>acfb1e41056a78d7920a93379b696b5e7</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::UBTournament &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a1a39b179ec4d960c064d9c98efaefc34</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ChannelSyncManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChannelSyncManager_8h</filename>
    <class kind="class">channel::ChannelSyncManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>CharacterLogin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>CharacterLogin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>CharacterManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CharacterManager_8cpp</filename>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CharacterManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CharacterManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <class kind="class">channel::CharacterManager</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::MiCorrectTbl::ID_t</type>
      <name>CorrectTbl</name>
      <anchorfile>CharacterManager_8h.html</anchorfile>
      <anchor>ae5e46bc20c247425b6c26aa4d9636868</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CharacterState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CharacterState_8cpp</filename>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="no" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CharacterState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CharacterState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::CharacterState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>Chat.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Chat_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChatManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChatManager_8cpp</filename>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ChatManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ChatManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ChatManager</class>
    <namespace>channel</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ChatVis_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07caf75a0a2e246d071f72e7c8c23c7c4534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cae84bb27897e6bbbc4678e4fe178b361c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_ZONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca311137d932ffb116ae40e05015daf1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_RANGE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cacf7fc04483bb3eee8459b28699d439a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8355e6beb612304df2d1e194146b3619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_VERSUS</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca3799033e929c15ba329065828fcb38ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8a78a82766d988523d12552f86886851</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ClanCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanCancel_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanChat.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanChat_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanDisband.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanDisband_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanEmblemUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanEmblemUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanForm.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanForm_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanInvite.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanInvite_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanJoin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanJoin_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanKick.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanKick_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanLeave_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanMasterUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanMasterUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanSubMasterUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ClanSubMasterUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ClanUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>ClanUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ClientState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ClientState_8cpp</filename>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>ClientState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ClientState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <includes id="DemonState_8h" name="DemonState.h" local="yes" imported="no">DemonState.h</includes>
    <class kind="class">channel::ClientState</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>float</type>
      <name>ClientTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a48830c9521c432b7478cc266bd57b172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CommonSwitchInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CommonSwitchInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>CommonSwitchUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CommonSwitchUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CompShopList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CompShopList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CompShopOpen.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CompShopOpen_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CultureData_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureEnd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CultureEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CultureItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleCultureItem</name>
      <anchorfile>CultureItem_8cpp.html</anchorfile>
      <anchor>a391d376d61ab409448459eadc33222ea</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t itemID, int8_t day)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CultureMachineAccess.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CultureMachineAccess_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureMachineState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CultureMachineState_8cpp</filename>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
  </compound>
  <compound kind="file">
    <name>CultureMachineState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>CultureMachineState_8h</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="no" imported="no">EntityState.h</includes>
    <class kind="class">channel::CultureMachineState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>CultureStart.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>CultureStart_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DataSync.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>DataSync_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonAISet.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonAISet_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBoxData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonBoxData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonBoxMove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonBoxMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCompendium.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonCompendium_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCrystallize.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonCrystallize_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonCrystallizeItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonCrystallizeItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonData_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendPartnerData</name>
      <anchorfile>DemonData_8cpp.html</anchorfile>
      <anchor>abb17409eeb4ba571829c3e2b5708e6a2</anchor>
      <arglist>(CharacterManager *characterManager, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DemonDepoList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonDepoList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonDepoRemote.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonDepoRemote_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonDismiss.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonDismiss_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DismissDemon</name>
      <anchorfile>DemonDismiss_8cpp.html</anchorfile>
      <anchor>a69ac7dcdbb6723c89468b0d61707f071</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DemonEquip.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonEquip_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonFamiliarity.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonFamiliarity_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonForce.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonForce_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonForceEnd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonForceEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonForceStack.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonForceStack_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonFusion.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonFusion_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonLock.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonLock_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DemonLockSet</name>
      <anchorfile>DemonLock_8cpp.html</anchorfile>
      <anchor>ad43ae8a341fb9f5da753e3ebdfd069b1</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID, bool lock)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DemonQuestAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestActive.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestActive_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendDemonQuestData</name>
      <anchorfile>DemonQuestData_8cpp.html</anchorfile>
      <anchor>a6e9167718bbaddc9c97548ead9f29bf1</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DemonQuestEnd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestPending.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestPending_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonQuestReject.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonQuestReject_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonReunion.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonReunion_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonSkillUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DemonSkillUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>UpdateDemonSkill</name>
      <anchorfile>DemonSkillUpdate_8cpp.html</anchorfile>
      <anchor>a0a339d844ed8392fe28977864699f915</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t entityID, int8_t skillSlot, uint32_t skillID)</arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_LEARN_ACQUIRED</name>
      <anchorfile>DemonSkillUpdate_8cpp.html</anchorfile>
      <anchor>ac6c65b501ae9880f18bdf94845f850c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_LEARN_INHERITED</name>
      <anchorfile>DemonSkillUpdate_8cpp.html</anchorfile>
      <anchor>a41609d95197476f81f85b98b5f608ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int8_t</type>
      <name>ACTION_MOVE</name>
      <anchorfile>DemonSkillUpdate_8cpp.html</anchorfile>
      <anchor>a1809abc00fae8880f54b9d50974a17c8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DemonState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>DemonState_8cpp</filename>
    <includes id="DemonState_8h" name="DemonState.h" local="yes" imported="no">DemonState.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DemonState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>DemonState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::DemonState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>DepoRent.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DepoRent_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
  </compound>
  <compound kind="file">
    <name>DestinyBoxData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DestinyBoxData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DestinyLotto.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DestinyLotto_8cpp</filename>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="no" imported="no">ZoneInstance.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DiasporaBaseCapture.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DiasporaBaseCapture_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DiasporaEnter.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DiasporaEnter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizeAssist.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DigitalizeAssist_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizeAssistLearn.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DigitalizeAssistLearn_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizeAssistRemove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DigitalizeAssistRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>DigitalizePoints.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DigitalizePoints_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>DungeonRecords.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>DungeonRecords_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>Enchant.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Enchant_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EnchantItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EnchantItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EnemyState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EnemyState_8cpp</filename>
    <includes id="EnemyState_8h" name="EnemyState.h" local="yes" imported="no">EnemyState.h</includes>
  </compound>
  <compound kind="file">
    <name>EnemyState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EnemyState_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="no" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::EnemyState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>EntityState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EntityState_8cpp</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="yes" imported="no">EntityState.h</includes>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>EntityState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EntityState_8h</filename>
    <class kind="class">channel::EntityState</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::EntityStateObject::EntityType_t</type>
      <name>EntityType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>acfd6cc88d7ffd78ecda9083b06a8e2fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EntrustAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustFinish.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRequest.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardFinish.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EntrustRewardUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EntrustRewardUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EquipmentList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendEquipmentList</name>
      <anchorfile>EquipmentList_8cpp.html</anchorfile>
      <anchor>afd6aaba003dc40f029037fb74db565b3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EquipmentMod.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EquipmentMod_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentModEdit.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EquipmentModEdit_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentSpiritDefuse.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EquipmentSpiritDefuse_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EquipmentSpiritFuse.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EquipmentSpiritFuse_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>EventManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EventManager_8cpp</filename>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CharacterState_8h" name="CharacterState.h" local="yes" imported="no">CharacterState.h</includes>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>EVENT_COMPARE_NUMERIC</name>
      <anchorfile>EventManager_8cpp.html</anchorfile>
      <anchor>a1ce4d2b03d1ee04eff1a1b68f2cd3160</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>EVENT_COMPARE_NUMERIC2</name>
      <anchorfile>EventManager_8cpp.html</anchorfile>
      <anchor>aa7e0d05f8d981c062746e1de81667357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>EventManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="struct">channel::EventManager::EventContext</class>
    <class kind="class">channel::EventManager</class>
    <class kind="struct">channel::EventOptions</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::EventCondition::CompareMode_t</type>
      <name>EventCompareMode</name>
      <anchorfile>EventManager_8h.html</anchorfile>
      <anchor>a82224bae604284567c8ac6eae2113af5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EventResponse.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>EventResponse_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ExpertiseDown.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ExpertiseDown_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>FixObjectPosition.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FixObjectPosition_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendAddRemove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FriendAddRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FriendData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FriendInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendRequest.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FriendRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>FriendsUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>FriendsUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendFriendInfo</name>
      <anchorfile>FriendsUpdate_8cpp.html</anchorfile>
      <anchor>a7cbc88b1b80b6d570b80db0ed53dbbc4</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, std::shared_ptr&lt; ChannelClientConnection &gt; client, std::vector&lt; std::shared_ptr&lt; objects::CharacterLogin &gt;&gt; friendLogins, ChannelToClientPacketCode_t packetCode)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FusionGauge.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>FusionGauge_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>FusionManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>FusionManager_8cpp</filename>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
  </compound>
  <compound kind="file">
    <name>FusionManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>FusionManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::FusionManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>FusionTables.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>FusionTables_8cpp</filename>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
    <member kind="typedef">
      <type>objects::MiDCategoryData::Race_t</type>
      <name>RaceID</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a6dc920bf2781a9b0bb578b92c83492de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_ADJUST</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a930ed54df4d4788b342d06717857eb0a</anchor>
      <arglist>[34][4]</arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_MITAMA</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a868badbb97b033768a4c448c66bfac2f</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_FAMILIARITY_BONUS</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>afdd9ba40ab12aa4f9d44268a212ff04e</anchor>
      <arglist>[5][5]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_RACE_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a746f158b6a227b719eb17494631cd273</anchor>
      <arglist>[35][34]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>INHERITENCE_SKILL_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a506d6f827fce1c0804627c24544abf88</anchor>
      <arglist>[21][21]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>REUNION_RANK_POINTS</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a8c62bce2d47072b0d6eae6db2053a3d4</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_FAMILY_MAP</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a3d3aacd06afb82001ac053ab6de7d4a6</anchor>
      <arglist>[7][7][8]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_RACE_PRIORITY</name>
      <anchorfile>FusionTables_8cpp.html</anchorfile>
      <anchor>a9e06e2b8eb073f71e095a384ff8eb2a6</anchor>
      <arglist>[34]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FusionTables.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>FusionTables_8h</filename>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_ADJUST</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a930ed54df4d4788b342d06717857eb0a</anchor>
      <arglist>[34][4]</arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>FUSION_ELEMENTAL_MITAMA</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a868badbb97b033768a4c448c66bfac2f</anchor>
      <arglist>[4][4]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_FAMILIARITY_BONUS</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>afdd9ba40ab12aa4f9d44268a212ff04e</anchor>
      <arglist>[5][5]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>FUSION_RACE_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a746f158b6a227b719eb17494631cd273</anchor>
      <arglist>[35][34]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>INHERITENCE_SKILL_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a506d6f827fce1c0804627c24544abf88</anchor>
      <arglist>[21][21]</arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>REUNION_RANK_POINTS</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a8c62bce2d47072b0d6eae6db2053a3d4</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_FAMILY_MAP</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a3d3aacd06afb82001ac053ab6de7d4a6</anchor>
      <arglist>[7][7][8]</arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TRIFUSION_RACE_PRIORITY</name>
      <anchorfile>FusionTables_8h.html</anchorfile>
      <anchor>a9e06e2b8eb073f71e095a384ff8eb2a6</anchor>
      <arglist>[34]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HotbarData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>HotbarData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendHotbarData</name>
      <anchorfile>HotbarData_8cpp.html</anchorfile>
      <anchor>a807b4457fdcd0fe6eb2962cee576f72c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, size_t page)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>HotbarSave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>HotbarSave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="struct">HotbarItemRequest</class>
    <member kind="function">
      <type>void</type>
      <name>SaveHotbarItems</name>
      <anchorfile>HotbarSave_8cpp.html</anchorfile>
      <anchor>a2f8eed8e8988b9a4c93094defbfd0eb6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, size_t page, std::vector&lt; HotbarItemRequest &gt; items)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ItemBox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDepoList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemDepoList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDepoRemote.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemDepoRemote_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDisassemble.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemDisassemble_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemDrop.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemDrop_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>DropItem</name>
      <anchorfile>ItemDrop_8cpp.html</anchorfile>
      <anchor>afa128412ca19b64d49dc9c41972f3342</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t itemID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ItemExchange.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemExchange_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemMix.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemMix_8cpp</filename>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemMove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemPrice.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemPrice_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemPromo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemPromo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemRepairMax.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemRepairMax_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ItemStack.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ItemStack_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>CombineStacks</name>
      <anchorfile>ItemStack_8cpp.html</anchorfile>
      <anchor>ab9a69c3688e43cbd7ffb1e86aec6c839</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, const std::list&lt; std::pair&lt; uint32_t, uint16_t &gt;&gt; sourceItems, uint32_t targetSlot)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SplitStack</name>
      <anchorfile>ItemStack_8cpp.html</anchorfile>
      <anchor>a788f25244e7ff6ebbdcbd2b6419b7920</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::pair&lt; uint32_t, uint16_t &gt; sourceItem, uint32_t targetSlot)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ITimeData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ITimeData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ITimeTalk.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ITimeTalk_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>KeepAlive.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>KeepAlive_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LearnSkill.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>LearnSkill_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Login.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Login_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>void</type>
      <name>LoginAccount</name>
      <anchorfile>Login_8cpp.html</anchorfile>
      <anchor>a8879a5322a24e0fc9edcf18e22e295e0</anchor>
      <arglist>(AccountManager *accountManager, std::shared_ptr&lt; ChannelClientConnection &gt; client, const libcomp::String username, uint32_t sessionKey)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Logout.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Logout_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>LootBossBox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>LootBossBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootDemonEggData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>LootDemonEggData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>LootItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>LootTreasureBox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>LootTreasureBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>main_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>ac0f2228420376f4db7e1274f2b41667c</anchor>
      <arglist>(int argc, const char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MainPage.dox</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/doc/</path>
    <filename>MainPage_8dox</filename>
  </compound>
  <compound kind="file">
    <name>ManagerClientPacket.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerClientPacket_8cpp</filename>
    <includes id="ManagerClientPacket_8h" name="ManagerClientPacket.h" local="yes" imported="no">ManagerClientPacket.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="no" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerClientPacket.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerClientPacket_8h</filename>
    <class kind="class">channel::ManagerClientPacket</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ManagerConnection.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerConnection_8cpp</filename>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerConnection.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerConnection_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ManagerConnection</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ManagerSystem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerSystem_8cpp</filename>
    <includes id="ManagerSystem_8h" name="ManagerSystem.h" local="yes" imported="no">ManagerSystem.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ManagerSystem.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ManagerSystem_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::ManagerSystem</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>MapFlag.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MapFlag_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MatchManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>MatchManager_8cpp</filename>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MatchManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>MatchManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::MatchManager</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>MaterialBox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MaterialBox_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MaterialExtract.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MaterialExtract_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MaterialInsert.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MaterialInsert_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MissionLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MissionLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>MitamaReset.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MitamaReset_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleMitamaReset</name>
      <anchorfile>MitamaReset_8cpp.html</anchorfile>
      <anchor>ab009c0f67990ed6db0cbdbb5324ee252</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int8_t reunionIdx)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MitamaReunion.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>MitamaReunion_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleMitamaReunion</name>
      <anchorfile>MitamaReunion_8cpp.html</anchorfile>
      <anchor>a1197ea9d0812d122f518b13a84a66b4d</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t mitamaID, int8_t reunionIdx)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Move.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Move_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ObjectInteraction.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ObjectInteraction_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">ActionList</class>
  </compound>
  <compound kind="file">
    <name>Packets.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>Packets_8h</filename>
    <namespace>channel</namespace>
    <namespace>channel::Parsers</namespace>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a890cb5f2277a251d95ef6954311b4bf3</anchor>
      <arglist>(Unsupported)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae94a1dc1778fc40d032d5dd119c08a8f</anchor>
      <arglist>(Login)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af9974f3648ff70d38d27b96e2fe6a3ee</anchor>
      <arglist>(Auth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afd838f6be6ea508f41e185d861fa433a</anchor>
      <arglist>(SendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad5aa3573786b0bc4ca0bba6c4c7e7c6e</anchor>
      <arglist>(Logout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a58ecd86f14c648837ee0fd1d849b72fe</anchor>
      <arglist>(PopulateZone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc7a0d6dd889731cd5302c60e171b166</anchor>
      <arglist>(Move)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aff977610c5726e6a7421e05c83690b09</anchor>
      <arglist>(Pivot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aceba0f771ce9f6213f53fc60566c531b</anchor>
      <arglist>(Chat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a54551b53ee443919b8c6800a9ae6938f</anchor>
      <arglist>(Tell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6556b57169a6dc20d3597460011e63f</anchor>
      <arglist>(SkillActivate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a375ed59ce216032df0ffc96b9e89fd1e</anchor>
      <arglist>(SkillExecute)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4cc2cdd166b983162e48bc3337f6ece5</anchor>
      <arglist>(SkillCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac102bd4ee59985f3b19a0f3802c4de91</anchor>
      <arglist>(SkillTarget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5d0261a6ac5128422a47a2f203ecb142</anchor>
      <arglist>(ExpertiseDown)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af84b1b79a40145ec23b7ce492daa5126</anchor>
      <arglist>(AllocateSkillPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a47a80476c8e9f1f4a1179841d87acd15</anchor>
      <arglist>(ToggleExpertise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adec0c81a045a2e38cf309cc0a288b41b</anchor>
      <arglist>(LearnSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6b9d46d72d18d2194f6b1ebc701e8321</anchor>
      <arglist>(DemonSkillUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8eb6d527ef3143c8f816d0c2d7afa7a7</anchor>
      <arglist>(KeepAlive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae2c2e144c58ec936f1b19004b3ec68d5</anchor>
      <arglist>(FixObjectPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8996afeb3cf3f0ddf20f39bdef391fee</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a84e37cc3fed6376d2b0b58162327fc76</anchor>
      <arglist>(DemonData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68cc5203ee302a6f63481e8040a6b66c</anchor>
      <arglist>(DemonBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2bbf1990d06af02f7a7962b484bf39d7</anchor>
      <arglist>(DemonBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a70659754fc952f5999ba5c99ff32277e</anchor>
      <arglist>(ChannelList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad1c93f70c8ee86897b0a76d2b4fbf515</anchor>
      <arglist>(ReviveCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab052a097caf91220604c2c536a4c62f0</anchor>
      <arglist>(StopMovement)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af29db7b8a5606f6cfdddfe31634fa694</anchor>
      <arglist>(SpotTriggered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aa4d371b2ccc6a0674a2a41fc1c345c</anchor>
      <arglist>(WorldTime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a39a8dbe8207e0e7f93cab1cab42a690f</anchor>
      <arglist>(ItemBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac9210c5b0335d4a1d155197d692f5af6</anchor>
      <arglist>(ItemMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac5a9817254b3343089b1afc0829d9ed3</anchor>
      <arglist>(ItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb4e547a8d94bc840bf110e06427be3c</anchor>
      <arglist>(ItemStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a23dad0722bee33158d469a7cd11420eb</anchor>
      <arglist>(EquipmentList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc3b526a69c9bbe05358cc2fe201c5af</anchor>
      <arglist>(TradeRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4f0239b72b70a66e2472647a65d621e9</anchor>
      <arglist>(TradeAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aad13e4e73e4928472fd8ef7abaae5673</anchor>
      <arglist>(TradeAddItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7dcd32056226457879e1c5e14a07d81d</anchor>
      <arglist>(TradeLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3620d29f3692e7d82d4e446ca4971142</anchor>
      <arglist>(TradeFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a020ce1a7780283eaf1564a3c6d227ad3</anchor>
      <arglist>(TradeCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a630bb6dc909e41948dd6a75cd167710f</anchor>
      <arglist>(LootItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af3fdc1abd66185ffb49aed8f5696f6cc</anchor>
      <arglist>(CashBalance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>addd49b6b7bbb441be8eee90fb30f86de</anchor>
      <arglist>(ShopData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88e6228ca3bc38a1a5b529bba42e2ca1</anchor>
      <arglist>(ShopBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6672cf56f2e2e47a2e726dc00f448bb6</anchor>
      <arglist>(ShopSell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad0fd6146a2dd576b81b10eeb0dfd1ae6</anchor>
      <arglist>(DemonBoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a852c6fd412282f0a215c248aaa50c6f2</anchor>
      <arglist>(DemonDismiss)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6b227c67e36a5aa330ab9d214b61cf1</anchor>
      <arglist>(PostList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af4f0982929387c63c515a875ac8d6ed2</anchor>
      <arglist>(PostItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4cced56934a8cb7a872f896217e6f65</anchor>
      <arglist>(PostGift)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7ac9ebc9c94884f21b7241cbbf494f94</anchor>
      <arglist>(HotbarData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a96353b26d8bafd3689afb50d8a4dbdf5</anchor>
      <arglist>(HotbarSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4e0ed38608743f97b5b25b9bcefef23e</anchor>
      <arglist>(EventResponse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abada04544198be08513edea636d47632</anchor>
      <arglist>(ValuableList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acf07fca8bfe83921f13f920d79eca256</anchor>
      <arglist>(ObjectInteraction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a165f2f252fac0eacd650a78627da2dcf</anchor>
      <arglist>(FriendInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba6a952289fcb1db2e1d19e2ee0483bc</anchor>
      <arglist>(FriendRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4afb5e25f299297020c97db69bc1a51</anchor>
      <arglist>(FriendAddRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5a33715e1106d4f486ac66fecfb75e56</anchor>
      <arglist>(FriendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a668efb852fa09ad1961865864707caa6</anchor>
      <arglist>(PartyInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb5404562f34f462c66a473f583f7cff</anchor>
      <arglist>(PartyJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abe70f0098f72fb301288919dbf9cc0a6</anchor>
      <arglist>(PartyCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cf2e226f58f7c426f85597da5911d85</anchor>
      <arglist>(PartyLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50fe89e494f843bf3fc53039a4f1925f</anchor>
      <arglist>(PartyDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5c16d2fc87a2626f20fd682c1acbbb59</anchor>
      <arglist>(PartyLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6afe83f3cb369583ecef80c49a6f18a</anchor>
      <arglist>(PartyDropRule)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab2414a25a48f13c8152826229aaf7d0a</anchor>
      <arglist>(PartyKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac17be68d2368b9ac66f35aaaaa0ad2a</anchor>
      <arglist>(DemonFusion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a77e6a64ef82b8fc367f216b3a606ee5f</anchor>
      <arglist>(LootDemonEggData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af99c7851e6c8d53ff9194a27d7dcf866</anchor>
      <arglist>(Sync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d1514f2fecb97acbfcfd4f9a523cb46</anchor>
      <arglist>(ShopRepair)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a867a4b406be96f53413c93b23feb3a06</anchor>
      <arglist>(Rotate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9461ec8b9b72d92fb658c01ac0760a2e</anchor>
      <arglist>(LootBossBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d8a187c85f630de3b7249942f974d4a</anchor>
      <arglist>(UnionFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b531d86fb619b9c48e38c75a3c6206a</anchor>
      <arglist>(ItemDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a292547e979fd1fb803c236a210e5b2e7</anchor>
      <arglist>(DepoRent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a18dd1ca93e8aa4d6cda0a9e03e36b91f</anchor>
      <arglist>(LootTreasureBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac89e347abf54ed06bee16065e3eea48</anchor>
      <arglist>(QuestActiveList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afdcdf45c216caf7b203049be8ed34b60</anchor>
      <arglist>(QuestCompletedList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae9dceae2d1fd4ef2358feda7206651e2</anchor>
      <arglist>(BazaarMarketOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c7e38743d3a55f2a74c747f62dc5cee</anchor>
      <arglist>(BazaarMarketClose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0eaecdfbe68ff767c2dd186ea4fbd553</anchor>
      <arglist>(BazaarMarketInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a530bc1f9739c74972633953452da30d2</anchor>
      <arglist>(BazaarItemAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd95198da7f89f9d15ae3015afcc4301</anchor>
      <arglist>(BazaarItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a931bf1e0efedb09a2d429ececbbc027b</anchor>
      <arglist>(BazaarItemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae767a701adbf9b3e62bc9e333a10e3bf</anchor>
      <arglist>(BazaarItemBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a187bf77fa9ab9a59fd480c908c34d5bb</anchor>
      <arglist>(BazaarMarketSales)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acb71c41375dd2e181d78233d6d1895b8</anchor>
      <arglist>(SearchEntrySelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab484457df75d7d4a08e65ec3693706d8</anchor>
      <arglist>(SearchList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac50422a605d1e88453d5cd4ee3372d9</anchor>
      <arglist>(SearchEntryData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2698c51dc68d6698135f1dec412cfb46</anchor>
      <arglist>(SearchEntryRegister)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa56673b5c6e896559795d431751d9b35</anchor>
      <arglist>(SearchEntryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b40857ea2dc9096113747711b5982b3</anchor>
      <arglist>(SearchEntryRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1599782b2d3c9aede9689c0e076f7345</anchor>
      <arglist>(SearchAppReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a884c43ffd0b0cef85576339b1a8284ae</anchor>
      <arglist>(ClanDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab86edaa3a09f40c6deb035544ca4b168</anchor>
      <arglist>(ClanInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae55e907d160291adc39969c4f872b4b1</anchor>
      <arglist>(ClanJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0c31154f1d887d45ec79ad4ddc977699</anchor>
      <arglist>(ClanCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acac5725342a37cb451fa2204e0aa1846</anchor>
      <arglist>(ClanKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f6b13564e2cc661cc1846363f7fc2c5</anchor>
      <arglist>(ClanMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a382c9b486646a06009748617ea224dde</anchor>
      <arglist>(ClanSubMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac83fb8eacb404d58764ba3a45dbdfbb0</anchor>
      <arglist>(ClanLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a8195d041badf945c2b2165f1bc7e15</anchor>
      <arglist>(ClanChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0de2bd9544ee5b06d65517726d50939c</anchor>
      <arglist>(ClanInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6f96ea981f0a6544ec6746c4b227635</anchor>
      <arglist>(ClanList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a203da5ded88fda102e36d1d3f29290b4</anchor>
      <arglist>(ClanData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a959ed8eb0dc8a5d461c0510181a3cfde</anchor>
      <arglist>(ClanForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aabc2e2ed2be0aeb349347aab51e491a3</anchor>
      <arglist>(ItemPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5079ffbae1b6bfcc7ebcead985e5b2e</anchor>
      <arglist>(BazaarState)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05232a28bee7851371c0b66e94ed59cd</anchor>
      <arglist>(BazaarClerkSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac67841b30f5cc4d5da12feba93bcc655</anchor>
      <arglist>(BazaarPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afa8b37592e160f8bbb5069fae0afd968</anchor>
      <arglist>(BazaarMarketInfoSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab234db94abbe5c786cfaaf7bfb690707</anchor>
      <arglist>(Warp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aca62027849d85227c9d01dc7f52c0cb6</anchor>
      <arglist>(SkillExecuteInstant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb24c5e444d103d9f47f37d868818e70</anchor>
      <arglist>(SyncCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>add6db8baba930004937cff0b63def5cf</anchor>
      <arglist>(DemonAISet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a734995a7edcc63882a722310e0f95302</anchor>
      <arglist>(BazaarInteract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd645ff6755419293ffe5deecb1a8afa</anchor>
      <arglist>(SkillForget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7bbde53ef90979ff5fc256ae3d7fb715</anchor>
      <arglist>(BazaarMarketEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a10f5427cf4aa57446a65ddcd4e0f34bc</anchor>
      <arglist>(BazaarMarketComment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f2ff1953f8f8256925720a653366655</anchor>
      <arglist>(PartyRecruitReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aabf7ab28ebfbf32a8f08a2d3e27b16</anchor>
      <arglist>(PartyRecruit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0e0a2f7424a7ed7feb4beb9b6cde4f91</anchor>
      <arglist>(StatusIcon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2e0d6e653c325c0263da372e036444b0</anchor>
      <arglist>(MapFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a73e4bcf1dda9f74760164783eb4468dd</anchor>
      <arglist>(DemonCompendium)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4b126f2c4ce892402719ebdb72e7f404</anchor>
      <arglist>(ItemRepairMax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad11f0b238d2d4daa6189d6af9a263598</anchor>
      <arglist>(AppearanceAlter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8db68369da4d114e6cf2cc43fb207408</anchor>
      <arglist>(EntrustRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af7b0d06a55b901b0ce627422273567e2</anchor>
      <arglist>(EntrustAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4909813087e538b2ba9fc6c828c43e7f</anchor>
      <arglist>(EntrustRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e8724766222c0ba19e9f6cebdd5f25b</anchor>
      <arglist>(EntrustRewardFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab5972eaef6e8c8a76d0197dfd95e56f2</anchor>
      <arglist>(EntrustRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a79cd737c326ba357695726826200c5ce</anchor>
      <arglist>(EntrustFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a40b2fd880de3f2fc55ba341e298d3092</anchor>
      <arglist>(DemonCrystallizeItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a43c1730851b18f1fddd83b318e3af59b</anchor>
      <arglist>(DemonCrystallize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afda3e648745534650637acc40bd0ee78</anchor>
      <arglist>(EnchantItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7b6e69c2180ceebc6764b46ea1bfea80</anchor>
      <arglist>(Enchant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa220aab3e270a2e175aece2654032b33</anchor>
      <arglist>(DungeonRecords)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6712c666459af863fffc57d4dd08b91</anchor>
      <arglist>(ItemPromo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6526cf831ca743a5c29661a3abf87f62</anchor>
      <arglist>(TriFusionJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9f83948781aea4c3483098a366c88104</anchor>
      <arglist>(TriFusionDemonUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad408ee5e634e77fe90f3f99a5f08eff7</anchor>
      <arglist>(TriFusionRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a25da2351e7fd3d590dfd49a340d68cf1</anchor>
      <arglist>(TriFusionRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a38db8651011259bb469354a840323508</anchor>
      <arglist>(TriFusionAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3e49d2050f446b58cc1566a7d0368dd8</anchor>
      <arglist>(TriFusionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a24383339d474dd57cb6abe1fe9b3aa6d</anchor>
      <arglist>(ClanEmblemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1dbe06d2e2279a75fb5089fd0c8d7710</anchor>
      <arglist>(DemonFamiliarity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a9e8571d066ce5d17c93f0a201a323b</anchor>
      <arglist>(PlasmaStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1068fefcd88b74de54dd8df769c65e02</anchor>
      <arglist>(PlasmaResult)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a49682ea2c49dff80bd949c4f387e1692</anchor>
      <arglist>(PlasmaEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a55be10e0201d4ba3b68299f2ed615f4a</anchor>
      <arglist>(PlasmaItemData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f9269fc10e9aae943b175b1ff8969e5</anchor>
      <arglist>(PlasmaItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac2ed3a0f648f1e73b3009f71531d8015</anchor>
      <arglist>(TimeLimitSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acbca02b07b81a0ed71fc6674678a9c09</anchor>
      <arglist>(ItemDisassemble)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae48ffe683fbb9412481fd1690c13bd21</anchor>
      <arglist>(SynthesizeRecipe)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa169c5dc57e273674c6af074b58094cd</anchor>
      <arglist>(Synthesize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a02765599fb09d4dc3333638b79b3b882</anchor>
      <arglist>(EquipmentMod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6a1e6a663f51eb441734a3be4d22e8d</anchor>
      <arglist>(MaterialBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba0dc452cb4aaf91d4aca6e6f09fefcd</anchor>
      <arglist>(Analyze)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4d6a27a5d8087868b42bd73c2e2cec3e</anchor>
      <arglist>(MaterialExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9034798fa159038dbe2b9f73973a0ceb</anchor>
      <arglist>(MaterialInsert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae57f37fdd9e5af08553d2333a4c0dde7</anchor>
      <arglist>(ItemExchange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a547c55cdb397b7e024480ef4d568592b</anchor>
      <arglist>(CompShopOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb17529b0debaff37daf4e8f55d9c082</anchor>
      <arglist>(CompShopList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6ac189bb2a6d768f11f61172070c2222</anchor>
      <arglist>(FusionGauge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae1e1d33b474e6345e8392a367c3204f1</anchor>
      <arglist>(TitleList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5cdb4e0e1ee0f56c68d04f5037956d93</anchor>
      <arglist>(TitleActiveUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc49aa12bc8e4b83dc16730fffe58053</anchor>
      <arglist>(TitleBuild)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af33be683f693a0bf7089ca22ea62882d</anchor>
      <arglist>(DemonQuestData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4644cc62d88f92d4b7490726b39849e6</anchor>
      <arglist>(DemonQuestAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af0f06d03d4e342436418901ec11fb4ee</anchor>
      <arglist>(DemonQuestEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af2c546959f31305fafc3939a3245ece9</anchor>
      <arglist>(DemonQuestCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4289f56d6b6e67e9d6419da62e057f4f</anchor>
      <arglist>(DemonQuestList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6e5fbebc0f25a46ce7669e2737e2658b</anchor>
      <arglist>(DemonQuestActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad76fc6ebb5fe103c15cc42482a4a97c7</anchor>
      <arglist>(DemonLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3a546866377b34ff9cc7d75c13b39e3c</anchor>
      <arglist>(DemonReunion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aebf3e2537c5c7f2e41ac00cf7dfcb51d</anchor>
      <arglist>(DemonQuestReject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5cae38e3fd80fbff28b3a0ee06bb4ce8</anchor>
      <arglist>(PvPConfirm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab7b02c287e1106c61fad4277ad4d8ffa</anchor>
      <arglist>(PvPBaseCapture)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a52aeee73e2147b56549ba83861dbb24d</anchor>
      <arglist>(PvPBaseLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad07995b14f6110db34453a78ce032f4d</anchor>
      <arglist>(PvPJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a306ceaa332b31d8eaa9f6a6a42506f</anchor>
      <arglist>(PvPCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7a341b2d2864483e4423e4c4b923ab26</anchor>
      <arglist>(PvPCharacterInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4885fdd91badd71ca21c516c54276c49</anchor>
      <arglist>(AutoRecoveryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a34d9e6a938586931a171c369568b0b28</anchor>
      <arglist>(ItemMix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a28ec6c40c74e16acbed8f7e1478e0f06</anchor>
      <arglist>(BikeBoostOn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8d11a7e23864c029e16cf1d41f767f52</anchor>
      <arglist>(BikeBoostOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a205de485c67408978713882de4308a33</anchor>
      <arglist>(BikeDismount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a03f8e4168b856bebe68f8098227fa421</anchor>
      <arglist>(TeamForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9ae0413092cc9af5e977d6f9d8ddcb2a</anchor>
      <arglist>(TeamInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abb114e58e9f22063bfd20ce542f02fd0</anchor>
      <arglist>(TeamAnswer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1cecf575825196cd400cd333e0da1b89</anchor>
      <arglist>(TeamKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c463b1addcadf101d88fe27c99991a2</anchor>
      <arglist>(TeamLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abf0f6e2720515c76c8519f2daf3deeb2</anchor>
      <arglist>(TeamLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cee422b8f49970f4191fc96596f5ec7</anchor>
      <arglist>(TeamChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0b5184340abd7797b474161c07baa3a7</anchor>
      <arglist>(TeamInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a74af41e767510739b1b33d399512ec0e</anchor>
      <arglist>(TeamMemberList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a93ea94ad657c07e54298ef7b5a102181</anchor>
      <arglist>(EquipmentSpiritFuse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc28ad084489e677616b6ef8fe304606</anchor>
      <arglist>(DemonQuestPending)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ace33066e7a6955923b936aa8be6c479c</anchor>
      <arglist>(ItemDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab7e1b55aa806c96f191108e8662e88e7</anchor>
      <arglist>(DiasporaBaseCapture)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab06c705c8165d4085e31ee9e44cd3d38</anchor>
      <arglist>(DiasporaEnter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd4046837d69578ebca45c277ae58678</anchor>
      <arglist>(DemonDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a279abf7584e04012d40aa80379286677</anchor>
      <arglist>(CommonSwitchUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a314e5f0981b4af6e8abe9460217f3cfd</anchor>
      <arglist>(CommonSwitchInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adf96485dd5b9105ad9814c00fa60eb93</anchor>
      <arglist>(DemonForce)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae5f5fb57611a33c6a962caf3b5ae37c2</anchor>
      <arglist>(DemonForceStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f8f963f709dbd90cd1834fbd922917f</anchor>
      <arglist>(CasinoCoinTotal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a978602aaa3db2e8e4a14fa3cd070492d</anchor>
      <arglist>(TriFusionSolo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a14e05f2cd5e242714b4e3e1a8482ce66</anchor>
      <arglist>(EquipmentSpiritDefuse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4bb5453e945d9510f4e7412459ce65b</anchor>
      <arglist>(DemonForceEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6cd88fa6a3a725e08be5cbac2dce97b6</anchor>
      <arglist>(UBSpectatePlayer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac6bd2698b28d1e8986bd5ce642f9ee30</anchor>
      <arglist>(UBProceed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a356b2d03738bc67d6a79d815d63b805b</anchor>
      <arglist>(UBLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6725ea7007fb2b811ac3f49bebdbe0b</anchor>
      <arglist>(UBLottoCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa9b6391a9450b9b58098500b65ba9662</anchor>
      <arglist>(UBLottoJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae8efcd8ee307dc56260ebc9d9e2159e3</anchor>
      <arglist>(SearchEntryInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e2d75e536b53247e658f0e3a28d5ad2</anchor>
      <arglist>(ITimeData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac33e9ef8a7d826636857a89c50cfa412</anchor>
      <arglist>(ITimeTalk)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1c216aba3483af2f16e66611d72cdfc0</anchor>
      <arglist>(CultureData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0be113d9aee59e9ddacdb5bb64cb0683</anchor>
      <arglist>(CultureMachineAccess)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68e8a290c139d2d7dadfa52106119f73</anchor>
      <arglist>(CultureStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5a67f3a848adc1377471afaaba0ac6c</anchor>
      <arglist>(CultureItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9641d18395ed2c720c455eb239add58f</anchor>
      <arglist>(CultureEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a81ce58fc3c9e06f093a4c53ea8bfd239</anchor>
      <arglist>(EquipmentModEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9978dcef5bb2724884d188f8b994a53d</anchor>
      <arglist>(PAttributeDeadline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50d718c02305ac23269026ed58260bf0</anchor>
      <arglist>(MissionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0082599928c887bdcd17f4bf9ecfec40</anchor>
      <arglist>(MitamaReunion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05c3db7aac15a8404828a32bab8f3b23</anchor>
      <arglist>(MitamaReset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acdf733023072ce6d00cff3fe5178d296</anchor>
      <arglist>(DemonDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa44ed3f0f0dedbe8a1fcedb1f3763ef9</anchor>
      <arglist>(DemonEquip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af500e1c32db991db11d618ca7ccc87e5</anchor>
      <arglist>(Barter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad281706cfcb1d058d1e4d1b4b54c2271</anchor>
      <arglist>(PentalphaData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8837e9bf9c15dc18ecada03212afd07d</anchor>
      <arglist>(QuestTitle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5ab4dcd3f937fa9b2a416f04237973e0</anchor>
      <arglist>(ReportPlayer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a59d3b4e968d8d50b9cbf4fec9f3c44ab</anchor>
      <arglist>(Blacklist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab6e4c383d57be4094633217a99912e72</anchor>
      <arglist>(BlacklistUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a64b52d57361096766b39a76d9d357ce3</anchor>
      <arglist>(DestinyBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a45527c63e533dd2cbf93ab57518f9d18</anchor>
      <arglist>(DestinyLotto)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a056234a0f2190082a4ae38cecb06f227</anchor>
      <arglist>(DigitalizePoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d5682be8975e571b5b5cfe15aba374c</anchor>
      <arglist>(DigitalizeAssist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0e1b3521476b56fe5c7463cf9bc7b5f2</anchor>
      <arglist>(DigitalizeAssistLearn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0abc1feb8b6fd3542223c6f8aea1d36f</anchor>
      <arglist>(DigitalizeAssistRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88d597b70a6fa94b6a250b945f1174d8</anchor>
      <arglist>(VABox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a008a560eb55e4913d7ed68dc820d62cc</anchor>
      <arglist>(VABoxAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac0a06eff23759d840aa828e9a04c2383</anchor>
      <arglist>(VABoxRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5b82e3a988919d9accf0d458df8108d3</anchor>
      <arglist>(VAChange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac1e6ed48b3b71ffb5647d7a28c4bb43f</anchor>
      <arglist>(VABoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5fffad9a86f4c9658f5c61b881f4ed3c</anchor>
      <arglist>(ReunionPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a157203165c9b686d70a0e37543fd84c3</anchor>
      <arglist>(ReunionExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a89a043747a3feb2a1c2dd6aaf1719f76</anchor>
      <arglist>(ReunionInject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a26685b7fd49ba388c534290966c028e7</anchor>
      <arglist>(AmalaAccountDumpRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acd23504aa3bff98882c9cf7831eec6ad</anchor>
      <arglist>(SetWorldInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab78a16424de5a60aa2ef897c08e89a26</anchor>
      <arglist>(SetOtherChannelInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac38153f129a57a21a81a664e89dc80b2</anchor>
      <arglist>(AccountLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a461171d09726151f3fe4be69c22c57a1</anchor>
      <arglist>(AccountLogout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a08bc985f943875c19c658b9127b45d3a</anchor>
      <arglist>(Relay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac63594b1a5d0d8ee9ae1e6b8cca79d3</anchor>
      <arglist>(DataSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0d617e7007f87615239e7d3815bbc92c</anchor>
      <arglist>(CharacterLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa3a2b79e975884c97a11d63c2efa7c4c</anchor>
      <arglist>(FriendsUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc88c91591e8baba78200df88677b777</anchor>
      <arglist>(PartyUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acaf6d73b0dcb020c321c846747e4c37e</anchor>
      <arglist>(ClanUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a075d4fcb5ae9aca7ea1ab0d1e896d092</anchor>
      <arglist>(WebGame)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad24bc5d331d34f1e9ee18514edcedb22</anchor>
      <arglist>(TeamUpdate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartyCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyDisband.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyDisband_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyDropRule.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyDropRule_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyInvite.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyInvite_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyJoin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyKick.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyKick_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyLeaderUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyLeaderUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyRecruit.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyRecruit_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyRecruitReply.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PartyRecruitReply_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PartyUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>PartyUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <class kind="struct">PartyMemberInfo</class>
    <member kind="function">
      <type>void</type>
      <name>QueuePartyMemberInfo</name>
      <anchorfile>PartyUpdate_8cpp.html</anchorfile>
      <anchor>a4e25d4dd6a59b43a1e08cb6ec6dad1f1</anchor>
      <arglist>(std::shared_ptr&lt; ChannelClientConnection &gt; client, PartyMemberInfo memberInfo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PAttributeDeadline.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PAttributeDeadline_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PentalphaData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PentalphaData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PerformanceTimer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>PerformanceTimer_8cpp</filename>
    <includes id="PerformanceTimer_8h" name="PerformanceTimer.h" local="yes" imported="no">PerformanceTimer.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PerformanceTimer.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>PerformanceTimer_8h</filename>
    <class kind="class">channel::PerformanceTimer</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>Pivot.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Pivot_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaEnd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PlasmaEnd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PlasmaItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaItemData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PlasmaItemData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaResult.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PlasmaResult_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaStart.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PlasmaStart_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaState.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>PlasmaState_8cpp</filename>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PlasmaState.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>PlasmaState_8h</filename>
    <includes id="EntityState_8h" name="EntityState.h" local="no" imported="no">EntityState.h</includes>
    <class kind="class">channel::PlasmaPoint</class>
    <class kind="class">channel::PlasmaState</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>PopulateZone.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PopulateZone_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PostGift.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PostGift_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>PostItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PostItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PostList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PostList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPBaseCapture.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPBaseCapture_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPBaseLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPBaseLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPCharacterInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPCharacterInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPConfirm.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPConfirm_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>PvPJoin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>PvPJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>QuestActiveList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>QuestActiveList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>QuestCompletedList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>QuestCompletedList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>QuestTitle.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>QuestTitle_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Relay.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>Relay_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>ReportPlayer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ReportPlayer_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ReunionExtract.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ReunionExtract_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
    <member kind="function">
      <type>void</type>
      <name>ExtractReunionPoints</name>
      <anchorfile>ReunionExtract_8cpp.html</anchorfile>
      <anchor>ac58ba6daf12f0f8c9260fead107e06ce</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReunionInject.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ReunionInject_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionTables_8h" name="FusionTables.h" local="yes" imported="no">FusionTables.h</includes>
    <member kind="function">
      <type>void</type>
      <name>InjectReunionPoints</name>
      <anchorfile>ReunionInject_8cpp.html</anchorfile>
      <anchor>a67855c04bef1b08ddb416a977c1c45b2</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint8_t growthType, uint8_t mitamaType, std::array&lt; int8_t, 12 &gt; rPointSet, std::array&lt; int8_t, 12 &gt; mPointSet)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ReunionPoints.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ReunionPoints_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ReviveCharacter.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ReviveCharacter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Rotate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Rotate_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchAppReply.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchAppReply_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryData_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryRegister.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryRegister_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryRemove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntrySelf.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntrySelf_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchEntryUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchEntryUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SearchList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SearchList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SendData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SendData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendClientReadyData</name>
      <anchorfile>SendData_8cpp.html</anchorfile>
      <anchor>a4d40869b7ccab27fb36dcf12b89ffef3</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SetOtherChannelInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>SetOtherChannelInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>SetWorldInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>SetWorldInfo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>ParseDatabase</name>
      <anchorfile>SetWorldInfo_8cpp.html</anchorfile>
      <anchor>ad888f42dfbda001cb3cccd6dc2a4ee79</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; &amp;server, libcomp::ReadOnlyPacket &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetWorldInfoFromPacket</name>
      <anchorfile>SetWorldInfo_8cpp.html</anchorfile>
      <anchor>ab730b49d6765a03d1d062421184fd736</anchor>
      <arglist>(libcomp::ManagerPacket *pPacketManager, const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, libcomp::ReadOnlyPacket &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShopBuy.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ShopBuy_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleShopPurchase</name>
      <anchorfile>ShopBuy_8cpp.html</anchorfile>
      <anchor>a4153b12281c7add667e8759bc4ec6918</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t clientTrendTime, int32_t productID, int32_t quantity, libcomp::String gifteeName, libcomp::String giftMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendShopPurchaseReply</name>
      <anchorfile>ShopBuy_8cpp.html</anchorfile>
      <anchor>a4fa3002a2dde1717da7ada9c6aa176a5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t productID, int32_t result, bool queue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ShopData.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ShopData_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ShopRepair.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ShopRepair_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ShopSell.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ShopSell_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>HandleShopSale</name>
      <anchorfile>ShopSell_8cpp.html</anchorfile>
      <anchor>a4351cc9f37ccff931844a88c1a28e03f</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, std::list&lt; std::pair&lt; uint32_t, int64_t &gt;&gt; itemsSold)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendShopSaleReply</name>
      <anchorfile>ShopSell_8cpp.html</anchorfile>
      <anchor>a681efa9fb03612268ce7a729bc4a9ba7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t shopID, int32_t result, bool queue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkillActivate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillActivate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillExecute.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillExecute_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillExecuteInstant.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillExecuteInstant_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillForget.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillForget_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SkillManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>SkillManager_8cpp</filename>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">channel::ProcessingSkill</class>
    <class kind="class">channel::SkillTargetResult</class>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>AIL_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a977044bc5dcb3a0f4c109e7bf3c43227</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>BOOST_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>afe5ffcca695591cd21488fe2261b3e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_EXPLICIT_SET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ad68a770a9e22ec6690f8ebdf70e275be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_DRAIN</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7730f5a108834730aea3e0e79f6413fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_GENERIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa4975ff3cb4beb96878ffca8a2dd8520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_HEALING</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a3a172e83ec5aed2810ca224dd809e42a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_MISS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ace4163603484bc918042721e716ab9e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>DAMAGE_TYPE_NONE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>abea0dd75beddfb15c5ec9375b2cb0a2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_ABSORB</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a98c65df18b11a58a40a4c84dcc29a346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_BLOCK_MAGIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a852963768fc62e8286670ae327bddacc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_BLOCK_PHYS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a124802c748d97fee2b1976e414f1e191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_CLENCH</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a0f6ac7890629a26242f0d7dde974ab80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_COUNTERED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a9d38afeb59556235068950db6674c6a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_CRITICAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ae7cff4d5b11d5dcbe452fceed050c8e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_DODGED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a225571eed26c80517c74bfaf6abece01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_GUARDED</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa59fb8d9599e80be86c6cba290a82c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_KNOCKBACK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aea7f8295a6aa091f1ac3c9eb35fe3c1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_LETHAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ae4c1bd7860dc4a112b46e74892ec19ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_PROTECT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aa40e80175e0091dcccf51b9b91d463c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REFLECT_MAGIC</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ac019d189baae8b1bdcb1a6487f0a5f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REFLECT_PHYS</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a98d7d4e5a70bcc5c1bda2d8074ed3fb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_REVIVAL</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>af17c8b961efd25ae8473ff74dcae781e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_RUSH_MOVEMENT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a8e770e70fee143ac307a5f00c549584a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG1_WEAKPOINT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a31e4ac87316b87387db771cc7f78c17f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_BARRIER</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7e3689cfea7b71dc1929760552f3f17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_CLENCH</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>af8b8ebf22a8d381b517fe501ec85f134</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_IMPOSSIBLE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a7bcecf0081cbb4b67056df95b794e64c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_INSTANT_DEATH</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a5477b994e4ca8fe5431084eb1b68bfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_INTENSIVE_BREAK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aaceca4dc4e8cff17f57740c82f0e7a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>FLAG2_LIMIT_BREAK</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a1fa320df0bd1e6e8074c236ce7b3ffeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>NRA_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a485bfa66c7e75373401438412e7e06b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>RES_OFFSET</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a4f0b4728bb96f11ab637a677b9633013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_GIVE_ITEM</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a642f4c69260075efae64e01b7b3246ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_GIVE_ITEM_2</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a25da54c90c4c6b0a8676e7cba651d2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_JOIN</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a2aba8c31a425e0b52d70920be7cf9ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_JOIN_2</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a42691bfc2b0e1675a9c0135367eb35e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_LEAVE</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a9e6b29af87ad4664f142f6cc482a9a72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_REJECT</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>a1cc192d3d469b913b83ca2c4c9fb6244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_RESPONSE_1</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>ad32fa6b92e7cb7f9ac046a149c4f5461</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint8_t</type>
      <name>TALK_RESPONSE_4</name>
      <anchorfile>SkillManager_8cpp.html</anchorfile>
      <anchor>aef9fd3c480d9fde67d23393868807f28</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkillManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>SkillManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <class kind="class">channel::SkillExecutionContext</class>
    <class kind="class">channel::SkillManager</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::ActionType_t</type>
      <name>SkillActionType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a6e8b86bad603356a1190958a4725f5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::ActivationType_t</type>
      <name>SkillActivationType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a04ba6b6cb540bfe957a73d9db4c80f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::DependencyType_t</type>
      <name>SkillDependencyType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab2b5a689dda5bdc81ea2916785d6936e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::Family_t</type>
      <name>SkillFamily_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ad85f8c8588a8580886137100e802e737</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SkillTarget.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SkillTarget_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SpotTriggered.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SpotTriggered_8cpp</filename>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <class kind="class">ActionListB</class>
  </compound>
  <compound kind="file">
    <name>State.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>State_8cpp</filename>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <member kind="function">
      <type>void</type>
      <name>SendStateData</name>
      <anchorfile>State_8cpp.html</anchorfile>
      <anchor>a5d72fe6d2cdaa07a518165696dc50a04</anchor>
      <arglist>(std::shared_ptr&lt; ChannelServer &gt; server, const std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StatusIcon.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>StatusIcon_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>StopMovement.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>StopMovement_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Sync.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Sync_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>SyncCharacter.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SyncCharacter_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Synthesize.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Synthesize_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>SynthesizeRecipe.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>SynthesizeRecipe_8cpp</filename>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamAnswer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamAnswer_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamChat.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamChat_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamForm.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamForm_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamInfo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamInfo_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamInvite.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamInvite_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamKick.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamKick_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamLeaderUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamLeaderUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamMemberList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TeamMemberList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>TeamUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>TeamUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Tell.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Tell_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChatManager_8h" name="ChatManager.h" local="yes" imported="no">ChatManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TimeLimitSync.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TimeLimitSync_8cpp</filename>
    <includes id="Zone_8h" name="Zone.h" local="no" imported="no">Zone.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="no" imported="no">ZoneInstance.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>TitleActiveUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TitleActiveUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TitleBuild.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TitleBuild_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TitleList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TitleList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>ToggleExpertise.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ToggleExpertise_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>TokuseiManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>TokuseiManager_8cpp</filename>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
  </compound>
  <compound kind="file">
    <name>TokuseiManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>TokuseiManager_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <class kind="class">channel::TokuseiManager</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::TokuseiAspect::Type_t</type>
      <name>TokuseiAspectType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>a1cf8c17d48412771a8682a6b3d68da8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::TokuseiCondition::Type_t</type>
      <name>TokuseiConditionType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>afde026119313264915f0693e650573f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::TokuseiSkillCondition::SkillConditionType_t</type>
      <name>TokuseiSkillConditionType</name>
      <anchorfile>TokuseiManager_8h.html</anchorfile>
      <anchor>a308a094af07dcede67470e991fad48a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TradeAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeAddItem.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeAddItem_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeFinish.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeFinish_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeLock.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeLock_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TradeRequest.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TradeRequest_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ClientState_8h" name="ClientState.h" local="yes" imported="no">ClientState.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionDemonUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionDemonUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionJoin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionRewardAccept.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionRewardAccept_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionRewardUpdate.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionRewardUpdate_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
  </compound>
  <compound kind="file">
    <name>TriFusionSolo.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>TriFusionSolo_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="FusionManager_8h" name="FusionManager.h" local="yes" imported="no">FusionManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UBLeave.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UBLeave_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UBLottoCancel.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UBLottoCancel_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UBLottoJoin.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UBLottoJoin_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UBProceed.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UBProceed_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UBSpectatePlayer.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UBSpectatePlayer_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>UnionFlag.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>UnionFlag_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Unsupported.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Unsupported_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>VABox.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>VABox_8cpp</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxAdd.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>VABoxAdd_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxMove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>VABoxMove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>VABoxRemove.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>VABoxRemove_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>VAChange.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>VAChange_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>ValuableList.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>ValuableList_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
  </compound>
  <compound kind="file">
    <name>Warp.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>Warp_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
  </compound>
  <compound kind="file">
    <name>WebGame.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>WebGame_8cpp</filename>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
  </compound>
  <compound kind="file">
    <name>WorldClock.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>WorldClock_8cpp</filename>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
  </compound>
  <compound kind="file">
    <name>WorldClock.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>WorldClock_8h</filename>
    <class kind="class">channel::WorldClock</class>
    <class kind="class">channel::WorldClockTime</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>WorldTime.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>WorldTime_8cpp</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
  </compound>
  <compound kind="file">
    <name>Zone.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>Zone_8cpp</filename>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="AllyState_8h" name="AllyState.h" local="no" imported="no">AllyState.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="no" imported="no">CultureMachineState.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="no" imported="no">PlasmaState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="WorldClock_8h" name="WorldClock.h" local="yes" imported="no">WorldClock.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
  </compound>
  <compound kind="file">
    <name>Zone.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>Zone_8h</filename>
    <includes id="ActiveEntityState_8h" name="ActiveEntityState.h" local="yes" imported="no">ActiveEntityState.h</includes>
    <includes id="AllyState_8h" name="AllyState.h" local="yes" imported="no">AllyState.h</includes>
    <includes id="BazaarState_8h" name="BazaarState.h" local="yes" imported="no">BazaarState.h</includes>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="EnemyState_8h" name="EnemyState.h" local="yes" imported="no">EnemyState.h</includes>
    <includes id="EntityState_8h" name="EntityState.h" local="yes" imported="no">EntityState.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
    <class kind="class">channel::Zone</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>EntityState&lt; objects::DiasporaBase &gt;</type>
      <name>DiasporaBaseState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3ef065d293b7767acc98de19c69c2b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::ServerZoneInstanceVariant::InstanceType_t</type>
      <name>InstanceType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7afb7b114af6ae44f898a2c733619146</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::LootBox &gt;</type>
      <name>LootBoxState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aadc2bf0d64180781705024f660526389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerNPC &gt;</type>
      <name>NPCState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>afb0d4aa49728994544c41bf8d1a1e02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::PvPBase &gt;</type>
      <name>PvPBaseState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a0e600e35911a1ebf761bcb70faa9fde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerObject &gt;</type>
      <name>ServerObjectState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a36a16a9dd9ae96bf5268513b9ce86c8e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ZoneGeometry.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneGeometry_8cpp</filename>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneGeometry.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneGeometry_8h</filename>
    <class kind="class">channel::DynamicMap</class>
    <class kind="class">channel::Line</class>
    <class kind="class">channel::Point</class>
    <class kind="class">channel::ZoneGeometry</class>
    <class kind="class">channel::ZoneQmpShape</class>
    <class kind="class">channel::ZoneShape</class>
    <class kind="class">channel::ZoneSpotShape</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneGeometryLoader.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneGeometryLoader_8cpp</filename>
    <includes id="ZoneGeometryLoader_8h" name="ZoneGeometryLoader.h" local="yes" imported="no">ZoneGeometryLoader.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneGeometryLoader.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneGeometryLoader_8h</filename>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
    <class kind="class">channel::ZoneGeometryLoader</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneInstance.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneInstance_8cpp</filename>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneInstance.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneInstance_8h</filename>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <class kind="class">channel::ZoneInstance</class>
    <namespace>channel</namespace>
  </compound>
  <compound kind="file">
    <name>ZoneManager.cpp</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneManager_8cpp</filename>
    <includes id="ZoneManager_8h" name="ZoneManager.h" local="yes" imported="no">ZoneManager.h</includes>
    <includes id="AccountManager_8h" name="AccountManager.h" local="yes" imported="no">AccountManager.h</includes>
    <includes id="ActionManager_8h" name="ActionManager.h" local="yes" imported="no">ActionManager.h</includes>
    <includes id="AIManager_8h" name="AIManager.h" local="yes" imported="no">AIManager.h</includes>
    <includes id="AIState_8h" name="AIState.h" local="yes" imported="no">AIState.h</includes>
    <includes id="ChannelServer_8h" name="ChannelServer.h" local="yes" imported="no">ChannelServer.h</includes>
    <includes id="ChannelSyncManager_8h" name="ChannelSyncManager.h" local="yes" imported="no">ChannelSyncManager.h</includes>
    <includes id="CharacterManager_8h" name="CharacterManager.h" local="yes" imported="no">CharacterManager.h</includes>
    <includes id="CultureMachineState_8h" name="CultureMachineState.h" local="yes" imported="no">CultureMachineState.h</includes>
    <includes id="EventManager_8h" name="EventManager.h" local="yes" imported="no">EventManager.h</includes>
    <includes id="ManagerConnection_8h" name="ManagerConnection.h" local="yes" imported="no">ManagerConnection.h</includes>
    <includes id="MatchManager_8h" name="MatchManager.h" local="yes" imported="no">MatchManager.h</includes>
    <includes id="PerformanceTimer_8h" name="PerformanceTimer.h" local="yes" imported="no">PerformanceTimer.h</includes>
    <includes id="PlasmaState_8h" name="PlasmaState.h" local="yes" imported="no">PlasmaState.h</includes>
    <includes id="SkillManager_8h" name="SkillManager.h" local="yes" imported="no">SkillManager.h</includes>
    <includes id="TokuseiManager_8h" name="TokuseiManager.h" local="yes" imported="no">TokuseiManager.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneGeometryLoader_8h" name="ZoneGeometryLoader.h" local="yes" imported="no">ZoneGeometryLoader.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
  </compound>
  <compound kind="file">
    <name>ZoneManager.h</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>ZoneManager_8h</filename>
    <includes id="ChannelClientConnection_8h" name="ChannelClientConnection.h" local="yes" imported="no">ChannelClientConnection.h</includes>
    <includes id="Zone_8h" name="Zone.h" local="yes" imported="no">Zone.h</includes>
    <includes id="ZoneGeometry_8h" name="ZoneGeometry.h" local="yes" imported="no">ZoneGeometry.h</includes>
    <includes id="ZoneInstance_8h" name="ZoneInstance.h" local="yes" imported="no">ZoneInstance.h</includes>
    <class kind="class">channel::ZoneManager</class>
    <namespace>channel</namespace>
    <member kind="typedef">
      <type>objects::ServerZoneTrigger::Trigger_t</type>
      <name>ZoneTrigger_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ac98169d44b597d2c469604551969743a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActionList</name>
    <filename>classActionList.html</filename>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; objects::Action &gt; &gt;</type>
      <name>actions</name>
      <anchorfile>classActionList.html</anchorfile>
      <anchor>aff790f200d00ac2f9da5cf117398de7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>sourceEntityID</name>
      <anchorfile>classActionList.html</anchorfile>
      <anchor>a33029ff468b8fb659c93eb9b98498c40</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ActionListB</name>
    <filename>classActionListB.html</filename>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; objects::Action &gt; &gt;</type>
      <name>actions</name>
      <anchorfile>classActionListB.html</anchorfile>
      <anchor>ac5882239762c81dc18911e125f3478bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>HotbarItemRequest</name>
    <filename>structHotbarItemRequest.html</filename>
    <member kind="variable">
      <type>int64_t</type>
      <name>ObjectID</name>
      <anchorfile>structHotbarItemRequest.html</anchorfile>
      <anchor>a0612a18e6dea8d3c1ebc4beee894a73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Type</name>
      <anchorfile>structHotbarItemRequest.html</anchorfile>
      <anchor>afba1565ceb7a2f09752a7a30ebeee243</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PartyMemberInfo</name>
    <filename>structPartyMemberInfo.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>IsLeader</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>a10837aa8325386475a6c108c579dcd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::PartyCharacter &gt;</type>
      <name>Member</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>ac35b50be2c1bdf2f46b0248343cd728e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ZoneID</name>
      <anchorfile>structPartyMemberInfo.html</anchorfile>
      <anchor>aa2f9dd82e1ae9609d525aa9c0de65fe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>channel</name>
    <filename>namespacechannel.html</filename>
    <namespace>channel::Parsers</namespace>
    <class kind="class">channel::AccountManager</class>
    <class kind="class">channel::ActionManager</class>
    <class kind="struct">channel::ActionOptions</class>
    <class kind="class">channel::ActiveEntityState</class>
    <class kind="class">channel::ActiveEntityStateImp</class>
    <class kind="class">channel::AICommand</class>
    <class kind="class">channel::AIManager</class>
    <class kind="class">channel::AIMoveCommand</class>
    <class kind="class">channel::AIScriptedCommand</class>
    <class kind="class">channel::AIState</class>
    <class kind="class">channel::AIUseSkillCommand</class>
    <class kind="class">channel::AllyState</class>
    <class kind="class">channel::BazaarState</class>
    <class kind="class">channel::ChannelClientConnection</class>
    <class kind="class">channel::ChannelServer</class>
    <class kind="class">channel::ChannelSyncManager</class>
    <class kind="class">channel::CharacterManager</class>
    <class kind="class">channel::CharacterState</class>
    <class kind="class">channel::ChatManager</class>
    <class kind="class">channel::ClientState</class>
    <class kind="class">channel::CultureMachineState</class>
    <class kind="class">channel::DemonState</class>
    <class kind="class">channel::DynamicMap</class>
    <class kind="class">channel::EnemyState</class>
    <class kind="class">channel::EntityState</class>
    <class kind="class">channel::EventManager</class>
    <class kind="struct">channel::EventOptions</class>
    <class kind="class">channel::FusionManager</class>
    <class kind="class">channel::Line</class>
    <class kind="class">channel::ManagerClientPacket</class>
    <class kind="class">channel::ManagerConnection</class>
    <class kind="class">channel::ManagerSystem</class>
    <class kind="class">channel::MatchManager</class>
    <class kind="class">channel::PerformanceTimer</class>
    <class kind="class">channel::PlasmaPoint</class>
    <class kind="class">channel::PlasmaState</class>
    <class kind="class">channel::Point</class>
    <class kind="class">channel::ProcessingSkill</class>
    <class kind="class">channel::SkillExecutionContext</class>
    <class kind="class">channel::SkillManager</class>
    <class kind="class">channel::SkillTargetResult</class>
    <class kind="class">channel::StatusEffectChange</class>
    <class kind="class">channel::TokuseiManager</class>
    <class kind="class">channel::WorldClock</class>
    <class kind="class">channel::WorldClockTime</class>
    <class kind="class">channel::Zone</class>
    <class kind="class">channel::ZoneGeometry</class>
    <class kind="class">channel::ZoneGeometryLoader</class>
    <class kind="class">channel::ZoneInstance</class>
    <class kind="class">channel::ZoneManager</class>
    <class kind="class">channel::ZoneQmpShape</class>
    <class kind="class">channel::ZoneShape</class>
    <class kind="class">channel::ZoneSpotShape</class>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint16_t, std::list&lt; AISkillWeight_t &gt; &gt;</type>
      <name>AISkillMap_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3bf13310a93202f794145fdf2ad0d5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::shared_ptr&lt; objects::MiSkillData &gt;, uint16_t &gt;</type>
      <name>AISkillWeight_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abf6ec5a0957fa5b638bbd01ccc8ce9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>float</type>
      <name>ClientTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a48830c9521c432b7478cc266bd57b172</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::DiasporaBase &gt;</type>
      <name>DiasporaBaseState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3ef065d293b7767acc98de19c69c2b3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::EntityStateObject::EntityType_t</type>
      <name>EntityType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>acfd6cc88d7ffd78ecda9083b06a8e2fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ServerTime(*</type>
      <name>GET_SERVER_TIME</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7ae1857f999fb65bcca580ba6e274278</anchor>
      <arglist>)()</arglist>
    </member>
    <member kind="typedef">
      <type>objects::ServerZoneInstanceVariant::InstanceType_t</type>
      <name>InstanceType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7afb7b114af6ae44f898a2c733619146</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::LootBox &gt;</type>
      <name>LootBoxState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aadc2bf0d64180781705024f660526389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerNPC &gt;</type>
      <name>NPCState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>afb0d4aa49728994544c41bf8d1a1e02e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::PvPBase &gt;</type>
      <name>PvPBaseState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a0e600e35911a1ebf761bcb70faa9fde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>RelativeTimeMap</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a14eef5d98e622aebad487c9f0a2c25ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EntityState&lt; objects::ServerObject &gt;</type>
      <name>ServerObjectState</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a36a16a9dd9ae96bf5268513b9ce86c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>uint64_t</type>
      <name>ServerTime</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3645d2f2639d292478c3287540fc9052</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::ActionType_t</type>
      <name>SkillActionType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a6e8b86bad603356a1190958a4725f5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::ActivationType_t</type>
      <name>SkillActivationType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a04ba6b6cb540bfe957a73d9db4c80f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::DependencyType_t</type>
      <name>SkillDependencyType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab2b5a689dda5bdc81ea2916785d6936e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::MiSkillBasicData::Family_t</type>
      <name>SkillFamily_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ad85f8c8588a8580886137100e802e737</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; uint32_t, StatusEffectChange &gt;</type>
      <name>StatusEffectChanges</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a754f2659c0023d7503b5dfb4ba938a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>objects::ServerZoneTrigger::Trigger_t</type>
      <name>ZoneTrigger_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ac98169d44b597d2c469604551969743a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ActionRunScriptResult_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SUCCESS</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baac85ebc7797987bd5d0c952d35fc2a26b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FAIL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baa63c93bb833e169b295480c3d44ebc8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOG_OFF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa9598e1d4a83d6f9b2700703051aa8baa9d56646140a2d4a2b1e7966adc7cc724</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AICommandType_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>NONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa3cbbfe48a743c27c3a903bbaa680b2a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>MOVE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa0daed1c5edc9cd69fcfc61996b752e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>USE_SKILL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fa86d23c33f6945848066094d158b39a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>SCRIPTED</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf2e50152d91fa2bd5167b1df358468fad632772b6e465e1d09aa4adeae03773d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AIStatus_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>IDLE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a44d90ba02e1b0b1214d3e834149db70e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>WANDERING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aee1e8c3c6c353d111d46e0fd98152994</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>FOLLOWING</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a43820ca61664c60bfb90e9be0642c931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>AGGRO</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48aa45df7b2a577d15d8622433de2361e03</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>COMBAT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a4a9fbe80b5390309b933949e4db1da48a0b012e49498d31e33191354e1020e034</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ChatVis_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_SELF</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07caf75a0a2e246d071f72e7c8c23c7c4534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_PARTY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cae84bb27897e6bbbc4678e4fe178b361c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_ZONE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca311137d932ffb116ae40e05015daf1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_RANGE</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07cacf7fc04483bb3eee8459b28699d439a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_CLAN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8355e6beb612304df2d1e194146b3619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_VERSUS</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca3799033e929c15ba329065828fcb38ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>CHAT_VIS_TEAM</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a9de073bb847525edca0e9977a12da07ca8a78a82766d988523d12552f86886851</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>LogoutCode_t</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_UNKNOWN_MIN</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a7055f4b2966e4f6dcbc57779e90378a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_QUIT</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a84cfc137ccb674488bbd8ccf3b28406c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_CANCEL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75af898e5700a13e40bbfb99f168a7ff76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_SWITCH</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a9116879a6c9cf80094a48e39cb27d965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <type>@</type>
      <name>LOGOUT_CODE_UNKNOWN_MAX</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ade16ce877e5df692030e3543d76b1e75a1c949a28a2766bd9f780ae3f48f02b9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::CharacterLogin &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a3c69d977b9441c4029ee76566eb58545</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::InstanceAccess &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>abf70bcf5cf8570b6cd88e9c8ab587896</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::MatchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aaf3086a45c5e2a6f1ceb54bf4fc1f773</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::PvPMatch &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>af421043df61debc24b9aaa1dc95c848c</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ChannelSyncManager::SyncComplete&lt; objects::UBResult &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a788e7b90769ad53acd71e51ddc4d5b4a</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::EventCounter &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aa65cfae4f64ce7a09d7af466cec846d6</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::PentalphaMatch &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a50fcdfcff8b59e200df2ff35328fa33c</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::SearchEntry &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a8c43c37ab7136499fbb877011f2ee5db</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::StatusEffect &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>acfb1e41056a78d7920a93379b696b5e7</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ChannelSyncManager::Update&lt; objects::UBTournament &gt;</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a1a39b179ec4d960c064d9c98efaefc34</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>state</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a42a66bec35cf06d954702b2d0e1ecca3</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection)</arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALL</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>a7f9a8919790b4152a424ad64cefc2c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ALLY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>aeb94b90bc217b70b7aafe63080c8da98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint16_t</type>
      <name>AI_SKILL_TYPES_ENEMY</name>
      <anchorfile>namespacechannel.html</anchorfile>
      <anchor>ab142235686532c75b9b5c0a6c343a2cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AccountManager</name>
    <filename>classchannel_1_1AccountManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AccountManager</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a3f11cff6727eee92f9c7e77bc29d94dd</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AccountManager</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>aa62da7e8bf796004171eb77fd32a81af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Authenticate</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ae5347feb980ef454c870cd3dc23ad7e6</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>DumpAccount</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a7388a36f36155be16df6de413a9181b2</anchor>
      <arglist>(channel::ClientState *state)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::CharacterLogin &gt;</type>
      <name>GetActiveLogin</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a55324a3fa27371c5b7f8a7dbd4ba5ebc</anchor>
      <arglist>(const libobjgen::UUID &amp;characterUID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CharacterLogin &gt; &gt;</type>
      <name>GetActiveLogins</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a53f8a4a0d68ddf22bd305512c3f24aad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginRequest</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ac0ddf1d4cfcb0305f57394c8319a4bc9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;username, uint32_t sessionKey)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLoginResponse</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a9225d3ddd8415e4ba3d5b57c884d9fdf</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleLogoutRequest</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>aa8a760754d45e0f606080109c07495a0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, LogoutCode_t code, uint8_t channelIdx=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IncreaseCP</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a2e5e62d9183e63add2376f89da3efd79</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Account &gt; &amp;account, int64_t addAmount)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Logout</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>afbc2d10a8b71ec57bffcdb97314885f7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool delay=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ChannelLogin &gt;</type>
      <name>PrepareChannelChange</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ac316d393a292efefb2e60af350e5d3ad</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint32_t zoneID, uint32_t dynamicMapID, uint8_t channelID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestDisconnect</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a4f866014d0be308063bfbcebfcba61e5</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCPBalance</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a00f889f928b8780c4ca630e9120578ca</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLogins</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a50b05029e8daf3f98c0b76db8056b95a</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; objects::CharacterLogin &gt;&gt; updates, std::list&lt; std::shared_ptr&lt; objects::CharacterLogin &gt;&gt; removes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>InitializeCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>affad9a9ee35550c200b4905c799e5135</anchor>
      <arglist>(libcomp::ObjectReference&lt; objects::Character &gt; &amp;character, channel::ClientState *state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>InitializeNewCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a5e3e043fc1adb9ffad4ff4c91803e0ee</anchor>
      <arglist>(std::shared_ptr&lt; objects::Character &gt; character)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LogoutCharacter</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a7768e5fbe7b954f0ca7a0ef9510ea1e0</anchor>
      <arglist>(channel::ClientState *state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>WipeMember</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a9baf892e09af3fc4aaea83b22f006182</anchor>
      <arglist>(tinyxml2::XMLElement *pElement, const std::string &amp;field)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CharacterLogin &gt; &gt;</type>
      <name>mActiveLogins</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ac8e455984c1bc160c8691b3d5cb412a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, int32_t &gt;</type>
      <name>mCIDMap</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>abacddd1bd23660257be41795aa1d4bbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>a88c76507165baf91a28878487836e95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1AccountManager.html</anchorfile>
      <anchor>ace050d5a3c50d2e77ad4ed1377edfbaa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActionManager</name>
    <filename>classchannel_1_1ActionManager.html</filename>
    <class kind="struct">channel::ActionManager::ActionContext</class>
    <member kind="function">
      <type></type>
      <name>ActionManager</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3cfa89abb9ea4acb637d74667dd1f4d8</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActionManager</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ac80d3d645622551a98db65a649abe079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BindAllActionTypes</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa973f9f507a8583457c9b2eeb9a12629</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::ScriptEngine &gt; &amp;engine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PerformActions</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>adef8b4e5b6aa0a299e82ae412c19b720</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;actions, int32_t sourceEntityID, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr, ActionOptions options={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendStageEffect</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ace7eade274031f9649ee37a816ae5259</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t messageID, int8_t effectType, bool includeMessage, int32_t messageValue=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::String</type>
      <name>GetActionName</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a4e7b0d861616f37c130eb429a6461e7d</anchor>
      <arglist>(objects::Action::ActionType_t type)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>AddRemoveItems</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a1a4fe51f96aab5daa71c925bf588e805</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>AddRemoveStatus</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aafe1c12e96b140ed32761152da5cd9c0</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CreateLoot</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a5feb1d2157cf31f58ca3cda200f08154</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Delay</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a32abed1db8d4f1418f6ee6a5da4f0f38</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DisplayMessage</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>af95e783a2b240e1f7c1b4a07b1dd6891</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetAction</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa28a67be50ab3fffb0432cb0f16f79e7</anchor>
      <arglist>(ActionContext &amp;ctx, bool requireClient, bool requireZone=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetActionContextCIDs</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aef705fc28ce1dcbcc1117c73f78c0b44</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Action &gt; &amp;action, ActionContext &amp;ctx, bool &amp;failure, bool &amp;preFiltered)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GrantSkills</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ab30fb1ed6f27fd220d704641b65bd9d7</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GrantXP</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa9dad00ccdac1849a84bb6e28953ae8b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlayBGM</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa63591bcbb5afa65da4078541a8c9a0e</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlaySoundEffect</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>acc803393a1172989e944e8e5ac80911e</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PrepareTransformScript</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a98869bb68a66f5c6af3b568a448ee582</anchor>
      <arglist>(ActionContext &amp;ctx, std::shared_ptr&lt; libcomp::ScriptEngine &gt; engine)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RecordTimeTrial</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a9df4628c3350758b4551cb214a49af7d</anchor>
      <arglist>(ActionContext &amp;ctx, uint32_t rewardItem, uint16_t rewardItemCount)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RunScript</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a7b72da677f7ee6b43e73b6f1175daf9c</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetHomepoint</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a41ad59d6c2327a7fbf3f359757043b2c</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetNPCState</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>af907cf12270477b7cb48bd0fe353e181</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Spawn</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3f933d580a0b6a5c294b5a7f7384a68a</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpecialDirection</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a74dbe103c7e709f99246ae66fee05def</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StageEffect</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aa5cf34c7bd649612f75744d75243d9ac</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StartEvent</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a3b69f595d809e3983594a12440b3e98b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>TransformAction</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>ac2b6d6da70f256c55f27d865fe3f27b7</anchor>
      <arglist>(ActionContext &amp;ctx, std::shared_ptr&lt; libcomp::ScriptEngine &gt; engine)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateCOMP</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a563a779e10a2b918602ae88404a131cf</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateFlag</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a663bf4348cb29bc8b102cc478c812db3</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateLNC</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a2732666fd66322d10ac067d22559325d</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdatePoints</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>afd595de5db06e74b5602c29e9ef56984</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateQuest</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a07ab860edd2cb76da7db3f2a111ec8a3</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateZoneFlags</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a8723857a62ff382c86507d106b18909b</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateZoneInstance</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aeaac431fd6ef2a77acdbd6b4c62f17e4</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>VerifyClient</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a7d7d53e085a0e7e53e5be6042bc4c28e</anchor>
      <arglist>(ActionContext &amp;ctx, const libcomp::String &amp;typeName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>VerifyZone</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a439b209672e47a681dfe73c0ec255665</anchor>
      <arglist>(ActionContext &amp;ctx, const libcomp::String &amp;typeName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ZoneChange</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a001f8967603f9649cf4566dcc7a8e9b8</anchor>
      <arglist>(ActionContext &amp;ctx)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; objects::Action::ActionType_t, std::function&lt; bool(ActionManager &amp;, ActionContext &amp;)&gt; &gt;</type>
      <name>mActionHandlers</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>a8ea5c0be014b3a6b09922bde4c8f676f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ActionManager.html</anchorfile>
      <anchor>aec55776647ee50624af32cc2dc7dce47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::ActionManager::ActionContext</name>
    <filename>structchannel_1_1ActionManager_1_1ActionContext.html</filename>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::Action &gt;</type>
      <name>Action</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>a9d4a1d260597c62b2a04063755d9b7ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ChannelChanged</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>a99bee275efccb5c75aaa6437342c70ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>Client</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>a60742468c4b7f3c2b82e56e238b7e73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CurrentZone</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>aeb80296ebc93c0cca4440ef5867ed08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ActionOptions</type>
      <name>Options</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>a37fdf16e86fe1eb4f4bf42649fdf8604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>SourceEntityID</name>
      <anchorfile>structchannel_1_1ActionManager_1_1ActionContext.html</anchorfile>
      <anchor>ab56d32a5e016a3c20525014533af0158</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::ActionOptions</name>
    <filename>structchannel_1_1ActionOptions.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>AutoEventsOnly</name>
      <anchorfile>structchannel_1_1ActionOptions.html</anchorfile>
      <anchor>a83104132427c73dd0afb82883fb89761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GroupID</name>
      <anchorfile>structchannel_1_1ActionOptions.html</anchorfile>
      <anchor>ab6e78b22bcd3d00fa778c9a0d0511d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IncrementEventIndex</name>
      <anchorfile>structchannel_1_1ActionOptions.html</anchorfile>
      <anchor>ae4d53fb3c7ee2051ddd7486130ac7fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>NoEventInterrupt</name>
      <anchorfile>structchannel_1_1ActionOptions.html</anchorfile>
      <anchor>a48355c59c0e29e0e687d6e8fe117e260</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActiveEntityState</name>
    <filename>classchannel_1_1ActiveEntityState.html</filename>
    <member kind="function">
      <type></type>
      <name>ActiveEntityState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a005c58b0a1a9cc6d4cf33072314e29dc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1945edacc9db9dd0c0b8fc57ef0ba5a</anchor>
      <arglist>(bool add, int32_t opponentID)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>AddStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aba58732679fa8a5eb213e10f91cdb9d2</anchor>
      <arglist>(const StatusEffectChanges &amp;effects, libcomp::DefinitionManager *definitionManager, uint32_t now=0, bool queueChanges=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanAct</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae18bb9a1c3476876a23040c08b5ce37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a4331290028f12e75bb68a8c43f9c70d6</anchor>
      <arglist>(uint8_t cancelFlags, const std::set&lt; uint32_t &gt; &amp;keepEffects={})</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>afe8b80b8e8be8049e489c54357b972ca</anchor>
      <arglist>(uint8_t cancelFlags, bool &amp;cancelled, const std::set&lt; uint32_t &gt; &amp;keepEffects={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CanMove</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a92af0a795e9a6417f5c641fa023f69b1</anchor>
      <arglist>(bool ignoreSkill=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0f3cbf3d51cfd985f4767b9ba7fc47f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>ExpireStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aaa1b0f24f6da40059569669f7c9820f7</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireStatusTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a209bb96b9316bf12724e0a48891acc97</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; channel::AIState &gt;</type>
      <name>GetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7683912a1ff2b1a5dd162b5441a7dcc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d6d36cbc13f6afee27eac6ad1545a2e</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a0bae772edcb18a6edf81681b0331dd25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetCorrectValue</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa960f7643649ac1fc26d8baef048f5df</anchor>
      <arglist>(CorrectTbl tableID, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::pair&lt; std::shared_ptr&lt; objects::StatusEffect &gt;, uint32_t &gt; &gt;</type>
      <name>GetCurrentStatusEffectStates</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a082941f1b6a6490af8c998569d466cbc</anchor>
      <arglist>(uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a38d4d0eba28e2c3dec7bee89df6c244a</anchor>
      <arglist>(float x, float y, bool squared=false)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2a3753c4a780197d2b8c43e1f959656d</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; other, bool squared=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EnemyBase &gt;</type>
      <name>GetEnemyBase</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1a0a70754e46f5cff95bcca5c0269cf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetEntityLabel</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af82c35e89d8cc070c1f24f0870154ef5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>acef6b10c4095a4b2d0ed8b5f3ff94a5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetGender</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ababe0ede1ea5da1743b75d4fe777ceea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetHitboxSize</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a53a04820ef536c672e5f9ea286a27c5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a08e72e53b6f2cbf66bec87a745892b14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae1582e47b378c99a62134ebd97b68d3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetMovementSpeed</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab8b95f2b0ecfff133db2ed7f7c4507b7</anchor>
      <arglist>(bool ignoreSkill=false, bool altSpeed=false)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>GetNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3d841d6660fa605b5ca4f5628ec0c667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>GetNRAChance</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac468fcaa3b7dd039c9924d1ef55e880a</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetNRAShield</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad625c1296e162ee407df0fcc2372d656</anchor>
      <arglist>(uint8_t nraIdx, CorrectTbl type, bool reduce)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a28eb0b46ea358d21487b2f855ef3bfd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt; &amp;</type>
      <name>GetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af08840e2fef8a61e0737b61a85bb9c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>GetStatusEffectsList</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a57012989ddbf3bc71465d6e13a87d5b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetWorldCID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1affddaf0599c0919967a50abe90fe5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab75cc6f82b822318ec0816b6ccebd30a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasActiveEvent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a71e5a4766251e81c81d7b6a6859c7b17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasLineOfSight</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a113a18be30a1b1c5f6943a9c4b4e3072</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; other, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasOpponent</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad2260cd031d413d44dd727a014cffc8a</anchor>
      <arglist>(int32_t opponentID=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasSpecialTDamage</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a60addaa5f35d61de307f97e6d721f3a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6edd9f3b8abd577890af858d5dc85dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a08c6e8bda866b24fe4ec707916ee9835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae897ad90fe5cb5f505f2de5a0da374c7</anchor>
      <arglist>(uint8_t lncType, bool invertFlag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMounted</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa7fdca1bee42464504044f18033db082</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMoving</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa86a6658fd24aeafde4b18c0c97d0433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsRotating</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af995e3c25687f8b2692dc523f08c04b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae83be0aeee9a600a99286fc1db8fc8d1</anchor>
      <arglist>(float xPos, float yPos, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>PopEffectTicks</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae8c04fbb09ae73577e5645520a813ed0</anchor>
      <arglist>(uint32_t time, int32_t &amp;hpTDamage, int32_t &amp;mpTDamage, int32_t &amp;tUpkeep, std::set&lt; uint32_t &gt; &amp;added, std::set&lt; uint32_t &gt; &amp;updated, std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1f03eb29a5e6c720d5eb4b1d82b79e66</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a709fbd72392bb6fb0606df5f13a2d433</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshCurrentPosition</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad58ca1704077c66eae6e6cfa5f93d137</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>RefreshKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1a75b77d1b38fd045e3ecc517312515f</anchor>
      <arglist>(uint64_t time, float recoveryBoost, bool setValue=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ResetUpkeep</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7be9eb0d1a6cbd7655e1ac4b482c719c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Rotate</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae22c1b7e0c0ff0217bf4d5d255e4db13</anchor>
      <arglist>(float rot, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SameFaction</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a05f0174c7e246443137f1dc19c790f6e</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; other, bool ignoreGroup=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a23f9604c12ecf053dab3cb4511c7a624</anchor>
      <arglist>(const std::shared_ptr&lt; channel::AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6616f760c961b349baf3b81d0bea31dc</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetHPMP</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7c6d6218e677353ee81718c7a821be17</anchor>
      <arglist>(int32_t hp, int32_t mp, bool adjust, bool canOverflow, int32_t clenchChance, int32_t &amp;hpAdjusted, int32_t &amp;mpAdjusted)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad4a4503b76019db49cee92789f52d1aa</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;effects, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ad037282b3c14165da135e4205658a951</anchor>
      <arglist>(bool activate, libcomp::DefinitionManager *definitionManager, uint32_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a30007b72d6e529ca1bb069a699f4ed31</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool updatePrevious=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillAvailable</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7aaf79e1f896744447d2db61abb9c9ec</anchor>
      <arglist>(uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StatusEffectActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a66373f6e734d08d98400922574d0c269</anchor>
      <arglist>(uint32_t effectType)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>StatusEffectTimeLeft</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6337303e95a879e3f2ddf89a433b31bc</anchor>
      <arglist>(uint32_t effectType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2cad211a8af9bca5239ab9f7579f3120</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>UpdateKnockback</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab4c9670f327a31be928b619b000110d4</anchor>
      <arglist>(uint64_t now, float decrease, float recoveryBoost)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdatePendingCombatants</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a31ee7880b058b90a2615d3878a03cf21</anchor>
      <arglist>(int32_t entityID, uint64_t executeTime)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>CorrectRotation</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2d02b85123163c97fd1e593eb514640b</anchor>
      <arglist>(float rot)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ActivateStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a002f85b0ac7e3213d13cce85ae1a5b1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager, uint32_t now, bool timeOnly)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>AdjustStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>afcf12f33c83376915d7728b834b29b8e</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool baseMode)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ApplySkillCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a39b247173f75ddd86b8e53a17f1948c4</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;skillIDs, libcomp::DefinitionManager *definitionManager, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CalculateLNCType</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a34960657093fd4872631e886df4998e2</anchor>
      <arglist>(int16_t lncPoints) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af6315e2b27717d24f41251080cb64528</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, bool dependentBase)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>CompareAndResetStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a54a04a8b69dff5a6ca48a5d5def3bff1</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>GetAdditionalCorrectTbls</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab86098663072654483f975e02c197f93</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetAllEnemySkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa14ac6caa71abd175b26bb045fb9642a</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetCurrentExpiration</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aa435684cdf90e4ae5a7fb854b7dfaa20</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, uint32_t nextTime, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetEffectiveTokuseiSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af5d0540419e8c3d02bb6485603c81133</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>IsIgnoreEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>afe36f9e443859fee92e3bd6030be41a1</anchor>
      <arglist>(uint32_t effectType) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateDemonStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a61dea050a4a491d33cfccb0ed8ae9173</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint8_t</type>
      <name>RecalculateEnemyStats</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a29aaba71d7147423c298140e31c623ef</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>abb971ac4a2f29be3a316a5e12a4b51bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RegisterStatusEffect</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a32351966f69a1e966f0e164303af38cc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::StatusEffect &gt; &amp;effect, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveInactiveSwitchSkills</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7b31da8ab8cf7529a93ae5ab43d8e6cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RemoveStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af048315581b26430c0dc62d15d5078dc</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;effectTypes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ResetAIIgnored</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a40bb233a7f3ec7c95435a657fa001f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetNextEffectTime</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>af9d56a631bf512f8ac22671e78fb3864</anchor>
      <arglist>(uint32_t effectType, uint32_t time)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>UpdateNRAChances</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a3e8ede8e76fe432499fb52e085d5bd06</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, const std::list&lt; std::shared_ptr&lt; objects::MiCorrectTbl &gt;&gt; &amp;adjustments={})</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; AIState &gt;</type>
      <name>mAIState</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aafcef9fb7f80ea09775a6f00a008ee11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mAlive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab1f143a1f6904fd063477232e7477b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint8_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mCancelConditions</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a2878947ed3b4a723ba1804841658323b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mCloaked</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>add88a942ff9ec13c89d46227f83d91dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>mCurrentZone</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a1dc568369cb1ff4d78a9db83c08375f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEffectsActive</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ae7e6dc8b0b6c2ecf09c634c1e7cb701f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInitialCalc</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ace2da752766739a6149fc2b07b158d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mLastRefresh</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ade34713c4aec7ca929822a292b0223d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8ba2ead908829f41707bdd3b36bcbb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int8_t</type>
      <name>mNextActivatedAbilityID</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a201d4512bc8abb8059a6589999a48bdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mNextEffectTimes</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a7cec5b66c750593b2ad1f2b86c03e233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mNextRegenSync</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>aaad4978f16454c47783e174e4d21ba02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mNextUpkeep</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a27936b8930812dbdd8861de0c5c8faab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, libcomp::EnumMap&lt; CorrectTbl, std::set&lt; uint8_t &gt; &gt; &gt;</type>
      <name>mNRAShields</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a203b30260e6d7f760c0b8071b6babc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mOpponentIDs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ac62ddc39f590dd556479f21152f0fb47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::MiStatusData &gt; &gt;</type>
      <name>mStatusEffectDefs</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a6f0262e5b32574af88833c30649b3d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::StatusEffect &gt; &gt;</type>
      <name>mStatusEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>a8339cd0b835314682a8419496ab3ff94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeDamageEffects</name>
      <anchorfile>classchannel_1_1ActiveEntityState.html</anchorfile>
      <anchor>ab6b71c46b84f4cb073667dd823ea0491</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ActiveEntityStateImp</name>
    <filename>classchannel_1_1ActiveEntityStateImp.html</filename>
    <templarg>T</templarg>
    <base>channel::ActiveEntityState</base>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a2b24cbd66ea4e0194910ebacead33267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aacae6683676d5d1ec9f49f72c1eb5625</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a39b42861e63a05dd6c11dcd8ac5004f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab51eee35c1b7174393cb436c6665c053</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ab82dce53e20c80be85b55bbd073cab8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ActiveEntityStateImp</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>af82a70fc29cf981e70f1b7b1ec833765</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a8442d8bcb34f5442384a0d2c224e0845</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a12ae6b01d350e4513bcb3cacd1661e7d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a296f084ac9577b9e3bf5203a8705a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9c0945d79caee1c3c1ef8ec816ea23fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa7892d3d3a2732e143c4c56144703b1d</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a169032908dd2b6129c8322f485b3360f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a90220abd251aebc22f1439ffda100985</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>ac4b3a69a7a3341efa470e66f30e6751c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aaac584ce892b88ffb71006ca9563bcc3</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Ally &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a287ca63507001a26ac4e3f954d92f363</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AICommand</name>
    <filename>classchannel_1_1AICommand.html</filename>
    <member kind="function">
      <type></type>
      <name>AICommand</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>aba0acf59c3ff167a6e03a3ab101e1920</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AICommand</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a489e8fde7eeab6f2585924cabada7ef8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ab101e10bc85b83f9519a220f80dbc2b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetIgnoredDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a749348c63968d7387c36222aa937d1ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetStartTime</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a8d740a87421b7c0e71a01801b3a634ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetTargetEntityID</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>aa157f82bc73863ed1cb9ea3eeb2618cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AICommandType_t</type>
      <name>GetType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>ac770cd7345a7cb02befb6143097f13b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>accdaf0ca0a5f4a5fb9ca0a298d843918</anchor>
      <arglist>(uint64_t delay)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetIgnoredDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a0e22333b78e56fe01da48bf482a0248e</anchor>
      <arglist>(bool ignore)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetEntityID</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>acd11390662c71e608520663043dc74e1</anchor>
      <arglist>(int32_t targetEntityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a7b47c1e8c12cf485f4a85d2288f47313</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a09b7fb5df9a176691c3d06a6a77e0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mIgnoredDelay</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>abd1f1c082f5508407fdbdb46d4887299</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint64_t</type>
      <name>mStartTime</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a734392c618a2d1314df456b403e39c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>mTargetEntityID</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a4e984be6a9dbdc4e97e2fbce250b9a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AICommandType_t</type>
      <name>mType</name>
      <anchorfile>classchannel_1_1AICommand.html</anchorfile>
      <anchor>a45e5dfbf56e2c66d9f31e1eed21b629e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIManager</name>
    <filename>classchannel_1_1AIManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a02d9effe0270bd2a353acdf45f11b360</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a936b03d8bc5724c5fd1f3d2b41285f9c</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AIManager</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a07762cbbf5de6bffd7499f86987a8dd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Chase</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>aa75b37a292d4b6b0c9e19f9fbd13ac2c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int32_t targetEntityID, float minDistance=0.f, float maxDistance=0.f, bool interrupt=false, bool allowLazy=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Circle</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ae00a5efe707407a488550dc9555ea9bf</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float x, float y, bool interrupt=false, float distance=800.f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CombatSkillComplete</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ae4fea93034bb46b5b9e6b64281395c99</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;target, bool hit)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CombatSkillHit</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ab5cfeba99958b7ff226eeb924202aadd</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Prepare</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>abc5c47fef1a6ec6fafeeb72e6cca64d9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const libcomp::String &amp;aiType, uint16_t baseAIType=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>QueueMoveCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a6f8fe3e673095e8802a6917bebaef8a5</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float x, float y, bool interrupt=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueScriptCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a2028571e34f5f80fd84cdf1e53b47c0b</anchor>
      <arglist>(const std::shared_ptr&lt; AIState &gt; &amp;aiState, const libcomp::String &amp;functionName, bool interrupt=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>QueueUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a8ac14d8a29c13fb568b64196b21d60f0</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint32_t skillID, int32_t targetEntityID, bool advance)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueWaitCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a9b35876091537c43cfce6644dd629d2e</anchor>
      <arglist>(const std::shared_ptr&lt; AIState &gt; &amp;aiState, uint32_t waitTime, bool interrupt=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Retreat</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a9ad3389a14543eb28c99585c5f959570</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float x, float y, float distance, bool interrupt=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartEvent</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a6e0969f3674788f47e9fe9c55eb0fdc0</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const libcomp::String &amp;eventID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateActiveStates</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a9d0d87c3d8f3cb923c65ce5990c37274</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateAggro</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a4f99a666426486d998c7a1ec3eaef194</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int32_t targetID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseDiasporaQuake</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ac460527d27a036bc68001730c51966c7</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, uint32_t skillID, float delay)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddRemoveAggro</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a7c36809dc7ad3068ab1d5a18b338c960</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int32_t targetID, bool remove)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanRetrySkill</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>aaa969365abc8fd2f4e43f647fd3e023e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CombatStaggerEnabled</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5df7e71f3c98f0b14db1ccd95964752f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteScriptFunction</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>adff2a27355971b0e345d2c1955e2ca59</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const libcomp::String &amp;functionName, uint64_t now, T &amp;result)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Follow</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a4c4a1a8e3faacb7b3064d9a3952601d5</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint64_t now)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; AIMoveCommand &gt;</type>
      <name>GetMoveCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>adaea747d0ba1b860a5cb63302e3f8b7f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const Point &amp;dest, float reduce=0.f, bool split=true, bool allowLazy=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>GetSharedAggroEntity</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a8e52e27ddb7ec1aac6ed870027a5b8ff</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>GetWaitCommand</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5d610e35d974216d237bcd58ae31d74d</anchor>
      <arglist>(uint32_t waitTime) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LazyPathingEnabled</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>af271053c7fa02b63d7bb38f055eace4d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Move</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a35b130193ccdb5d00858fc66e1b2b348</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, Point dest, uint64_t now)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PrepareSkillUsage</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a3a334cc6f9d1e2d27d5defd31df86d5a</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RefreshSkillMap</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a5152cbb62f5e1e068c3560530ac4059c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; AIState &gt; &amp;aiState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>Retarget</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>af9901d176396676d839688154961d67c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;state, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>SkillAdvance</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a9d467d921b5da7fc2c534386121ddfb8</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, float distOverride=0.f)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SkillIsValid</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a2c25c37b94246160b8506d01438442f6</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateEnemyState</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>adc3be3619495ef2cc7535c743fe8e721</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::EnemyBase &gt; &amp;eBase, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>UpdateState</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ab962be2a02d62bb195bee4cb602401d6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint64_t now, bool isNight)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Wander</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>af5aea1848101ef28a2367485bda9e2a7</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::EnemyBase &gt; &amp;eBase)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>ad28f5cf4474c3cc881c947f829d8331c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; std::string, std::shared_ptr&lt; libcomp::ScriptEngine &gt; &gt;</type>
      <name>sPreparedScripts</name>
      <anchorfile>classchannel_1_1AIManager.html</anchorfile>
      <anchor>a3a645806683e14818bf1061f61d0a13b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIMoveCommand</name>
    <filename>classchannel_1_1AIMoveCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIMoveCommand</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a1acc6135b823e0d9eedf9af6c36c2378</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIMoveCommand</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a9b22dbaa6f53cf31c67caef83d50fa4f</anchor>
      <arglist>(int32_t targetEntityID, float minimumDistance, float maximumDistance=0.f)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIMoveCommand</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a1a8de14b6b8ea0940812e26828e0d380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetCurrentDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a3f5487a127d2fc4ed3d85f8ddfd7dcd6</anchor>
      <arglist>(Point &amp;dest) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetEndDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a537e3ee273740f1e26d786e067b031de</anchor>
      <arglist>(Point &amp;dest) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; Point &gt;</type>
      <name>GetPathing</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a4434959241eecc97ff926d0e18d6fdf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetTargetDistance</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a7a752d123af9de8c0da436f43d2c264b</anchor>
      <arglist>(bool min) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetNextDestination</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a11e7822a7777d9152cb0119e5698fea6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetPathing</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>ae289e164c94b9ee2737a6ade8d6d77a6</anchor>
      <arglist>(const std::list&lt; Point &gt; &amp;pathing)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTargetDistance</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a27557da2db52e5bbb06dac8374d0d3cd</anchor>
      <arglist>(float distance, bool min)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>mMaximumTargetDistance</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a57a7ac2fda6f56f973d2d9045e118148</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>float</type>
      <name>mMinimumTargetDistance</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a12dab89c64eb0373403d41cb95e957b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; Point &gt;</type>
      <name>mPathing</name>
      <anchorfile>classchannel_1_1AIMoveCommand.html</anchorfile>
      <anchor>a9e16822138f18eb0fb5dd07cfad40a4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIScriptedCommand</name>
    <filename>classchannel_1_1AIScriptedCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIScriptedCommand</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a615aa31fb22b9080669aa92b881518ec</anchor>
      <arglist>(const libcomp::String &amp;functionName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIScriptedCommand</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a6655fc91a28a42094baa8270b162e827</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>GetFunctionName</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a18b622e338f5920109f8ee2f0b4142f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::String</type>
      <name>mFunctionName</name>
      <anchorfile>classchannel_1_1AIScriptedCommand.html</anchorfile>
      <anchor>a2667640811991adbef83895d77a6f92c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIState</name>
    <filename>classchannel_1_1AIState.html</filename>
    <member kind="function">
      <type></type>
      <name>AIState</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a830d0023e393a343ee80ee797bd9281b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ClearCommands</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a3b87b227233104dea27e60eb4bfeb540</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetAggroValue</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ac0df4666db6d1eead403dca9b36db713</anchor>
      <arglist>(uint8_t mode, bool fov, float defaultVal)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>GetCurrentCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a42c29eaa6b757ecb124a2cb897ee4e94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDeaggroDistance</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a2c2234fe71a619840dce8e01512315d8</anchor>
      <arglist>(bool isNight)</arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetDefaultStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a653fc8203ee078b37980948efff9a427</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetPreviousStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a23447bccd6d7ff3aa75a0fe3bdb5ee98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::ScriptEngine &gt;</type>
      <name>GetScript</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a2d1c5044d04563652002913df7056d07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AISkillMap_t</type>
      <name>GetSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ae2620825639284452c555c14c139dc3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIStatus_t</type>
      <name>GetStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a0ed60975725b6a489898191d7a122a0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasFollowTarget</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a6da80ccc3189a889f01411b4cec4359e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>InCombat</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>aed1b70f956c3afd4fe9e46964b560de2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsAggro</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a4859a58639d6ad8803f1505dada6a0cd</anchor>
      <arglist>(bool includeCombat=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsFollowing</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a3d07fe710243d4b2e9ea3fc72f5217ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsIdle</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a4661008aa8028e2043776c4315e3cae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsWandering</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ae3d276455e494e312b570fe3c824c755</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>PopCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ac2b0aa4a6a6b6cf92098959b7eb0183e</anchor>
      <arglist>(const std::shared_ptr&lt; AICommand &gt; &amp;specific=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QueueCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ac2145caf6fb095cfe1615fc28479e51f</anchor>
      <arglist>(const std::shared_ptr&lt; AICommand &gt; &amp;command, bool interrupt=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetSkillsMapped</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a25a32344df4223e462646cffe31748ba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetStatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a79e0904246cd72fc91d8da1d3b95c374</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetScript</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a34a511be8bfd864f44159ebb03fe26fd</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::ScriptEngine &gt; &amp;aiScript)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a42802169ede1fac39708497fe52e4624</anchor>
      <arglist>(const AISkillMap_t &amp;skillMap)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a107642e337f877e7a0e65a8e0698d673</anchor>
      <arglist>(AIStatus_t status, bool isDefault=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ab5b615ed4f414d7614fe184ea42cd7fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libcomp::ScriptEngine &gt;</type>
      <name>mAIScript</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a79aebdfae1e3972d712492f1223c2152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; AICommand &gt; &gt;</type>
      <name>mCommandQueue</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>ab734433638e2d741d49e44daa60ed171</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; AICommand &gt;</type>
      <name>mCurrentCommand</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a1199af1a1dbfe0a39fd4cae4423659d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mDefaultStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a0039dd0b0e9134383318ccf77caab1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mPreviousStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a8b2e5766a4901fddb77c03f262dbcd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AISkillMap_t</type>
      <name>mSkillMap</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>adfba3b451e1ab32c4afdabd76b1ee7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AIStatus_t</type>
      <name>mStatus</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a4b84be60ef7078e4e488c537cd992d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mStatusChanged</name>
      <anchorfile>classchannel_1_1AIState.html</anchorfile>
      <anchor>a1a0fd13425c218661d6ed9f9f4f6b02b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AIUseSkillCommand</name>
    <filename>classchannel_1_1AIUseSkillCommand.html</filename>
    <base>channel::AICommand</base>
    <member kind="function">
      <type></type>
      <name>AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>a5029e7bed29d80c644967bd6eb9a028e</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, int32_t targetEntityID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>aa64237ab7007c89d400c9a9fa3f4ca60</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AIUseSkillCommand</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>a0ba92de78010be3390f74dbfe2271184</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>GetActivatedAbility</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>aa9a5608e01fe3c0400a161daeb495b0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::MiSkillData &gt;</type>
      <name>GetSkillData</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>afe8c9c559bb1c5ad42ba1ff47da40f6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetSkillID</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>add7f92c3fa78adf5b7ad2386e4f6d983</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetActivatedAbility</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>ab4b3ae26f5ea5264f9d1f9ac5bf29114</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>mActivated</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>ae85ba79c0248ea6e936bed406b6de41a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::MiSkillData &gt;</type>
      <name>mSkillData</name>
      <anchorfile>classchannel_1_1AIUseSkillCommand.html</anchorfile>
      <anchor>adfe53a230589a46a00ad6d82c3592a09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::AllyState</name>
    <filename>classchannel_1_1AllyState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Ally &gt;</base>
    <member kind="function">
      <type></type>
      <name>AllyState</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>a8bcb46fe584ec90aa16c85ef3ae32f06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AllyState</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>ad7b2d3d054e485c575cbabae96b1b77f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a8442d8bcb34f5442384a0d2c224e0845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>ac6773fe30146ecf1ca1ba52fa1c1ab52</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EnemyBase &gt;</type>
      <name>GetEnemyBase</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>a4925893c62bd45fb8e432e0ca39edd0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Ally &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a12ae6b01d350e4513bcb3cacd1661e7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetGender</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>ad3eabab1fb49329c5e94ddea524bb365</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a296f084ac9577b9e3bf5203a8705a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>a33581ec1c0b7a3106e13eee35d69b90c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9c0945d79caee1c3c1ef8ec816ea23fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>a00693cd233b0cad87c7fd3efbef83178</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa7892d3d3a2732e143c4c56144703b1d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Ally &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; AllyState &gt;</type>
      <name>Cast</name>
      <anchorfile>classchannel_1_1AllyState.html</anchorfile>
      <anchor>a4356f5816681334f49e11826a2fa2edb</anchor>
      <arglist>(const std::shared_ptr&lt; EntityStateObject &gt; &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::BazaarState</name>
    <filename>classchannel_1_1BazaarState.html</filename>
    <base>EntityState&lt; objects::ServerBazaar &gt;</base>
    <member kind="function">
      <type></type>
      <name>BazaarState</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae5829af1507be183a0cec2680fcad09c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerBazaar &gt; &amp;bazaar)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BazaarState</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a70ced0af5436bcf86e5fdb47d476a457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a821264eee62b404a3bd05e5a9d7383f7</anchor>
      <arglist>(ClientState *state, int8_t slot, int64_t itemID, int32_t price, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BuyItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>abd299a1b946beb69b70d1f6f1cc75723</anchor>
      <arglist>(std::shared_ptr&lt; objects::BazaarItem &gt; bItem)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::BazaarData &gt;</type>
      <name>GetCurrentMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1a23a0d9e5e872c8f85c0388aa4437b6</anchor>
      <arglist>(uint32_t marketID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ServerBazaar &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCurrentMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>ae036bc95372e1e6c59b6d0c530d5b086</anchor>
      <arglist>(uint32_t marketID, const std::shared_ptr&lt; objects::BazaarData &gt; &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::BazaarItem &gt;</type>
      <name>TryBuyItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a071f3b0259e55f148041453da7f044a5</anchor>
      <arglist>(ClientState *state, uint32_t marketID, int8_t slot, int64_t itemID, int32_t price)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>DropItemFromMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>af9511269ee2b3fbaa43116402bb33315</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DropItem</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>aac6faae1a53ac0549fb390abadd708fb</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>VerifyMarket</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1d67929c18d7b8f657a7eab3c27dac7b</anchor>
      <arglist>(const std::shared_ptr&lt; objects::BazaarData &gt; &amp;data)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>DropItemInternal</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a1267be7679dce35181b873f6219ec042</anchor>
      <arglist>(ClientState *state, int8_t srcSlot, int64_t itemID, int8_t destSlot, std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;dbChanges)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::BazaarData &gt; &gt;</type>
      <name>mCurrentMarkets</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a2b7e44435fd4590abed1e164758a27f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1BazaarState.html</anchorfile>
      <anchor>a031277baa9e6ef8439b08c61df8921aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelClientConnection</name>
    <filename>classchannel_1_1ChannelClientConnection.html</filename>
    <base>libcomp::ChannelConnection</base>
    <member kind="function">
      <type></type>
      <name>ChannelClientConnection</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>ab56a1226a7083fa45952370c79d3019c</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket, const std::shared_ptr&lt; libcomp::Crypto::DiffieHellman &gt; &amp;diffieHellman)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelClientConnection</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a37c741edfcf46c98df96f076804e2c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ClientState *</type>
      <name>GetClientState</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aba7a329ed64fbedb5050e8b631887385</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>ab0a14eefb42d36b1df8d33453005126d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Kill</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a1496e2c1ff0642e2ed5e8f38fa139424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a4d5f6eb4ecd7d1adeb9252fd91d572a8</anchor>
      <arglist>(uint64_t now, uint16_t aliveUntil)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a6ef55de5b3edab204ca4fc3ccd9d472b</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, libcomp::Packet &amp;packet, bool queue=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>BroadcastPackets</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a75091b8b14080a3bfeae43205ebc38a8</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, std::list&lt; libcomp::Packet &gt; &amp;packets)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FlushAllOutgoing</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aa3fbaac7f4a58c36a0314d7244a19250</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>SendRelativeTimePacket</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aea7c16f82fd6f26751493b67e3b9bef5</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, libcomp::Packet &amp;p, const RelativeTimeMap &amp;timeMap, bool queue=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ClientState &gt;</type>
      <name>mClientState</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>aa79ead40199ba154b969081b92916318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mTimeout</name>
      <anchorfile>classchannel_1_1ChannelClientConnection.html</anchorfile>
      <anchor>a4e3e1f354b8e90ef4f096ed7bbf304e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelServer</name>
    <filename>classchannel_1_1ChannelServer.html</filename>
    <base>libcomp::BaseServer</base>
    <member kind="function">
      <type></type>
      <name>ChannelServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a345555654aab382c26928ee393c10e5d</anchor>
      <arglist>(const char *szProgram, std::shared_ptr&lt; objects::ServerConfig &gt; config, std::shared_ptr&lt; libcomp::ServerCommandLineParser &gt; commandLine)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ad011c5d94cae61f3f1abb8dd5e39d5a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Cleanup</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a5f7eaa961e26e6da8b0068c12fb3219d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>AccountManager *</type>
      <name>GetAccountManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2f31062a43ec96dc441957bc09b66e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ActionManager *</type>
      <name>GetActionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aded5d71e3d0833613de8e3239f2a90b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>AIManager *</type>
      <name>GetAIManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6be3423c47561212e7aaff5b55404025</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; objects::RegisteredChannel &gt; &gt;</type>
      <name>GetAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab6913a3dafb51d079216fd53a98b0088</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetChannelID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a300eebcf7430536ee6e2f5d37d1e84a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ChannelSyncManager *</type>
      <name>GetChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a97cc63d98b46baf8030c6e90552e3b7a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>CharacterManager *</type>
      <name>GetCharacterManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a01ec52bcd8e51455bf9fe48abed512c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ChatManager *</type>
      <name>GetChatManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa39e2c0486b44f51d8c1074b6b39d2e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PersistentObjectMap</type>
      <name>GetDefaultCharacterObjectMap</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa8d74ab162cc698cac5748390da474c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::DefinitionManager *</type>
      <name>GetDefinitionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aacd7b273b283373056ad42d7c4dae0ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EventManager *</type>
      <name>GetEventManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a244bb51b0a5abb52f9f6d17df3bf909e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FusionManager *</type>
      <name>GetFusionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ac551d6e218df8e10b2a2f215fbcb15f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>GetLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab915200294d11b0f5d79029ee7fd9f74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ManagerConnection &gt;</type>
      <name>GetManagerConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a50ccb06823904b53406446e7e09102c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MatchManager *</type>
      <name>GetMatchManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a15412664d598f360ca5ba0331409791a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetNextEntityID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a981d3f4fd9bfca170dcb7e6ea0834174</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetNextObjectID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a33f5349eb73ed0bef4287ec9bd752086</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetPAttributeDeadline</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a541bb714eaad630b3a1dfb25d20884c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; objects::RegisteredChannel &gt;</type>
      <name>GetRegisteredChannel</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a4ead68debbb31e771c6863a54180bb0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::RegisteredWorld &gt;</type>
      <name>GetRegisteredWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a610ec407260c680565bc2afafa455445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::ServerDataManager *</type>
      <name>GetServerDataManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a10687cbb8559d3955f1acaa965567fea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetServerTimeOffset</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a43019288662382d1fb8a528ea14a1f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SkillManager *</type>
      <name>GetSkillManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a751fb9214894f350e7755fe616d18a32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TokuseiManager *</type>
      <name>GetTokuseiManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aba74eb2545f1249d1b7a115b95354897</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const WorldClock</type>
      <name>GetWorldClockTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a22dc9aacc059ab39839d2136dd5184e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>GetWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7942e5878f1183e0f0a88504692ad74b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::WorldSharedConfig &gt;</type>
      <name>GetWorldSharedConfig</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a4236b0aea223d864f90da34b8a67ba8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ZoneManager *</type>
      <name>GetZoneManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>add8755ff0b0fae5d89d640de553c78e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleClockEvents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a5fad40c4909c15d2a568c55eadeec163</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleDemonQuestReset</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6ae3ccb4aa44e8d3ccfba4888a3ee3ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a29f9ad23185a05488f2a5824773abd6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a11ab381b1872d597ab82101e547ecccb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterClockEvent</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a69b4df89220c910c2f893b88cd683c5d</anchor>
      <arglist>(WorldClockTime time, uint8_t type, bool remove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RegisterServer</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae969a02d9e51783d8ba4f239ca8e5e35</anchor>
      <arglist>(uint8_t channelID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RegisterWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a99fed75a086016efe1ee4917c14979d0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::RegisteredWorld &gt; &amp;registeredWorld)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScheduleRecurringActions</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>af77dc5a2def313933ae2ceefb67c6c50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ScheduleWork</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3f46322193991c26d4f4ef079c6c00f9</anchor>
      <arglist>(ServerTime timestamp, Function &amp;&amp;f, Args &amp;&amp;...args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendSystemMessage</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3d0fe62af223acc61855de614359ca69</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, libcomp::String message, int8_t type, bool broadcast)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3a5a6e9f5d11051f052f8858e0d60b33</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Database &gt; &amp;database)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTimeOffset</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>adfe2acb833b336f979786cf7ae896648</anchor>
      <arglist>(uint32_t offset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>af6dd91bd20cde79347ae9f2b34b17206</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::Database &gt; &amp;database)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Shutdown</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6a99648dc49a207a83de662a90a056cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartGameTick</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>afcb1bb264243548a4a40484526cf2506</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Tick</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a577d8be08b656ac7ced875bb27bdcf9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int32_t</type>
      <name>GetExpirationInSeconds</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a234227630f4670180786b68a0c9ba43f</anchor>
      <arglist>(uint32_t fixedTime, uint32_t relativeTo=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a92045fa1aaa248fb9bfdab9f3ecb2753</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; libcomp::TcpConnection &gt;</type>
      <name>CreateConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a255bbd33606e2aa20c41219b7eb2fca5</anchor>
      <arglist>(asio::ip::tcp::socket &amp;socket)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>uint32_t</type>
      <name>GetTimeUntilMidnight</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab2cfeb08af58064b13eb5946bb840328</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>RecalcNextWorldEventTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>acd027ac951c6576c1257311f8221a505</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTimeHighResolution</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab5162e52342c8e17481d9f4461a9ec7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static ServerTime</type>
      <name>GetServerTimeSteady</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7624fd49f864a73ba5a746d009ba6063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AccountManager *</type>
      <name>mAccountManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aec38e742f9345bb699c6d29c21a632d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ActionManager *</type>
      <name>mActionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae1f6d84d3f6a1848c9fcfb3fcbe67484</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>AIManager *</type>
      <name>mAIManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a0a23bf092485a898442460bdb4e550b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; objects::RegisteredChannel &gt; &gt;</type>
      <name>mAllRegisteredChannels</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a28e7916099524ec9fb7857e56dcbe790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CharacterManager *</type>
      <name>mCharacterManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ae243bedb5b765eeb08dc037396f0560f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ChatManager *</type>
      <name>mChatManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a4ffab65643134d8c9edcb79f6e51c801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PersistentObjectMap</type>
      <name>mDefaultCharacterObjectMap</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>af180d3a96cc3853181df1a79fde9cf72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::DefinitionManager *</type>
      <name>mDefinitionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3c0c4f368b6b402125a1dcb250fef837</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventManager *</type>
      <name>mEventManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a656505fbc8826f59e2dac63cde820055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FusionManager *</type>
      <name>mFusionManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a075b6158f29c49304ee6265670fa1cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorldClockTime</type>
      <name>mLastEventTrigger</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3f8d7987ca6a23d4fbdd0b2e905f25d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>mLobbyDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a44ed1e0fa4b2ba83fb1d5dd9befeb628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2a00635a08c7337e56ee04022b7cacfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; ManagerConnection &gt;</type>
      <name>mManagerConnection</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a8bd675f078ebe8a25e4ce10366892f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MatchManager *</type>
      <name>mMatchManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6beb13c65f8d490fad76388cd41cca1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>mMaxEntityID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a910f55f1f98fc8391093218e04fa3a6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int64_t</type>
      <name>mMaxObjectID</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a1d3eafb0edb9e8236c8c2290bf0e4a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32_t</type>
      <name>mNextEventTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6a9721776388673758cf385668e93958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mRecalcTimeDependents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6e60cec45ae926e5350e553637bfac1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::RegisteredChannel &gt;</type>
      <name>mRegisteredChannel</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>aa120f3cf8eca6ff168b3c3582f79f079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; objects::RegisteredWorld &gt;</type>
      <name>mRegisteredWorld</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a1e1481149130355896749e1cb59ad5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; ServerTime, std::list&lt; libcomp::Message::Execute * &gt; &gt;</type>
      <name>mScheduledWork</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a3db12cbc8586ae51bd102976a38e613c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>libcomp::ServerDataManager *</type>
      <name>mServerDataManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6493fa2fd2c667a52d0740697293736e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SkillManager *</type>
      <name>mSkillManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a650c6cb83f96e4b4fb8b8f96fabc20bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ChannelSyncManager *</type>
      <name>mSyncManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a74891f7870db30cab95e807b01df789c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mTickLock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a959d0cb709cf5703454ec169305632a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>volatile bool</type>
      <name>mTickRunning</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ad89e6d66185abd19658a66e4fbd9a256</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8_t</type>
      <name>mTicksPending</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a31ea4c0bf519287fe1d80541915b2218</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::thread</type>
      <name>mTickThread</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a706aebd85bb3fac124e3b669e69da0b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::mutex</type>
      <name>mTimeLock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>acb1a8daf225cf4af4b392ad1b71b4e73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TokuseiManager *</type>
      <name>mTokuseiManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a39efc037c0718dc6f838e4c99d395747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorldClock</type>
      <name>mWorldClock</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>ab2ca2fd95be292d106695dadcc800f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; WorldClockTime, std::set&lt; uint8_t &gt; &gt;</type>
      <name>mWorldClockEvents</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a6b72c5c29da87d3e0b3723f903606aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; libcomp::Database &gt;</type>
      <name>mWorldDatabase</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2bb383a4072a19e07060cb0e96350f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ZoneManager *</type>
      <name>mZoneManager</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a2db79d34889ce23ae107d0547c5c38db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static GET_SERVER_TIME</type>
      <name>sGetServerTime</name>
      <anchorfile>classchannel_1_1ChannelServer.html</anchorfile>
      <anchor>a7fa8237f195096014508ed03dd46ed23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChannelSyncManager</name>
    <filename>classchannel_1_1ChannelSyncManager.html</filename>
    <base>libcomp::DataSyncManager</base>
    <member kind="function">
      <type></type>
      <name>ChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a25efd3a1d17f2e475a7d34306c7e182f</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ChannelSyncManager</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a97cfeffb4b77e17901418b200db536b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>libcomp::EnumMap&lt; objects::SearchEntry::Type_t, std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt; &gt;</type>
      <name>GetSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a11b078ff285328189a9eca5e0d228764</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt;</type>
      <name>GetSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a3a3ed7066598efb94c4009f093b0f44d</anchor>
      <arglist>(objects::SearchEntry::Type_t type)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EventCounter &gt;</type>
      <name>GetWorldEventCounter</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a45c07db69ed9d97e62af8018c1f39456</anchor>
      <arglist>(int32_t type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a66fea86f3621b8e6dfea5986c4cb7a6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SyncComplete</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>afc836447fb9a108287896f38cc06b4ea</anchor>
      <arglist>(const libcomp::String &amp;type, const std::list&lt; std::pair&lt; std::shared_ptr&lt; libcomp::Object &gt;, bool &gt;&gt; &amp;objs, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>Update</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>ac3d48da05dd164c35285ad526c3c33dd</anchor>
      <arglist>(const libcomp::String &amp;type, const std::shared_ptr&lt; libcomp::Object &gt; &amp;obj, bool isRemove, const libcomp::String &amp;source)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::EventCounter &gt; &gt;</type>
      <name>mEventCounters</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>abf1243108d593180ae8b17dc98dd0ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; objects::SearchEntry::Type_t, std::list&lt; std::shared_ptr&lt; objects::SearchEntry &gt; &gt; &gt;</type>
      <name>mSearchEntries</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>ad7b36fd49ff5233304842c054d8e367a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ChannelSyncManager.html</anchorfile>
      <anchor>a45938f7695bd9a66b393b90556d2131f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::CharacterManager</name>
    <filename>classchannel_1_1CharacterManager.html</filename>
    <member kind="function">
      <type></type>
      <name>CharacterManager</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af1874f10df07e654a57e9f1c8e851460</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CharacterManager</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a0f47c4d30d5d863f09e6665927f158a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddMap</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a616624f5b27baaa9d238b8315773caa4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t mapID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddPlugin</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aeeaf001fc508ef18546a7639b08c3168</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t pluginID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1483b47032cc4cf1e81e1a2554332849</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, std::unordered_map&lt; uint32_t, uint32_t &gt; itemCounts, bool add, int64_t skillTargetID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveOpponent</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a71e5e799087ca3f3492a713d55453e2c</anchor>
      <arglist>(bool add, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState1, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddRemoveValuable</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aea12319bd4266e73ffeb36ae02780ab0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint16_t valuableID, bool remove)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddStatusEffectImmediate</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a21a8f049ca4c5dfd9c8382740312eee0</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const StatusEffectChanges &amp;effects)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddTitle</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>abd3729c44826b139f7343972f08a3f2f</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int16_t titleID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ApplyTDamageSpecial</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7b45696600b3cbd8a6b58e036b96a87e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CalculateCharacterBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>afe445bad364b97c639d4de516d88b268</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStats &gt; &amp;cs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CalculateDemonBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>accd2e31341988e06b5dbbce42da004b0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, std::shared_ptr&lt; objects::EntityStats &gt; ds=nullptr, std::shared_ptr&lt; objects::MiDevilData &gt; demonData=nullptr, bool setHPMP=true)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>CalculateExpertiseGain</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa5cc688bdf14c751f54641d43e9132b9</anchor>
      <arglist>(const std::shared_ptr&lt; CharacterState &gt; &amp;cState, uint8_t expertiseID, float growthRate, uint16_t rateBoost=0, float multiplier=-1.0f)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>CalculateItemRemoval</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a95544a4b071bac12c1cf9a5120304d72</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint32_t itemID, uint64_t amount, std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, uint16_t &gt; &amp;stackAdjustItems)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CalculateMaccaPayment</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad7022c11bdba415d9977ede8e80fc068</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint64_t amount, std::list&lt; std::shared_ptr&lt; objects::Item &gt;&gt; &amp;insertItems, std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, uint16_t &gt; &amp;stackAdjustItems)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>CalculateMagReduction</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a11c87e78ccdd93c8a368711d5a187bc0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Demon &gt; &amp;demon)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CancelMount</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a91690bb7134db8b1628c485fb384eff8</anchor>
      <arglist>(ClientState *state)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CancelStatusEffects</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acc1641b0ffee2d4238783c3b1dfeac24</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint8_t cancelFlags)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>ContractDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5109b80887e8664e5c80f9041de2ff2e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, int32_t sourceEntityID, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>ContractDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6ffbe93088e6b6562d0cbeed232200e9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreateLootFromDrops</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a679eb46bc7e20e54edaad1a45ee88716</anchor>
      <arglist>(const std::shared_ptr&lt; objects::LootBox &gt; &amp;box, const std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt;&gt; &amp;drops, int16_t luck, bool minLast=false, float maccaRate=1.f, float magRate=1.f)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::Loot &gt; &gt;</type>
      <name>CreateLootFromDrops</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a26cc4e2e07e1d2f03bd153d46d93566c</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt;&gt; &amp;drops, float maccaRate=1.f, float magRate=1.f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CultureItemPickup</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a4c83a928983e0281ddf1b87a1d2dcc0e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>DeleteDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a3985a8367e28f2826d17db8f2fe10ec0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, const std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt; &gt;</type>
      <name>DetermineDrops</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad8dc48dcecb572a4eb8cc9967443e6f6</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt;&gt; &amp;drops, int16_t luck, bool minLast=false)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::DropSet &gt; &gt;</type>
      <name>DetermineDropSets</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a54ca72e69dd0e26c9709e8423351bfc7</anchor>
      <arglist>(const std::list&lt; uint32_t &gt; &amp;dropSetIDs, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool filter=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DigitalizeEnd</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a374e286743bcfbc89abbe4a7705c6ef9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DigitalizeStart</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5d4fc2d817159cf9fd11cdfcb732e8dd</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Demon &gt; &amp;demon)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndExchange</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af548ae53a39f246eeaccc2c28fdd8bc2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t outcome=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EquipItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ac8dc412aa3bcef4d227796d42a4c1cc4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t itemID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>GenerateDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6802d4adc3947f684985ff6af777d4d9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, uint16_t familiarity=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Item &gt;</type>
      <name>GenerateItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a25630fce8afa984bd86ee4e08ff52b59</anchor>
      <arglist>(uint32_t itemID, uint16_t stackSize)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetActiveStatusesPacket</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a145b3056ded7100f33fd3005bd8ec5ec</anchor>
      <arglist>(libcomp::Packet &amp;p, int32_t entityID, const std::list&lt; std::shared_ptr&lt; objects::StatusEffect &gt;&gt; &amp;active)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DemonBox &gt;</type>
      <name>GetDemonBox</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a98f95d6bffb555cc0b9eb9039be23e34</anchor>
      <arglist>(ClientState *state, int8_t boxID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetDemonPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab51facd0d1b3a7924f84df7879486f00</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::DemonBox &gt; &amp;box, int8_t slot)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetDemonPresent</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a60cc0b9dded5669dcd97713f889bad37</anchor>
      <arglist>(uint32_t demonType, int8_t level, uint16_t familiarity, int8_t &amp;rarity) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetEntityStatsPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af38d4e6b1d1f788f626a73f0972661ce</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; objects::EntityStats &gt; &amp;coreStats, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;state, uint8_t format, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; coreBoosts={})</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetExistingItemCount</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af98a67d73c1038d9a0ea1855e35d3859</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint32_t itemID, std::shared_ptr&lt; objects::ItemBox &gt; box=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::Item &gt; &gt;</type>
      <name>GetExistingItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6bd247619309362ccea7a0cb49805a1c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint32_t itemID, std::shared_ptr&lt; objects::ItemBox &gt; box=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; size_t &gt;</type>
      <name>GetFreeSlots</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a901c7673c165668b43fbbbe81b7d53a9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::shared_ptr&lt; objects::ItemBox &gt; box=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ItemBox &gt;</type>
      <name>GetItemBox</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5f095b62b1999d085838c19c11aa88c9</anchor>
      <arglist>(ClientState *state, int8_t boxType, int64_t boxID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetItemDetailPacketData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ada94a92c31a85541870130d24dec7856</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; objects::Item &gt; &amp;item, uint8_t detailLevel=2)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetMaxExpertisePoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a02b36a8fe9b037b711fd56d46162d603</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetRemovedStatusesPacket</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa8fb7ca514187678890c4a404c0f7437</anchor>
      <arglist>(libcomp::Packet &amp;p, int32_t entityID, const std::set&lt; uint32_t &gt; &amp;removed)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetReunionRankTotal</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad6d73f61282cd27a1c09ee6ac651137f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; demon)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSynthOutcome</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5109add83518d78a101c26ac79bd69bb</anchor>
      <arglist>(ClientState *synthState, const std::shared_ptr&lt; objects::PlayerExchangeSession &gt; &amp;exchangeSession, uint32_t &amp;outcomeItemType, std::list&lt; int32_t &gt; &amp;successRates, int16_t *effectID=0, uint32_t *enchantSpecialID=0)</arglist>
    </member>
    <member kind="function">
      <type>uint64_t</type>
      <name>GetTotalMacca</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a0933004ba58d1a2cce72ded576c9c5aa</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LearnSkill</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a819a8084f0e92fbb13f2c7324b49918b</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t entityID, uint32_t skillID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LevelUp</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a85855154f41babdd31d2c9354aed6bea</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int8_t level, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MitamaDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9f919c7a3ed122aca0c1556294655b0e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID, uint8_t growthType, uint8_t mitamaType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>NotifyItemDistribution</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>afdc11f4a21f74a37ba620d2242f409ef</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::list&lt; std::shared_ptr&lt; objects::PostItem &gt;&gt; post)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PayMacca</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9bff56d4ac894c4a2de216381fda6f11</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint64_t amount)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>add8b8e9003f73d17e900963dc98ea93f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, std::shared_ptr&lt; ChannelClientConnection &gt; client=nullptr, bool updateSourceClient=true)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>RecalculateTokuseiAndStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7c7314de0729e84a77b324ead3fc36c6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, std::shared_ptr&lt; ChannelClientConnection &gt; client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ReunionDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a394254375a45a2f175bcf54e74e7e93e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, int64_t demonID, uint8_t growthType, uint32_t costItemType, bool replyToClient, bool force=false, int8_t forceRank=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ReviveCharacter</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aea96dcf12e87b72d34a4621243ee8296</anchor>
      <arglist>(std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t revivalMode)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendAutoRecovery</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7f709e303274c0552ccfb11ac1c142fb</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCharacterData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad3a72db14e6a1f12f9f8b7f0280fef20</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCharacterTitle</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a529860ac31e80ab7177d888833166adc</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool includeSelf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCoinTotal</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a00d9158cc53e96f99e08c2749f0017eb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool isUpdate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCowrieBethel</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a835b1a8817be4bb1ed78895f300fd651</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDemonBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad88643a8b5d589d1e2cb7afe5eb46742</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t boxID, std::set&lt; int8_t &gt; slots={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDemonData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5ae6ffad745e187a3a087b4ab5c1a6e5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t boxID, int8_t slot, int64_t demonID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDevilBook</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a18a529c1fa2b38ba8f3db864890eec81</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendEntityStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a91946073aad00bc3a2f343c56f556832</anchor>
      <arglist>(std::shared_ptr&lt; ChannelClientConnection &gt; client, int32_t entityID, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendExpertiseExtension</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab06a22d4aca1222a84520ffbcf893e60</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendFusionGauge</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab8c2e5417406017a3946628c2e542f26</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendInvokeStatus</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aeaaba56e1a1c48ba4d041597d27b6bea</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool force, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendItemBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af192a98b0835840b159aa30673fb9432</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::ItemBox &gt; &amp;box)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendItemBoxData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a4e8c04a3606ea0a40ca4f01193d6733b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::ItemBox &gt; &amp;box, const std::list&lt; uint16_t &gt; &amp;slots, bool adjustCounts=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendLootItemData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acf6d3c24a23cbf45305cf1f715a49e10</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::shared_ptr&lt; LootBoxState &gt; &amp;lState, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMapFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a2144f385f43a1e51d6ad76b1cf6e1403</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMaterials</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a000fc326cfa9cf4a58559fecee05bf85</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::set&lt; uint32_t &gt; updates={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendMovementSpeed</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ae0191ac62452e4d0dba2bae9c9f41fc8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool diffOnly, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendOtherCharacterData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a009b15dacec40ec6c96b93d962d21cce</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, ClientState *otherState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendOtherPartnerData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6bfe0dbb2a1a8fb7e05aa6d4965c2c58</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, ClientState *otherState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPartnerData</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ad5744c0f13cb04fead45ab44d97995dd</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPluginFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a3d37a183244b0943d1daa87d498e76ac</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPvPCharacterInfo</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ac16c9cca0daf78b771bc25d17cdfa5a5</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendValuableFlags</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a84b614b513085a6dac3d79958aa611bb</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusIcon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5939126c0694d2b2e6ecdb1ced0c72d7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int8_t icon=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StoreDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ac7790719cc2b664cab799f8f3bf37fca</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool updatePartyState=true, int32_t removeMode=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SummonDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a2cf353f50a3a7da4850594b32516a7db</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t demonID, bool updatePartyState=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UnequipItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af695df55fef8f1f979b5471acd335120</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Item &gt; &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>UpdateBethel</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a174796ae4bb6531d817450a1072ccf8e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t bethel, bool adjust)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateBP</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a7a706f005d20cceb20690661274420bb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points, bool isAdjust)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateCoinTotal</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5c6e665273787f8f0d472f297a107cb5</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t amount, bool isAdjust)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateCowrieBethel</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>af17b1736f257a8f71a99dcd9333a5753</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t cowrie, const std::array&lt; int32_t, 5 &gt; &amp;bethel)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDigitalizePoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>abe303c2841b3089f991e8fa63487901e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::unordered_map&lt; uint8_t, int32_t &gt; &amp;pointMap, bool allowAdjust, bool validate=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDurability</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa440ebbe4771fc1fda69024d0e6d9ba8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::Item &gt; &amp;item, int32_t points, bool isAdjust=true, bool updateMax=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDurability</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa30afba1da3289d40e0a83073aaa77d1</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, int32_t &gt; &amp;items, bool isAdjust=true, bool updateMax=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateEventCounter</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5b1311c57b05396cf1f7d7dc71a1c3d8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t type, int32_t value, bool noSync=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateExperience</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a571e2431e1f3ae859de4ec111bdd0ab5</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int64_t xp, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateExpertise</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>adc1b8f3eed3eaa3c940a03532b0decdd</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint32_t skillID, uint16_t rateBoost=0, float multiplier=-1.0f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateExpertisePoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a6f95fd1f5627317891aa2e8d0fde9897</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; std::pair&lt; uint8_t, int32_t &gt;&gt; &amp;pointMap, bool force=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFamiliarity</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a8a14311b0919dba5634b954c57dc8e6d</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t familiarity, bool isAdjust=false, bool sendPacket=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateFusionGauge</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acb8ffe0aa4dccc400fdad8f3937c93a8</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points, bool isAdjust)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateItems</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ace2aa82ae6ddd6d57118026bfb03b89a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, bool validateOnly, std::list&lt; std::shared_ptr&lt; objects::Item &gt;&gt; &amp;insertItems, std::unordered_map&lt; std::shared_ptr&lt; objects::Item &gt;, uint16_t &gt; stackAdjustItems, bool notifyClient=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateLNC</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>acce6083979c3bcd39245f63b8a9f4115</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int16_t lnc)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateRevivalXP</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a42c92bb069bf2cec906ea4140ee611af</anchor>
      <arglist>(const std::shared_ptr&lt; CharacterState &gt; &amp;cState, float lossPercent)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateSkillPoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1bffcfac2ff7ced02d3eb0af6238e217</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>UpdateSoulPoints</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aa415fc6d9386588b93ffeb321397410f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, int32_t points, bool isAdjust=false, bool applyRate=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateStatusEffects</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ae4a3c9ca29fc5f4b6f8d6fbb04b281b9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, const libobjgen::UUID &amp;accountUID, bool queueSave)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateStatusEffects</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a98b74f2446836083e4f991f4b0df7dab</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool queueSave=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateWorldDisplayState</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a856e6410ae3f414f2451cfcb59ada432</anchor>
      <arglist>(const std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AdjustDemonBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a712ef4fe41afd2071fb3da6aac70e603</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, bool baseCalc, bool readOnly=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AdjustMitamaStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9149bdf74e68c1c0ce1e5ab205d788a8</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, libcomp::DefinitionManager *definitionManager, uint8_t reunionMode, int32_t entityID=0, bool includeSetBonuses=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>AdjustStatBounds</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a044a253479159f8179b30c8441a1fc61</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, bool limitMax)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>CalculateDependentStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ae4e7d9274a2eed9c04c4888fe0736a1a</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, int8_t level, bool isDemon)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ConvertIDToMaskValues</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a93b24c18ece5446e1867e61aed6c64fc</anchor>
      <arglist>(uint16_t id, size_t &amp;index, uint8_t &amp;shiftVal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>FamiliarityBoostStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a266e48c31dd7bbf8fe590e60bf948790</anchor>
      <arglist>(uint16_t familiarity, libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, std::shared_ptr&lt; objects::MiDevilLVUpRateData &gt; levelRate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::EnumMap&lt; CorrectTbl, int32_t &gt;</type>
      <name>GetCharacterBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ae45d992bab8d474168bce28adccb80b5</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStats &gt; &amp;cs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::EnumMap&lt; CorrectTbl, int32_t &gt;</type>
      <name>GetDemonBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5ffd4e4ef863d827d24a84fe1e5a76c1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static libcomp::EnumMap&lt; CorrectTbl, int32_t &gt;</type>
      <name>GetDemonBaseStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a429e6d2c25f995e5aeb0f478a60d4eae</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, libcomp::DefinitionManager *definitionManager, uint8_t growthType, int8_t level)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetEntityRevivalPacket</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a507eea9130c0499fd774a34b01c23c52</anchor>
      <arglist>(libcomp::Packet &amp;p, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int8_t action)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int8_t</type>
      <name>GetFamiliarityRank</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5806869b59186d1a332bd5e80804fc6a</anchor>
      <arglist>(uint16_t familiarity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>GetMitamaBonuses</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a9eec673d8f7f5d71c3e841e29a8d1025</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, libcomp::DefinitionManager *definitionManager, std::unordered_map&lt; uint8_t, uint8_t &gt; &amp;bonuses, std::set&lt; uint32_t &gt; &amp;setBonuses, bool excludeTokusei)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; int32_t &gt;</type>
      <name>GetMitamaIndirectSetBonuses</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>aba9b80501a0768198f9f80b279a6b00e</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, libcomp::DefinitionManager *definitionManager, bool exBonus, int8_t &amp;magReduction)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>GetTDamagePacket</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a44191caa78cc11489d1aa5d3027fd273</anchor>
      <arglist>(libcomp::Packet &amp;p, int32_t entityID, int32_t hpGain, int32_t mpGain)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::set&lt; uint32_t &gt;</type>
      <name>GetTraitSkills</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a1db8a0c1e0442d045d47cfaa35d8c745</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;demonData, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>HasValuable</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a680d68e198dd5fb75f5186d7cef26065</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint16_t valuableID)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsCPItem</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a57c6a3fe03ffe86d1940df91764bec7b</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiItemData &gt; &amp;itemData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>IsMitamaDemon</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5e947286eab03d6183debfdb559a6fae</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiDevilData &gt; &amp;devilData)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>BoostStats</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>a5e4ea0c2c9ca9102ea87380b5f343de3</anchor>
      <arglist>(libcomp::EnumMap&lt; CorrectTbl, int32_t &gt; &amp;stats, const std::shared_ptr&lt; objects::MiDevilLVUpData &gt; &amp;data, int boostLevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1CharacterManager.html</anchorfile>
      <anchor>ab492ee0001c184164b55c06dce3ddcdc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::CharacterState</name>
    <filename>classchannel_1_1CharacterState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Character &gt;</base>
    <member kind="function">
      <type></type>
      <name>CharacterState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>abe9bcd871b173ad3312d71e3165b1bfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CharacterState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a5435a681a631dda2719db8b2c937389c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ActionCooldownActive</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>af79605fd44aa2de3355719a9c8c54a10</anchor>
      <arglist>(int32_t cooldownID, bool accountLevel, bool refresh=true)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DigitalizeState &gt;</type>
      <name>Digitalize</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a10e3e7bc54884f26ec3b82b0842062dc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a8442d8bcb34f5442384a0d2c224e0845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EquipmentExpired</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a38c03724498e0f1f6efc6fcce7b42cb4</anchor>
      <arglist>(uint32_t now)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>aed4d354c27aabd33a4001faf60823e87</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiSpecialConditionData &gt; &gt;</type>
      <name>GetConditionalTokusei</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a6d480d2be70ca6789e01c542843f68a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetDigitalizeAbilityLevel</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a3427294a49d48a2de22df07a8d015b87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DigitalizeState &gt;</type>
      <name>GetDigitalizeState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>af895ffce29fd302c6115de3a0995d121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Character &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a12ae6b01d350e4513bcb3cacd1661e7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a05473d9cd04b7fa35900141f0cc7ca65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetEquipmentTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ae7fd9287b1226cd096fe44b80108e353</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EventCounter &gt;</type>
      <name>GetEventCounter</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ad1c9e3c6cd606b7390995920f1e6c6c9</anchor>
      <arglist>(int32_t type, bool createIfMissing=false)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetExpertisePoints</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ab41e90dc9c04990444fc8f92f7d6f97a</anchor>
      <arglist>(uint32_t expertiseID, libcomp::DefinitionManager *definitionManager=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetExpertiseRank</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a330398a5fb105b8acae2c035bf177ee0</anchor>
      <arglist>(uint32_t expertiseID, libcomp::DefinitionManager *definitionManager=nullptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetGender</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a21e6be55b0c9c39dcafba35f77396c8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a296f084ac9577b9e3bf5203a8705a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a00a7209ffa615e5e4c46ab587983dead</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>GetMaxFusionGaugeStocks</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a20c8897187e287722197ede6c169c1c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetQuestBonusCount</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ab67167a06dfdb74ad0d7bde7c0c7daa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetQuestBonusTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a2f42e3b328f17517fadd012b0ff2f37b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9c0945d79caee1c3c1ef8ec816ea23fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RecalcDisabledSkills</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ae9ae03995aab6df6229fdcdfcac94ef2</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecalcEquipState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a043802378e2fd9e4765b9ccc9ce6fc0e</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a7bcde1ed00057a71312b47a56bf55067</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshActionCooldowns</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a803e79f446bf9c9d5afe7c1c98974597</anchor>
      <arglist>(bool accountLevel, uint32_t time=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa7892d3d3a2732e143c4c56144703b1d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateQuestState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a6536f35f03542a1e75bc44d6dd4fb98f</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, uint32_t completedQuestID=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; CharacterState &gt;</type>
      <name>Cast</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a77dcb868812169a2ae84d74482193af5</anchor>
      <arglist>(const std::shared_ptr&lt; EntityStateObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AdjustFuseBonus</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a0d489bb9a3b28a0a1fa1e4f2fa1babc9</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::Item &gt; equipment)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::MiSpecialConditionData &gt; &gt;</type>
      <name>mConditionalTokusei</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a572209222e430824adeb9ee69e85e039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::DigitalizeState &gt;</type>
      <name>mDigitalizeState</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>ac4572ef6b2b40a50291e706ffcf41deb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; CorrectTbl, int16_t &gt;</type>
      <name>mEquipFuseBonuses</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a89200f3eacd7899deaa3ccb370f9ebd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mEquipmentTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a00d94fdccafd909026b84bf514404f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint8_t</type>
      <name>mMaxFusionGaugeStocks</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a08926c0e23d3f1206fc308d219fe08dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextEquipmentExpiration</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a38b69037347ab2980a39f3c3f4f78a01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mQuestBonusCount</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a7779fad62b175997abab6327c10811e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mQuestBonusTokuseiIDs</name>
      <anchorfile>classchannel_1_1CharacterState.html</anchorfile>
      <anchor>a4ab1ec13780db42e26b73c62c2783f6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ChatManager</name>
    <filename>classchannel_1_1ChatManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ChatManager</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a22e0c728bf32f44287b595746f07649a</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ChatManager</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aacd4b5d72b7b1622c7da0980c8c0dc19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteGMCommand</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac320ce3efb2ca985d96d7ac3dbf776b2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;cmd, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleGMand</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a76a34271fc84245e6f3e3877040c7447</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendChatMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a3460c9195b305403095d53dcba1b63e9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, ChatType_t chatChannel, const libcomp::String &amp;message)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendTeamChatMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aa0c85ac9b5613b559b34d6fa620c2bd4</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;message, int32_t teamID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendTellMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>adce8e1a899bdee3266904f337824275c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;message, const libcomp::String &amp;targetName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetDecimalArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a648aa9073b31e7344defb2af4b7145ad</anchor>
      <arglist>(T &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>GetEquipTypeArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aa17d6c5f146438c1ef9d2e1e208ab186</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, std::list&lt; libcomp::String &gt; &amp;args, const libcomp::String &amp;gmandName, const std::set&lt; int8_t &gt; &amp;validTypes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetIntegerArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a6ef1f0c598c0410afb5f4ba4ebba5161</anchor>
      <arglist>(T &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetStringArg</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9ec0e4e64dfd2fdf7868a3c1d8cc36d3</anchor>
      <arglist>(libcomp::String &amp;outVal, std::list&lt; libcomp::String &gt; &amp;args, libcomp::Convert::Encoding_t encoding=libcomp::Convert::Encoding_t::ENCODING_UTF8) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GetTargetCharacterAccount</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a91b1598b49ed5a320d5104ec08cf6087</anchor>
      <arglist>(libcomp::String &amp;targetName, bool currentOnly, std::shared_ptr&lt; objects::Character &gt; &amp;targetCharacter, std::shared_ptr&lt; objects::Account &gt; &amp;targetAccount, std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;targetClient)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_AddCP</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1eb1ac3382ac9d35605e27aac519e387</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Announce</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a07d4ec55a818470d90284c4049e884cd</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Ban</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>adb22a8f75bf4e1f0554263f82a2790f7</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_BattlePoints</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9561e2ec23538239d58651751568708d</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Bethel</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a7bdf90f112b49a6cf08108413b4e550f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Coin</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a584ad4b5ab8b2fa82ae12b22fb744622</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Contract</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac3ff99a3aec84bf389c03114a3c15fb9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Counter</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac81527669a0a8e4ccc56785035f6b741</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Cowrie</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a96c0f9f485125c83f46bdae9dfde0a58</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Crash</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5d8bc756f08ec71ff7e5ea7e6014bed4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_DigitalizePoints</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a554feacc9ce730e4494a7d851dfdc927</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Effect</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a33cd9c6973eb5c867f322bd8d1f0d430</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Enchant</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ada45e5b7d74f1e58e1e361b4cf208719</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Enemy</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a82c448a5cd1f5590bdd5db64a9b29c67</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Event</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae9da99eaa72ee4992eb2c17da40ef69e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_ExpertiseExtend</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5d2ae9858c3fc69d213504e735473701</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_ExpertiseSet</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>afb77126be6d49d0793cd57a74b4a5d9f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Familiarity</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a204695ddc603c95ce33465e2d68bbc22</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Flag</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1a51801d26b114fe95f265369271e1ee</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_FusionGauge</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a83260f37389be76d4daae4a46554fda3</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Goto</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aa33296cbdb520ad66ae39895597d1fc9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_GradePoints</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ac660f5404e61348484a4a299f256b61e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Help</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a8cbba2279bc57a6121544c052b04f52e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Homepoint</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a2c6d1ec34037c27f2f220102449e6f97</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Instance</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a90363296ab6eea4961ef35d1fd318267</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Item</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a28a5abeac9111f357b544b35f7eb825e</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Kick</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a6f1bed489b6a825457ffeeab6eb425bc</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Kill</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ada2802a7c2f215881395c364542ba5bc</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_LevelUp</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae79fffdf09d167844efa76b1c068ebcb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_License</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae143b4d528808de3a0c54f41a293741a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_LNC</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a4d364922112d283d5724052fa86d9347</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Map</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aee66e3287ae941567d200e72e35bac8f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Online</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9a7b30901d56acf062ed3ba8893b7e2a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_PenaltyReset</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1695dcf3108ec93e70f06ca4b4a77ff2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Plugin</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a257cad0883553c1d16964cefa33a010a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Position</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a99807021e249fffa2ef45f874b365168</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Post</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a57e5f40157614bc80a73ff5fde824706</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Quest</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ab07f4ce39ae94df45b1becd7e637d8a0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Reported</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9c13a7de1de5fe7a2563ea610288b1a3</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Resolve</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aa31f9dc361c3556a01b923d911662301</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Reunion</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a93b8abe66f2dd658fe55975f71d9670d</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Scrap</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>acdcb5d878ba9d58e1b51c8639291ba6c</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Skill</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>aea968388a2020618a6df23c98ab17ef9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SkillPoint</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5bcafc9cd24bea805d2bae2b5eedce20</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SlotAdd</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9f032acc085ff1c49b97906a4cbc3653</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_SoulPoints</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ad9f10107929216425ee5a41c6f61dd66</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Spawn</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a9ab8bab69ba66fe5298fccc29a54d518</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Speed</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a48de93332ff9e0cfadd719177ea7a1de</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Spirit</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5bdee2ba1ce86364938f6ef92a8cc46f</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Support</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a13d8415a83c30cbec1f1203f78c43691</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_TickerMessage</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a95a3c1961f44e43106b4c4b708dbead1</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Title</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>acd3e0da9814eb3014308e9ccbac63311</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Tokusei</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ab5ea1521a27ce38ce220b5093786bc63</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Valuable</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>af3da3fa79e0a41124fa17b0d33ba1d12</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Version</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae0b239b8a19de5ea613ef8536d84ef26</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_WorldTime</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a1d0a01479fcb3402bac6a93f5963c372</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_XP</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a951b67909aafa2527ab1fe9577e930e4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Ziotite</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>acf84e1cf3c372011def85d6a7894ade0</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GMCommand_Zone</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>ae0e4db86faa38538dbfd66716a7cb858</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, const std::list&lt; libcomp::String &gt; &amp;args)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HaveUserLevel</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a286951108f5086fd4019f44497ea8799</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client, uint32_t requiredLevel)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, std::function&lt; bool(ChatManager &amp;, const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;, const std::list&lt; libcomp::String &gt; &amp;)&gt; &gt;</type>
      <name>mGMands</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a5c04d943e89034eaee9f071c3aa9e541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ChatManager.html</anchorfile>
      <anchor>a650e3908ebc6e06544c44601649b683f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ClientState</name>
    <filename>classchannel_1_1ClientState.html</filename>
    <member kind="function">
      <type></type>
      <name>ClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a32823cd62161db3e695df3119401e244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a2f6580ab7ae22ec07205da16b3c13e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetAccountUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad1cb0407e9b71cadbf6e9763e11b6b7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; BazaarState &gt;</type>
      <name>GetBazaarState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af3273a2b98ec248e7c9fee87c2eb2533</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CharacterState &gt;</type>
      <name>GetCharacterState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a94627e19d02a38e00f716adedea18503</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetClanID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aea296ed846fbb9c679dd9ec7f4cd97c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::Convert::Encoding_t</type>
      <name>GetClientStringEncoding</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a3c8a216bf04f6a6afd884ac527342aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt;</type>
      <name>GetCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae168a8b817d6098988d485a0deda9e9b</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetCurrentMenuShopID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a531138b8fa62836b928d70a0453e0aea</anchor>
      <arglist>(int32_t type=0) const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; DemonState &gt;</type>
      <name>GetDemonState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a3a2cf5885225de5e0fbf4a7485411a3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>GetEntityState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae8d70dc0474d84337fa2dd0d46af95ed</anchor>
      <arglist>(int32_t entityID, bool readyOnly=true)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetEventSourceEntityID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a910d2dad3ae8df5262100235e7296195</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetLocalObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ab53b595b193b38390b53bf393ead0943</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetLocalObjectUUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a72dda0be86f351373e38bd47643ff04a</anchor>
      <arglist>(int32_t objectID)</arglist>
    </member>
    <member kind="function">
      <type>int64_t</type>
      <name>GetObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a9be86f60b323c002ae00e219f7448df4</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid)</arglist>
    </member>
    <member kind="function">
      <type>const libobjgen::UUID</type>
      <name>GetObjectUUID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a7be480b899fd35df68ff2d1dd52cc2dd</anchor>
      <arglist>(int64_t objectID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PartyCharacter &gt;</type>
      <name>GetPartyCharacter</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ab20e1ea8dbca63d6d500567048491e39</anchor>
      <arglist>(bool includeDemon) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPartyCharacterPacket</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a2ee337011701200646bb92c5dc6d75b1</anchor>
      <arglist>(libcomp::Packet &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PartyMember &gt;</type>
      <name>GetPartyDemon</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa7d17818fd875fc0caee23b6d95d7717</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPartyDemonPacket</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa8bf6b41d7e47e54549012a1fac54fa4</anchor>
      <arglist>(libcomp::Packet &amp;p) const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetPartyID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af042bf665d6d933b77be74a3b05bf85f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetTeamID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>afdc4294017f3ebfd8b71498ff28a6353</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetUserLevel</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>abc177c9dc256571307bfcad674149518</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetWorldCID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a4e91326e3913b3f0026c9074588492a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad7a7616c9aad7e314086e76920642de9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasActiveEvent</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ad222195b806d2578df86808005e93ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsMovementLocked</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a3cce39d094d86cffc36f55619327f7dd</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Register</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a829f834b5d9fe947c95b8ab643527468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RewindStartTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>abd5e4f105d19f46c968ce03e188cb36d</anchor>
      <arglist>(ServerTime time)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt;</type>
      <name>SetCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a574472f41eaf2029e8a34e40424bbbff</anchor>
      <arglist>(int32_t entityID, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt;&gt; adjustments)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a16b8f2f9b08d2d254548d063d0b80265</anchor>
      <arglist>(const libobjgen::UUID &amp;uuid, int64_t objectID, bool allowReset=false)</arglist>
    </member>
    <member kind="function">
      <type>ClientTime</type>
      <name>ToClientTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aaf1783ced9cf5ae449a3f27546d41e15</anchor>
      <arglist>(ServerTime time) const </arglist>
    </member>
    <member kind="function">
      <type>ServerTime</type>
      <name>ToServerTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae60187036ffe5b1e03ae32c516c5daa9</anchor>
      <arglist>(ClientTime time) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ClientState *</type>
      <name>GetEntityClientState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>adfda568072305ea8850278decd14ae0c</anchor>
      <arglist>(int32_t id, bool worldID=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; CharacterState &gt;</type>
      <name>mCharacterState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a79cf6a619d40779d4b6edc8aa7d6f4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt; &gt; &gt;</type>
      <name>mCostAdjustments</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aad2c9dc93589172b54ece21d2976916d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; DemonState &gt;</type>
      <name>mDemonState</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aaafda1ea601105884f173ff5057784f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, int32_t &gt;</type>
      <name>mLocalObjectIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>ae006020114ce6a2fa5305f27fe97904d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, libobjgen::UUID &gt;</type>
      <name>mLocalObjectUUIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a7e9c89d454b9126852dfeb80e4f317ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>add2c12ef51362e9491f9d1af2fbe0a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mNextLocalObjectID</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a14da4b2c94729b8191d2c16486b8356d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, int64_t &gt;</type>
      <name>mObjectIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>aa7251ba525d73e61857304540b940013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int64_t, libobjgen::UUID &gt;</type>
      <name>mObjectUUIDs</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a1bd4aa8053d05ccbff9c58313fc60c51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ServerTime</type>
      <name>mStartTime</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>af20ce5f4b90f4f0ee71648a6ad95bdd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::unordered_map&lt; bool, std::unordered_map&lt; int32_t, ClientState * &gt; &gt;</type>
      <name>sEntityClients</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a603dc0aede2b91ded8e4e9d3a3212281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::mutex</type>
      <name>sLock</name>
      <anchorfile>classchannel_1_1ClientState.html</anchorfile>
      <anchor>a85097fcd54191350decbc8e434ce831f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::CultureMachineState</name>
    <filename>classchannel_1_1CultureMachineState.html</filename>
    <base>EntityState&lt; objects::ServerCultureMachineSet &gt;</base>
    <member kind="function">
      <type></type>
      <name>CultureMachineState</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>a467e6d95eeb5e8ba5da2ca8523b5d54f</anchor>
      <arglist>(uint32_t machineID, const std::shared_ptr&lt; objects::ServerCultureMachineSet &gt; &amp;cmSet)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CultureMachineState</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>aa00de34ca96001868f4c89bcf8faacd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::ServerCultureMachineSet &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetMachineID</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>a72b85004ff980a3e13eaafefb3c7f709</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::CultureData &gt;</type>
      <name>GetRentalData</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>acb6aa2742aeee857b76f686bd9ef5166</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetRentalData</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>ae94c4fd7389b7ccb0d09262112951240</anchor>
      <arglist>(const std::shared_ptr&lt; objects::CultureData &gt; &amp;data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>aad6d722678b263b3886ae8a93df7d403</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mMachineID</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>ad712a08f80c1b888485bf53175320cc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::CultureData &gt;</type>
      <name>mRentalData</name>
      <anchorfile>classchannel_1_1CultureMachineState.html</anchorfile>
      <anchor>a564a08d4fa8c5ab22d45d96f8f743748</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::DemonState</name>
    <filename>classchannel_1_1DemonState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Demon &gt;</base>
    <member kind="function">
      <type></type>
      <name>DemonState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>aec6ab56513575294bb7024bd36be5d7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DemonState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>ad3f7d2d303c897ad48260c41399d0bf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a8442d8bcb34f5442384a0d2c224e0845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>ae440e1a98c7f8b7263106081378dbc92</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>GetCompendiumCount</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a6a6675c7a4fd82858aa30b70c11cdca9</anchor>
      <arglist>(uint8_t groupID=0, bool familyGroup=true)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetCompendiumTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a87ac6c182987e4dd109eb176d7398c45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; int32_t &gt;</type>
      <name>GetDemonTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>abbbf9fe8e75893c1ac23f0c06dc758d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Demon &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a12ae6b01d350e4513bcb3cacd1661e7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const libobjgen::UUID</type>
      <name>GetEntityUUID</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a14e2e0e852a777a3f1621ae0e708d334</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetGender</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>afce40b2829abf272b01f05310d27d71c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::InheritedSkill &gt; &gt;</type>
      <name>GetLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a30082a84673d10c339fa501b8153ef8d</anchor>
      <arglist>(uint8_t affinity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a296f084ac9577b9e3bf5203a8705a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a732bd63bd19736f33ffb6934124c9384</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasSpecialTDamage</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>abb699572e07f30bd50b19bb4848df4cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9c0945d79caee1c3c1ef8ec816ea23fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a0866682efd8325ce9be035466b8f6f9d</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>ac9aa95d923fba2483c2568b23154e6d2</anchor>
      <arglist>(uint8_t affinity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa7892d3d3a2732e143c4c56144703b1d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDemonState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a9846eb2620d5504352b1f5eb6725f3aa</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>int16_t</type>
      <name>UpdateLearningSkill</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>acaac07576fd3a17377618bd2e889bed7</anchor>
      <arglist>(const std::shared_ptr&lt; objects::InheritedSkill &gt; &amp;iSkill, uint16_t points)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateSharedState</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>af074f7c3ed57cb219c9bc15c840a0e26</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; DemonState &gt;</type>
      <name>Cast</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a1e8d2bcc21773faa8274554a389b509d</anchor>
      <arglist>(const std::shared_ptr&lt; EntityStateObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::EnumMap&lt; CorrectTbl, int16_t &gt;</type>
      <name>mCharacterBonuses</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a4a065314c2d197bafd12ccafeeeff5fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint16_t</type>
      <name>mCompendiumCount</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a03df55364290ec1b976e6ddad12836b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, uint16_t &gt;</type>
      <name>mCompendiumFamilyCounts</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a6a33110f1722a7c1d8fb989d0d4427b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, uint16_t &gt;</type>
      <name>mCompendiumRaceCounts</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a0448d266bc393fb182b0a8e345b9ed5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mCompendiumTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a38114e44d379a8f78f04f1ccb8eed43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; int32_t &gt;</type>
      <name>mDemonTokuseiIDs</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>addaf9fe32b944ca2a93792cbbf13e4cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::shared_ptr&lt; objects::InheritedSkill &gt; &gt; &gt;</type>
      <name>mLearningSkills</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>a850d81f49b79840b0f9dd8a615ea1e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mSharedLock</name>
      <anchorfile>classchannel_1_1DemonState.html</anchorfile>
      <anchor>aad5c709c9786636e57ef2a26a159019b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::DynamicMap</name>
    <filename>classchannel_1_1DynamicMap.html</filename>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; ZoneSpotShape &gt; &gt;</type>
      <name>Spots</name>
      <anchorfile>classchannel_1_1DynamicMap.html</anchorfile>
      <anchor>a476f01740cdfe51ed3196fdb1e43522b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::shared_ptr&lt; ZoneSpotShape &gt; &gt; &gt;</type>
      <name>SpotTypes</name>
      <anchorfile>classchannel_1_1DynamicMap.html</anchorfile>
      <anchor>a917d7efc2049c0d8bcac1f89cb3b1cd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EnemyState</name>
    <filename>classchannel_1_1EnemyState.html</filename>
    <base>ActiveEntityStateImp&lt; objects::Enemy &gt;</base>
    <member kind="function">
      <type></type>
      <name>EnemyState</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ad62a45b813902fba99eeef6ce7936544</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EnemyState</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a4119c6b8f71bf712345af5927eef3e26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>EntityIsSet</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a8442d8bcb34f5442384a0d2c224e0845</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::set&lt; uint32_t &gt;</type>
      <name>GetAllSkills</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ab55b5046170193f76dfbda3ba7957907</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, bool includeTokusei)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EntityStats &gt;</type>
      <name>GetCoreStats</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9f5302b984250a7215f0fd2ba9987d57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::shared_ptr&lt; objects::EnemyBase &gt;</type>
      <name>GetEnemyBase</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>aa4444dd9a7b4ccb4df07f631402dc5f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::Enemy &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a12ae6b01d350e4513bcb3cacd1661e7d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetGender</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a93fde3ea17dfd257c0825345900a888b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int8_t</type>
      <name>GetLevel</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a296f084ac9577b9e3bf5203a8705a679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>GetLNCType</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a68b115ef9d862db850b7b7691de0446b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; uint8_t, uint8_t &gt;</type>
      <name>GetTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ae7935459bebf8f717d2ef8ecf1465c83</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>IsClientVisible</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a9c0945d79caee1c3c1ef8ec816ea23fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Ready</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>a66ce4e4014373250c4e7a32108fdda78</anchor>
      <arglist>(bool ignoreDisplayState=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual uint8_t</type>
      <name>RecalculateStats</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a5ac6d8083b61a18710675a6c691c9588</anchor>
      <arglist>(libcomp::DefinitionManager *definitionManager, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr, std::shared_ptr&lt; objects::MiSkillData &gt; contextSkill=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetEntity</name>
      <anchorfile>classchannel_1_1ActiveEntityStateImp.html</anchorfile>
      <anchor>aa7892d3d3a2732e143c4c56144703b1d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;entity, libcomp::DefinitionManager *definitionManager)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>ad5ecb5583a76300dc145001a84ecc227</anchor>
      <arglist>(int32_t entityID, const std::pair&lt; uint8_t, uint8_t &gt; &amp;points)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::shared_ptr&lt; EnemyState &gt;</type>
      <name>Cast</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a3b04c8be9491bd1db9a6d6496d3a5440</anchor>
      <arglist>(const std::shared_ptr&lt; EntityStateObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::pair&lt; uint8_t, uint8_t &gt; &gt;</type>
      <name>mTalkPoints</name>
      <anchorfile>classchannel_1_1EnemyState.html</anchorfile>
      <anchor>a9c813192b23a0e1b422ba6b9b22bbddd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EntityState</name>
    <filename>classchannel_1_1EntityState.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>aa203c90226d15a30c686eec4ab705dd7</anchor>
      <arglist>(const std::shared_ptr&lt; objects::DiasporaBase &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a009bec0495c2df03d9d0c9060e5f2573</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a1f216c9ac2dce3231510be5f59caffcb</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerObject &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a58569ceca7f11b99e292fe63f9e24104</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerNPC &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>aa550817f98d818b9a0f0356ed298e6c2</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerBazaar &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a85c7da6294df77abb2dd6922d39ee348</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerCultureMachineSet &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>ae2ee38eaa7c90e39bdf62aa3ede94cfc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::LootBox &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a9b56c8aad89b17f93af544f41614b567</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PlasmaSpawn &gt; &amp;entity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a43c58cc03b2948c12829446c7c51d637</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PvPBase &gt; &amp;entity)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EntityState</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a8c71287fcb338b4fb6803f5c3be92390</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>mEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a4b3891bfef26335be87ab09e94297194</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::EventManager</name>
    <filename>classchannel_1_1EventManager.html</filename>
    <class kind="struct">channel::EventManager::EventContext</class>
    <member kind="function">
      <type></type>
      <name>EventManager</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ac1fb0b1145490e8c492eb19b017c5bbd</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventManager</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2e43e8b165b54f75e9c005cf5b04ade7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ContinueChannelChangeEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2458e528d385522fa2d79de9f70f1e9b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>EndDemonQuest</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af3d3e64e6e8b2b4c76d0b9c005d39691</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t failCode=2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndWebGame</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ad19c9a2167d681f9c68dbb1bd11466dc</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool notifyWorld)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EvaluateEventConditions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a6405c9bea0f9aceffce750bb565402c8</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::shared_ptr&lt; objects::EventCondition &gt;&gt; &amp;conditions, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DemonQuest &gt;</type>
      <name>GenerateDemonQuest</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ac6018f15921c2c0370cc22f249effa18</anchor>
      <arglist>(const std::shared_ptr&lt; CharacterState &gt; &amp;cState, const std::shared_ptr&lt; objects::Demon &gt; &amp;demon)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a5dc2cce0ebe578b1ce4e4a3cd9730cb0</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;eventID, int32_t sourceEntityID, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr, EventOptions options={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a106365599659424c0437dfd3c90c34f7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::EventInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleResponse</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>adf2a129512c7a1da64dc0001a6d6c317</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t responseID, int64_t objectID=-1)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>InterruptEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ae1465767d412e978f7b1a2fbf12e28d5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EventInstance &gt;</type>
      <name>PrepareEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af74d5ba9a47b7f7abf30c221b1b80ed3</anchor>
      <arglist>(const libcomp::String &amp;eventID, int32_t sourceEntityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RequestMenu</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a1c5b3827f27366891374d68708c1c8ca</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t menuType, int32_t shopID=0, int32_t sourceEntityID=0, bool allowInsert=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ResetDemonQuests</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a86a65a1a27093bbe6e4146bf870049a8</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t now, const std::shared_ptr&lt; libcomp::DatabaseChangeSet &gt; &amp;changes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendActiveQuestList</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a5de8063f4d63ed8285b85acdf842a0a0</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCompletedQuestList</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ad82e100059abaf388eb0967950c3e244</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetChannelLoginEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a8c91a8b76b1ae6382b53f20272c31611</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartSystemEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a107a9638d9422302d259dc34251f2e89</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t sourceEntityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartWebGame</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a3ccac5b2968944bd90bf8ab13cb2ae5d</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const libcomp::String &amp;sessionID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDemonQuestCount</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a4a830092dfe60891e04cafbb9c3babf3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, objects::DemonQuest::Type_t questType, uint32_t targetType=0, int32_t increment=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateQuest</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a97b93981c40b1d07882dbe615db5e8cc</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int16_t questID, int8_t phase, bool forceUpdate=false, const std::unordered_map&lt; int32_t, int32_t &gt; &amp;updateFlags={})</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateQuestKillCount</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>acf7c31750060885ae5ee6375f238d787</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::unordered_map&lt; uint32_t, int32_t &gt; &amp;kills)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateQuestTargetEnemies</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>addac608e64c07e6d88201daec806917c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddDemonQuestRewards</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a80e142bc773a3dba64fc3bf4a44129c0</anchor>
      <arglist>(const std::shared_ptr&lt; CharacterState &gt; &amp;cState, const std::shared_ptr&lt; objects::Demon &gt; &amp;demon, std::shared_ptr&lt; objects::DemonQuest &gt; &amp;dQuest)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a014aa6f08876d941843a502c34cf1ec4</anchor>
      <arglist>(int32_t value1, int32_t value2, int32_t value3, EventCompareMode compareMode, EventCompareMode defaultCompare=EventCompareMode::DEFAULT_COMPARE, uint16_t validCompareSetting=63)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Direction</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a6d80733581e311434026103d5d782a2b</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EndEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a27c5a25166b0d544a7a09fda1072127d</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a1087cc0b3c41a4b167ca103d1915e96a</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::EventConditionData &gt; &amp;condition, EventCompareMode compareMode=EventCompareMode::DEFAULT_COMPARE)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateEventCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ae265d45a2e9e02e750ed95a063a951ed</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateEventConditions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a303c0a472e19a3e7c9a10bc0d89fa56c</anchor>
      <arglist>(EventContext &amp;ctx, const std::list&lt; std::shared_ptr&lt; objects::EventCondition &gt;&gt; &amp;conditions)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateFlagStates</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a061582b19ce0d68e5f39027884b7837e</anchor>
      <arglist>(const std::unordered_map&lt; int32_t, int32_t &gt; &amp;flagStates, const std::shared_ptr&lt; objects::EventFlagCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluatePartnerCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>ae069693af178c3f23c7337488ed90311</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestCondition</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a69d51508c937f49dc8de38baee1bb810</anchor>
      <arglist>(EventContext &amp;ctx, const std::shared_ptr&lt; objects::EventCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestConditions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af55f5eb904c1695a400e18ef7e2e3869</anchor>
      <arglist>(EventContext &amp;ctx, int16_t questID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EvaluateQuestPhaseRequirements</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aaff0054d0f24f21664bbff167d6341af</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int16_t questID, int8_t phase)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExNPCMessage</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2db99d518202bc6ee783e9f7a3feab78</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>GetEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a3ae98af92420583911a3e069941e5280</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2f7b3bdb499035c2d5260b9e15ad42e6</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleNext</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a4e3ed0106a6af2dc7415def68b62d436</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleTriFusion</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a1249bebb5cf53b1ffe50756eee84380c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleWebGame</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a5ce5a8a353a2e5563ff4845be2fc8270</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ITime</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a941c5039a80ea633ac12db9ca2634dac</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Multitalk</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a4c4f2505575ac3bc7c0a76d760d9315c</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>NPCMessage</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a8217506a5619a61808b222eb50ad2956</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>OpenMenu</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>af65ef1f610abcbb26d463d351021a960</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PerformActions</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aa61f297d0c5e1619fe3f42713fa804f2</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PlayScene</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>adbb3944eb8d606ba6b055ca5064a00a2</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>PrepareTransformScript</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a18475ffd22a6cd35016427f9d48df05b</anchor>
      <arglist>(EventContext &amp;ctx, std::shared_ptr&lt; libcomp::ScriptEngine &gt; engine)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Prompt</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>acbfa9bc2cb9f0dc2c1439cf140995d17</anchor>
      <arglist>(EventContext &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SetEventStatus</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a13c380a49ac259fe3df161ea066d11ff</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>TransformEvent</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a9424825d0096c55f5b1bcd49fe2fd429</anchor>
      <arglist>(EventContext &amp;ctx, std::shared_ptr&lt; libcomp::ScriptEngine &gt; engine)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>VerifyITime</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>a2a9845adb9272ff0f5f4e497630ad274</anchor>
      <arglist>(EventContext &amp;ctx, std::shared_ptr&lt; objects::Event &gt; e)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1EventManager.html</anchorfile>
      <anchor>aff29d8d9c13936739a82e15f36a41310</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::EventManager::EventContext</name>
    <filename>structchannel_1_1EventManager_1_1EventContext.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>AutoOnly</name>
      <anchorfile>structchannel_1_1EventManager_1_1EventContext.html</anchorfile>
      <anchor>a57b019de1f69a5e064a4e038be8fb439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>Client</name>
      <anchorfile>structchannel_1_1EventManager_1_1EventContext.html</anchorfile>
      <anchor>a4e04da17fb960196a68881301972512d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CurrentZone</name>
      <anchorfile>structchannel_1_1EventManager_1_1EventContext.html</anchorfile>
      <anchor>a304d065f872fcdae02bb0e7bc2e3b23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::EventInstance &gt;</type>
      <name>EventInstance</name>
      <anchorfile>structchannel_1_1EventManager_1_1EventContext.html</anchorfile>
      <anchor>a4bf5f26af1eaecc898688bc51d0c08db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; libcomp::String &gt;</type>
      <name>TransformScriptParams</name>
      <anchorfile>structchannel_1_1EventManager_1_1EventContext.html</anchorfile>
      <anchor>ab0b2b0189f8e2b48c86f0a1635029b67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>channel::EventOptions</name>
    <filename>structchannel_1_1EventOptions.html</filename>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ActionGroupID</name>
      <anchorfile>structchannel_1_1EventOptions.html</anchorfile>
      <anchor>acb10083cdb281780f97ec7fffc809aa2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AutoOnly</name>
      <anchorfile>structchannel_1_1EventOptions.html</anchorfile>
      <anchor>a9005291f7a1e38cdf492f94bdd87ce50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>NoInterrupt</name>
      <anchorfile>structchannel_1_1EventOptions.html</anchorfile>
      <anchor>a445df01daf4d1e5ad566654d6a4779da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; libcomp::String &gt;</type>
      <name>TransformScriptParams</name>
      <anchorfile>structchannel_1_1EventOptions.html</anchorfile>
      <anchor>ad5ea152d9fbc85bf4f4c994f11fccb6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::FusionManager</name>
    <filename>classchannel_1_1FusionManager.html</filename>
    <member kind="function">
      <type></type>
      <name>FusionManager</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>afc62433c481e15ffe7ad613d724f84ea</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FusionManager</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ae8a38eda7caf1def69174d725520723a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndExchange</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a932d7c7debfde482ef714b85e34131fb</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>GetMitamaIndex</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a3a8f34ba227bd147b6887209ba17c203</anchor>
      <arglist>(uint32_t mitamaType, bool &amp;found)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetResultDemon</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a89e84dda80ea20c0d0e6bad209ba5223</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ad8d584a2b3bc56d70b6295c866f32906</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, uint32_t costItemType=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleTriFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a2f4294f93f3bb11d58b057eb1a3783f2</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3, bool soloFusion)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsTriFusionValid</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ad28030a572c6cfe176c48527b8249fcc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Demon &gt; &amp;demon)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>GetAdjustedLevelSum</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ae75ef62ea017a32a72f517a27119f68f</anchor>
      <arglist>(uint8_t level1, uint8_t level2, int8_t finalLevelAdjust=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetElementalFuseResult</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>aaf65d560481634f9e577e1ada3e4dbfb</anchor>
      <arglist>(uint32_t elementalType, uint8_t otherRace, uint32_t otherType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetElementalIndex</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>af854ee619d777116511cf67da84b726f</anchor>
      <arglist>(uint32_t elemType, bool &amp;found)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetElementalType</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a36493205970cac07a18a2a1c5a86f555</anchor>
      <arglist>(size_t elementalIndex) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetMitamaType</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a2ffbcf3b19eb393d891f23814f47f959</anchor>
      <arglist>(size_t mitamaIndex) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>size_t</type>
      <name>GetRaceIndex</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a8bcf7a1e9f4b4e8fe291ffc631268f4c</anchor>
      <arglist>(uint8_t raceID, bool &amp;found)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::MiDevilData &gt;</type>
      <name>GetResultDemon</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>abd50a722ca8d46683d2a126ff11d0eed</anchor>
      <arglist>(uint8_t race, int8_t adjustedLevelSum)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>ProcessFusion</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>a6c94559195a19c0043f640153b41234a</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int64_t demonID1, int64_t demonID2, int64_t demonID3, uint32_t costItemType, std::shared_ptr&lt; objects::Demon &gt; &amp;resultDemon)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>RankUpDown</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>afc9fa384b354a1f05ca8db04a4c6f355</anchor>
      <arglist>(uint8_t raceID, uint32_t demonType, bool up)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1FusionManager.html</anchorfile>
      <anchor>ac05ad9adebee3e157210a781e1549c86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Line</name>
    <filename>classchannel_1_1Line.html</filename>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>acc11b8a429d8cdd63ba6803dff5602b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a0ec34f80a43014768ec228bfa87fd15f</anchor>
      <arglist>(const Point &amp;a, const Point &amp;b)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Line</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>af46625f186ecafe2b335bc6878f0797b</anchor>
      <arglist>(float aX, float aY, float bX, float bY)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Intersect</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a2bc24eb7631a8860e0ecf8ff48a299f6</anchor>
      <arglist>(const Line &amp;other, Point &amp;point, float &amp;dist) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1Line.html</anchorfile>
      <anchor>a1790e7ca4fc380e0f8b55294b4d40375</anchor>
      <arglist>(const Line &amp;other) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerClientPacket</name>
    <filename>classchannel_1_1ManagerClientPacket.html</filename>
    <base>libcomp::ManagerPacket</base>
    <member kind="function">
      <type></type>
      <name>ManagerClientPacket</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>a515bb5812b20e0df5030360b8608363a</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerClientPacket</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>ad67eafa601a82a49eb1ffc1995ff11ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>ValidateConnectionState</name>
      <anchorfile>classchannel_1_1ManagerClientPacket.html</anchorfile>
      <anchor>abbc1ce1cc655eb58b7e1b51dba17ea5d</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::TcpConnection &gt; &amp;connection, libcomp::CommandCode_t commandCode) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerConnection</name>
    <filename>classchannel_1_1ManagerConnection.html</filename>
    <base>libcomp::Manager</base>
    <member kind="function">
      <type></type>
      <name>ManagerConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a69744db1fdb43b965b8304f1685533a0</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aeca514062c780714800271a9a4aae4dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacketToClients</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a34fd148f69ecdc185da5d6a6159f7bb8</anchor>
      <arglist>(libcomp::Packet &amp;packet)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GatherWorldTargetClients</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a245b13119f9a2e0129bae43124755e64</anchor>
      <arglist>(libcomp::ReadOnlyPacket &amp;p, bool &amp;success)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetAllConnections</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ab34a3847e7c8529e5c6477483bb22965</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>GetClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a75f61653a68552b48a1923867ac4bb8a</anchor>
      <arglist>(const libcomp::String &amp;username)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ChannelClientConnection &gt;</type>
      <name>GetEntityClient</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>abf8b483c60943afebd797ed895d84a06</anchor>
      <arglist>(int32_t id, bool worldID=false)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetEntityClients</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a20786e9467ff96a7afb33e13be08dd3e</anchor>
      <arglist>(std::set&lt; int32_t &gt; ids, bool worldID=false)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetPartyConnections</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>afbb4a01102ebfd791354391ad87c77d3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool includeSelf, bool zoneRestrict)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>afb0b50132fc40f19d81d8a2e07e3e4d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; libcomp::InternalConnection &gt;</type>
      <name>GetWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aeba1e85007fe768baba5af30eecfe0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleClientTimeouts</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a5363d0ed738b6cd6579415d984cf68f5</anchor>
      <arglist>(uint64_t now, uint16_t timeout)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ad07e4c1a45811f93e6ac9fd46da74e55</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>aec7c5afe24d86f529c1210744ee1e08c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RequestWorldInfo</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ae7fbbd3b68f708c55ed6a5390b590b83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ScheduleClientTimeoutHandler</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a0fba9c2f11da6a52506c1c6d52ca0926</anchor>
      <arglist>(uint16_t timeout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetClientConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ae27bcf9124a921dd016eda06f94db62e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>af63ccbd892aeb302afec75909f82889d</anchor>
      <arglist>(const std::shared_ptr&lt; libcomp::InternalConnection &gt; &amp;worldConnection)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; libcomp::String, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>mClientConnections</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>ac67d9b4cae205e0505ba476ede4b8e24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>af18d61785eea2c57f32e3a6192713d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>abedc9312abe7111813343d87d673afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; libcomp::InternalConnection &gt;</type>
      <name>mWorldConnection</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a9e6a2e67401cdd845a4eee9671de2e39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>sSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerConnection.html</anchorfile>
      <anchor>a72b30885e78c7d972a5c85647d46e0a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ManagerSystem</name>
    <filename>classchannel_1_1ManagerSystem.html</filename>
    <base>libcomp::Manager</base>
    <member kind="function">
      <type></type>
      <name>ManagerSystem</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a4e4ad488e54810d73c5c11b92f3f866a</anchor>
      <arglist>(std::weak_ptr&lt; libcomp::BaseServer &gt; server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ManagerSystem</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a6742e75e9469ad222a7caa4cdd96d606</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>GetSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>ad37046344781a857f6d1edb0a8f3eb59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>ProcessMessage</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a52e04861d985e4b365749950f79769c5</anchor>
      <arglist>(const libcomp::Message::Message *pMessage)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; libcomp::BaseServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>ad98f7127300ab1ab8dc1b4d51e855936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::list&lt; libcomp::Message::MessageType &gt;</type>
      <name>sSupportedTypes</name>
      <anchorfile>classchannel_1_1ManagerSystem.html</anchorfile>
      <anchor>a83931d1d271d36781ae9f05fee7be1a8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::MatchManager</name>
    <filename>classchannel_1_1MatchManager.html</filename>
    <member kind="function">
      <type></type>
      <name>MatchManager</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a663c433567ebf77939425b220c2f5de0</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatchManager</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a0f50636ebcd0810eb8c348ee5a7ea226</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AdvancePhase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a0913e3d62896e1363e46b21874c45050</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int8_t to=-1, int8_t from=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CancelQueue</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a30cc5399d08aa6a7cc7f03a5ad30bd5b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CleanupPendingMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a1b20fbe46d19058165854926fb792cae</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CompleteBaseCapture</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>acac4b45efd60350b1ec4fd2120a06a72</anchor>
      <arglist>(int32_t entityID, int32_t baseID, uint32_t zoneID, uint32_t instanceID, uint64_t occupyStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConfirmMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a16533f95db1bd88534dedb9e0b968591</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t matchID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EndPvPMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ac30d631f665153b7dd53b840b65f5654</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnterDiaspora</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a2a850f162ad1a3deef15a05893e7eb28</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnterPvP</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a2e5ad9e24f058f06c5f09e358d3c6f7b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EnterUltimateBattle</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a0a6c07541ac4d28b19a6b6eaa7a0c1c7</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpirePvPAccess</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ac7e2f2b82a96bb070cc533c5f92733ed</anchor>
      <arglist>(uint32_t matchID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::MatchEntry &gt;</type>
      <name>GetMatchEntry</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a9f445d52ea62be3c121358bc7e8cc087</anchor>
      <arglist>(int32_t cid)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PentalphaMatch &gt;</type>
      <name>GetPentalphaMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a349b1f3c29807dfe00814d8a2b6b3972</anchor>
      <arglist>(bool previous)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PvPData &gt;</type>
      <name>GetPvPData</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a2d4477046f54fee88ddf02d23fff8dc9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool create=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::UBTournament &gt;</type>
      <name>GetUBTournament</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad079e62e3ab2bfcfbb2b1408de0236af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>IncreaseBaseBonus</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a459ce157278d1d41d822888a44f69f7b</anchor>
      <arglist>(int32_t baseID, uint32_t zoneID, uint32_t instanceID, uint64_t occupyStartTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>JoinQueue</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>adf303c0a30c23877eaf1963d152df1d8</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int8_t type)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>JoinUltimateBattleQueue</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>acc97873ad449eddc7d6c1e43932dca98</anchor>
      <arglist>(int32_t worldCID, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LeaveBase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a2154bfd32fbf6dbadffbfbc05964c163</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t baseID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LeaveTeam</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a90a921dba2fde50c85ca0c6542ecd11e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t teamID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LeaveUltimateBattle</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a5914239df12432115533f5de70eae002</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PentalphaEntry &gt;</type>
      <name>LoadPentalphaData</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ae46c508489c10ba528b4956cf17c830a</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint8_t idxFlags=0x03)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::UBResult &gt;</type>
      <name>LoadUltimateBattleData</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a0925af7e3c19e827e3cf1b6501bb7cc4</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint8_t idxFlags=0x03, bool createMissing=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PlayerKilled</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ae59cedf4dfe542aea97f4e9930db0805</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;entity, const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PvPInviteReply</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a440dffaa1809b7f09491abe100fb2dde</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t matchID, bool accept)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RejectPvPMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a80162b7e00d0a14d3cf1f8c72188a49c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>RequestTeamPvPMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a3d6f7a98fe445310a4adee0b9c9af48e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t variantID, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ResetDiasporaBase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad3ef75078e2415ba4595a0638b875c07</anchor>
      <arglist>(uint32_t zoneID, uint32_t instanceID, int32_t baseID, uint64_t resetTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDiasporaLocation</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a78af811ea64f32e6d3b260120088f45c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t instanceID, bool enter, bool others=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendPvPLocation</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>adfda1e6b5fc5eaa0e963e51d7a8f74e5</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t instanceID, bool enter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendUltimateBattleRankings</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a7d0bd2f535a02c21595b6049285b2f37</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendZiotite</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a6a10b4dc796a9c4aa1b92f482169115c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Team &gt; &amp;team, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartPvPBaseCapture</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a444b2cbed5739e4a283e5b9f781b7c09</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t baseID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StartPvPMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a66c32d687df8d5780a6461db710212ca</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartStopMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a21193266af64dd7dce1325fc9a022fe6</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; objects::Match &gt; &amp;match)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartUltimateBattle</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad9e23618f0c20a020f5891b5b241af51</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartUltimateBattleTimer</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a400a0d0ecf5c8ebbfb4c971458fc452b</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t duration, const libcomp::String &amp;eventID, bool endPhase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ToggleDiasporaBase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a7b696e260a65e50bdd419b5b4a31ddf5</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int32_t baseID, int32_t sourceEntityID, bool capture)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UltimateBattleBegin</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a08550bb47a58b700bef615fac5b6fa21</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UltimateBattleQueue</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a1b0a8644040702c76695f37756796e6a</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UltimateBattleRecruit</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a9e1b96bc16206991f6e09feb13fd23fc</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UltimateBattleSpectate</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a266589cfa5975d6ff4ee2d9ec4ab0c73</anchor>
      <arglist>(int32_t worldCID, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UltimateBattleTick</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a16da9baef4a4fbdd1e8ea23b131130a2</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateMatchEntries</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a0d79f97e5589346b85bd15e0d9cbccff</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::MatchEntry &gt;&gt; &amp;updates, const std::list&lt; std::shared_ptr&lt; objects::MatchEntry &gt;&gt; &amp;removes)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePentalphaMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a70b34b556999e0c0ced57699c4cdbe99</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PentalphaMatch &gt; &amp;match)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdatePvPMatches</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a76c48aac3c35eb7b927720c0fc810d6b</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::PvPMatch &gt;&gt; &amp;matches)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>UpdatePvPPoints</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a24e3441b3a4a16a68be14af052f2b0ac</anchor>
      <arglist>(uint32_t instanceID, std::shared_ptr&lt; ActiveEntityState &gt; source, std::shared_ptr&lt; ActiveEntityState &gt; target, int32_t points)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>UpdatePvPPoints</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a1970ade6d546094f2782ececbaa6073a</anchor>
      <arglist>(uint32_t instanceID, int32_t sourceID, int32_t targetID, uint8_t teamID, int32_t points, bool altMode)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateUBPoints</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>aa9b357be9d0e8b9188fd871007c34549</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t adjust)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateUBRankings</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ab577a0400b37bb3d600056311073435e</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::UBResult &gt;&gt; &amp;updated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateUBTournament</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a1b464a388d86fdc9f03302646cb95fca</anchor>
      <arglist>(const std::shared_ptr&lt; objects::UBTournament &gt; &amp;tournament)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateZiotite</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>aba09606e93afab5b0d88d043312394dc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Team &gt; &amp;team, int32_t sZiotite, int8_t lZiotite, int32_t worldCID=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>InPvPTeam</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad78bf8d5e4e73b2ee9025ed10828aed1</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;entity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>PvPActive</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>aa25e7a58f9bf8a4bedee9305a57de415</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SpectatingMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>adb13d7285ed068ccb3e3ff1abe3418ec</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CreatePvPInstance</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a7a6fbdfeeb42144e72bc3960730872a6</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PvPMatch &gt; &amp;match)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>EndUltimateBattle</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a49a7f6eadd75e5526239f4053ea60dfb</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EndUltimateBattlePhase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>acc3e48539666eb01cf6aaccaee293c56</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool matchOver)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>FirePhaseTriggers</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad71c50c4e873eb3bca9ac57163ef53dd</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int8_t phase)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GetPvPTrophies</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a936ddd4be86cb54e660ec5ee1f84edcf</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>QueueNextBaseBonus</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ad5d6a0af352f04d2d310f940b85374d2</anchor>
      <arglist>(int32_t baseID, const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t occupyStartTime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>QueuePendingPvPMatch</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ae6edfcfd58cc90c3a5e75799313c3322</anchor>
      <arglist>(uint8_t type, uint32_t readyTime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendPhase</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a006d1b356e730613970761a702b459d2</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool timerStart=false, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendUltimateBattleMembers</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a02bcc21cad9a58dc2f621256b104c88e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendUltimateBattleMemberState</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a02d9f8a7173fd44aa62b9e4bab5fbebc</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ValidateMatchEntries</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a73e38a32eea3e7f23643c0de24934e70</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, int8_t teamCategory, bool isTeam, bool checkPenalties)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>IsPvPMatchEntry</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a72581404ebb657c42613a0ec5a662bc3</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MatchEntry &gt; &amp;entry)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>MatchTeamsActive</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a2793de0ff88cfe9679bc91914b1b08e3</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a90422c5166097a8e962b45ab2c53516c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::MatchEntry &gt; &gt;</type>
      <name>mMatchEntries</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>ac5f1868822db222e10211d071c23df19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mPendingPvPInvites</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a763eaf9b3cde23e7aac24efbf98a0473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::array&lt; std::shared_ptr&lt; objects::PentalphaMatch &gt;, 2 &gt;</type>
      <name>mPentalphaMatches</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a26cfe74aff0c1394f0f4c81aab291721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>aeb86b9b965ff57bdc3aeffc27a49788a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::array&lt; std::array&lt; std::shared_ptr&lt; objects::UBResult &gt;, 10 &gt;, 4 &gt;</type>
      <name>mUBRankings</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a11da2ea1b3cf0f33bbf13eb26c15e39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::UBTournament &gt;</type>
      <name>mUBTournament</name>
      <anchorfile>classchannel_1_1MatchManager.html</anchorfile>
      <anchor>a610a339f0990064bb49d38b990a7c570</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::PerformanceTimer</name>
    <filename>classchannel_1_1PerformanceTimer.html</filename>
    <member kind="function">
      <type></type>
      <name>PerformanceTimer</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>ac0d3f50c7462cbccfb797107a7cfc22c</anchor>
      <arglist>(ChannelServer *pServer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Start</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>abeb4129ee51d2a0cea7908a7c816c2d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Stop</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>a3b79f8fe6ea6c37a8dbb4d8c1dada077</anchor>
      <arglist>(const libcomp::String &amp;metric)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mEnabled</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>a4987196731257a059b71074dcd4479f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ChannelServer *</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>affdd288d69b867161d9264e04727b55d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ServerTime</type>
      <name>mStart</name>
      <anchorfile>classchannel_1_1PerformanceTimer.html</anchorfile>
      <anchor>a7c61eb5ea6007ce2c653eb583d6a9988</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::PlasmaPoint</name>
    <filename>classchannel_1_1PlasmaPoint.html</filename>
    <member kind="function">
      <type></type>
      <name>PlasmaPoint</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>aa92fe6a8de968fa578568f3b7931518c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::LootBox &gt;</type>
      <name>GetLoot</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a09fd384620a037187de0c38a170344f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetState</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>ae26cbbd20eeab8cdf793e989a8b61403</anchor>
      <arglist>(int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Refresh</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a51320216065995cc0f6cce154fdc4c1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mHidden</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a7a77b3fdcfc3e68c16123b52a5256346</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint64_t</type>
      <name>mHideTime</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a242937e7af0c8ed84634c2299d5aeb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; objects::LootBox &gt;</type>
      <name>mLoot</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a27e9a5ec8ce341318972df7b28283168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int32_t</type>
      <name>mLooterID</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>a20a0f383528f1ca1d9a5bed77186bca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mOpen</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>aef72185048ab5a8cb6539fc8c844fd85</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaPoint.html</anchorfile>
      <anchor>abb8fd2c670829f2624b47a28b03996d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::PlasmaState</name>
    <filename>classchannel_1_1PlasmaState.html</filename>
    <base>EntityState&lt; objects::PlasmaSpawn &gt;</base>
    <member kind="function">
      <type></type>
      <name>PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>aa5f40676c461c0cf323e5c0dc688f615</anchor>
      <arglist>(const std::shared_ptr&lt; objects::PlasmaSpawn &gt; &amp;plasma)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PlasmaState</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ae885dc160a9c739e7edd098a221e492a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CreatePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a136733dcbae56560412f4e6af8311623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>GetActivePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a38cdfff2b74064fc24fc7098dfa5c1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::PlasmaSpawn &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1EntityState.html</anchorfile>
      <anchor>a78ed793f6bd313a5167573938b18bb23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>GetPoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a5cd4a9577acb43280dd78a5b8c7f88a6</anchor>
      <arglist>(uint32_t pointID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPointStatusData</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ac0fbe4b4e64f10900d8bf8fa3b4eabe6</anchor>
      <arglist>(libcomp::Packet &amp;p, uint32_t pointID, int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetPointStatusData</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a856c4bd95919b3d62d16be595ebaf206</anchor>
      <arglist>(libcomp::Packet &amp;p, std::list&lt; uint32_t &gt; pointIDs, int32_t looterID=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStateChangePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a7d081bc8e576c7aa1f040fc855bc11e4</anchor>
      <arglist>(bool respawn, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HideIfEmpty</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a60f0ee1482069bb56dedccfb9970a8ee</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaPoint &gt; &amp;point)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsActive</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a75cdd60787b62a5063115b902179b7be</anchor>
      <arglist>(bool visible=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>PickPoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>afdd507915da89c3ab86dff8b8695e689</anchor>
      <arglist>(uint32_t pointID, int32_t looterID)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>PopHidePoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a49e14b79193af0420f07c82aa748eec8</anchor>
      <arglist>(uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>PopRespawnPoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a11d14c7e144ba0570711967677114658</anchor>
      <arglist>(uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SetLoot</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a9465bfb81abf8153dd28b250e3171be8</anchor>
      <arglist>(uint32_t pointID, int32_t looterID, const std::shared_ptr&lt; objects::LootBox &gt; &amp;loot)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaPoint &gt;</type>
      <name>SetPickResult</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>ab9e5f69c81480fff443811d3384082d4</anchor>
      <arglist>(uint32_t pointID, int32_t looterID, int8_t result)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Toggle</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a812c4c04cbfd2cb023620202753e3c1b</anchor>
      <arglist>(bool enable, bool activation=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HidePoint</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a1c0a7df325e03c7930757d51d7f00b21</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaPoint &gt; &amp;point)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDeactivated</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>abb68ca406223daad52d9d7dbc8145564</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDisabled</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a3bf7a81d2be10c99bac625a54dc1af2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a4005e97adb6cfbcdd7b8f175f0a2d76c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>mPointHides</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a294ca5b4a290ccb1dcd79e2e22ebf71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, uint64_t &gt;</type>
      <name>mPointRespawns</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a46366278846115a80644410db4d9e489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaPoint &gt; &gt;</type>
      <name>mPoints</name>
      <anchorfile>classchannel_1_1PlasmaState.html</anchorfile>
      <anchor>a474927d6bf4abcaa08f727ce773c54d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Point</name>
    <filename>classchannel_1_1Point.html</filename>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>ad92f2337b839a94ce97dcdb439b4325a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Point</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a54cdb703246287e21c059740035a61ed</anchor>
      <arglist>(float xCoord, float yCoord)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetDistance</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a7024cd1ebe8d324959b22119f5f7155c</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>aac8cc421b631fdeedfa084cf924c2164</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a47584280150c7a90e86358b1edf8f810</anchor>
      <arglist>(const Point &amp;other) const </arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>x</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a68b4e13bacc608f5596f21858065aa42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>y</name>
      <anchorfile>classchannel_1_1Point.html</anchorfile>
      <anchor>a024b2065140ee28b1c65aaedc2244b2d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ProcessingSkill</name>
    <filename>classchannel_1_1ProcessingSkill.html</filename>
    <member kind="variable">
      <type>int32_t</type>
      <name>AbsoluteDamage</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a263c50ea8c7b6bf7ca1c9d7ef024b084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Absorbed</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a398400a92efa53eb70196439e5fe9c3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>Activated</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aeafc94de7a098017060da7e32abc3075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>BaseAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a5ca8b8b1f272940d681fa0327f9e8b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CanNRA</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aa2a83c940fe9fa6e9a01e27afc758b38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int16_t</type>
      <name>ChargeReduce</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>af2e94c81d9b9a8eeef999cafb581a67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CurrentZone</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a57df6fd35f4b21ab4162121803902098</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::MiSkillData &gt;</type>
      <name>Definition</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a437534c16a88d3a2585a835810d030a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>EffectiveAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a043d592b0133c7e93062a61cb85851c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SkillDependencyType_t</type>
      <name>EffectiveDependencyType</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a7f589a0439fb1c62c3f9a11132494830</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>EffectiveSource</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>afd25b45e1b69217d1c1d8f2a253fc14d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SkillExecutionContext *</type>
      <name>ExecutionContext</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a22a1409cfa826c24759786c21d543398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ExpertiseRankBoost</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>af4f87cea723c152b7166d964c3554072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>ExpertiseType</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aab3432df31635d3555d4c958ab644b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>FunctionID</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a1059ebedf497933789ee74aedee89f14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HardStrike</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>acc62678c74dcd23fd66a1d736c07fd23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>InPvP</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a95ba84f233da106bfdb3977162e931f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsItemSkill</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>adc9bae4b803dfa42bae7d3b6847656f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsProjectile</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ace9ed2122b335b48bc5f4948f3312068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>KnowledgeRank</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a98e71e1766093cb686fef1abac1d4f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>NRAAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>af8a17bfd0fcab84d05c1092baa733713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Nulled</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a3667592c6525a807629916b037fdd0b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>OffenseValue</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a83e3278743e30304f946dec3f384d9c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, uint16_t &gt;</type>
      <name>OffenseValues</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ac80d3f335679d23cf7cc86f236a2f7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>PrimaryTarget</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ab4c79afde34582090f4cefaddee1b3dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Reflected</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>afd5187c5fd130493fb4a5faad14774b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; Point &gt;</type>
      <name>RushStartPoint</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>aa0778f6db1dc396e6ee652f225fc5099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>RushStartTime</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a58a23d6d90fc323c049441a125f8064c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SkillID</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a9002395b6baea30e968e8fe0c0ec4fc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CalculatedEntityState &gt; &gt;</type>
      <name>SourceCalcStates</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a9158ec06e1c62f996ff1df4726aafb2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>SourceExecutionState</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a2e628e1325892298ce6280ae04406a94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::CalculatedEntityState &gt; &gt;</type>
      <name>TargetCalcStates</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>ac2dfd969402b9de5e2571cca2d55e076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; channel::SkillTargetResult &gt;</type>
      <name>Targets</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a83505b5c4f10df9b84442c64ac552928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>WeaponAffinity</name>
      <anchorfile>classchannel_1_1ProcessingSkill.html</anchorfile>
      <anchor>a6bafed28d15b60484f757817f19ad0ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillExecutionContext</name>
    <filename>classchannel_1_1SkillExecutionContext.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>IgnoreAvailable</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a4c5781bdcc397bb37724e4c985eb16bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>ApplyAggro</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a0a54a21da11d96d6f8fb97483a781706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>ApplyStatusEffects</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a0ed1b4c3a44bfc7b4a9fe146f515eff6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; channel::ProcessingSkill &gt;</type>
      <name>CounteredSkill</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a4581219f854a35b5ae4290d5fa5035fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; channel::ProcessingSkill &gt; &gt;</type>
      <name>CounteringSkills</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a8f294f9f2b30b98cde90a18c697f6cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Executed</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a8db77303c146da57c509945059e2a22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>FastTrack</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>afe74cad9d0793af626f0be843142dd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Finalized</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a08402e6adad32bfb545e30533db5b1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Fizzle</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a4ec25abef3525019fc3f6963b5736a2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::shared_ptr&lt; channel::ProcessingSkill &gt;</type>
      <name>Skill</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a79e5ca9913843332e9039240d9f04dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; std::shared_ptr&lt; channel::SkillExecutionContext &gt; &gt;</type>
      <name>SubContexts</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>a7aebaeda8fe9e2e8513c6dad26cad55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>SkillManager</name>
      <anchorfile>classchannel_1_1SkillExecutionContext.html</anchorfile>
      <anchor>ab2808df3d22027c85233399b8af2be57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillManager</name>
    <filename>classchannel_1_1SkillManager.html</filename>
    <member kind="function">
      <type></type>
      <name>SkillManager</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>afe2873aeeb9dacf7feb50976921dbd99</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SkillManager</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a15b8075e2e32921af715cd52156c57c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ActivateSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7406b360fd2e64784793d6bc93581be1</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, uint32_t skillID, int64_t activationObjectID, int64_t targetObjectID, uint8_t targetType, std::shared_ptr&lt; SkillExecutionContext &gt; ctx=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>BeginSkillExecution</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>adc766e98367c23acd5945a42b84d67b2</anchor>
      <arglist>(std::shared_ptr&lt; ProcessingSkill &gt; pSkill, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CancelSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a0bb0bf04549c198bf9531abe5a2ddfb6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID, uint8_t cancelType=1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompleteSkillExecution</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad0bbc44a17edd47cec231b74ff11ef4b</anchor>
      <arglist>(std::shared_ptr&lt; ProcessingSkill &gt; pSkill, std::shared_ptr&lt; SkillExecutionContext &gt; ctx, uint64_t syncTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DetermineNormalCosts</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad6a2d4cf1f75b2835cc4f0aa2a5025ef</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, int32_t &amp;hpCost, int32_t &amp;mpCost, uint16_t &amp;bulletCost, std::unordered_map&lt; uint32_t, uint32_t &gt; &amp;itemCosts, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a571e70d908c5a909421936c5858a7f2c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID, int64_t targetObjectID, std::shared_ptr&lt; SkillExecutionContext &gt; ctx=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>FunctionIDMapped</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a6817d9cbecbf875f74ebee876f13b29c</anchor>
      <arglist>(uint16_t functionID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>PrepareFusionSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab99cbd8e0bc237f9a927906500bdb716</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint32_t &amp;skillID, int32_t targetEntityID, int64_t mainDemonID, int64_t compDemonID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ProjectileHit</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a0379a98489089bf962f3b46a06ec81ac</anchor>
      <arglist>(std::shared_ptr&lt; ProcessingSkill &gt; pSkill, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScheduleAutoCancel</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>adc5281db696f1a1d432fb6ce73c13bc9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendFailure</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae92609e73770c9929b038b3d710ba49f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, uint32_t skillID, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint8_t errorCode=13, int8_t activationID=-1)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillRestricted</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a53d77a78c684c79933dadb27088ebf6f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, int64_t activationObjectID=0, std::shared_ptr&lt; SkillExecutionContext &gt; ctx=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SkillZoneRestricted</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1e67357b02a7eaaba548924317f9878b</anchor>
      <arglist>(uint32_t skillID, const std::shared_ptr&lt; Zone &gt; zone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TargetInRange</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1bf8095d923abd74acdbb44efd069f14</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;target)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TargetSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab6a48e4cd80c4d5a4c4642a3967a639e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int64_t targetObjectID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ValidateActivationItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a82dd01525fe84343f8e2f61d201791c8</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; objects::Item &gt; &amp;item)</arglist>
    </member>
    <member kind="function">
      <type>int8_t</type>
      <name>ValidateSkillTarget</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8c4664de349f0c05b1e7c7e0774ac8fe</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;target)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; float, float &gt;</type>
      <name>GetMovementSpeeds</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a9e0514f941634bb18fe7a113e66525f4</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>SkillHasMoreUses</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a51c07350d47a85ee98603c72187867f1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ApplyNegotiationDamage</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af0ff69fb12067af496b53a0e15a16065</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ApplyPrimaryCounter</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ac7df280bcef597be9d42f433aa9ef53f</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, bool guard)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ApplySecondaryCounter</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af51af412abf2a07a7650e0c69c0acd0e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ApplyZoneSpecificEffects</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a654deedde1144b6d368d506f04b41dc4</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CalculateDamage</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a990fe0a3459e469805a8a4315e4945b9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_MaxPercent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a059c4b19b9015067322b597e7bf3c7b3</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType, int32_t max)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Normal</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a5c6c6b09c8f27e03c03a25d8bb870b56</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, uint16_t mod, uint8_t &amp;damageType, float resist, uint8_t critLevel, bool isHeal)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Percent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a26276aa6f8f48a8b626a3000aff7597d</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType, int32_t current)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int32_t</type>
      <name>CalculateDamage_Static</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aa91987c6785bb264785a74732fb63bc0</anchor>
      <arglist>(uint16_t mod, uint8_t &amp;damageType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint16_t</type>
      <name>CalculateOffenseValue</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7f5152ec0b0fb5a3020c162c26d1cee3</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>CalculateStatusEffectStack</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a31c3681e16c5afd131bbd6fbc03dac7c</anchor>
      <arglist>(int8_t minStack, int8_t maxStack) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Cameo</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab6ff4a1c215f20c4379a0e7c59bc991f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Cloak</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aeb2fd10279b5e29b00035a71f5a2e4c1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DCM</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a24e99179d5d166133b2aacc5798229dc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Despawn</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a3b48de5b7f159b3287037d859c9f70a9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Desummon</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>adc46cce00c0864e51e44e1551e995d27</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DetermineCosts</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a61cf2cba0d9fa944d05aca78fe8b621f</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; source, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Digitalize</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1794d453b46b17cf3798d45eedadeb76</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DigitalizeBreak</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af5783dd2069d8f248c1b91aac87b20ef</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DigitalizeCancel</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af41af47c99b1ecf679f185e3751fdd09</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DirectStatus</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a035e70888d2c8b97077879bab42d7904</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>EquipItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a82e4b8e87ecb3562ea5b0e7ab7b5fa6c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Estoma</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ace6abb75d423bf4a9b5dbfde351b254f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>EvaluateTokuseiSkillCondition</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a63c158f2b00c42fd37574e7df4dd59d4</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::TokuseiSkillCondition &gt; &amp;condition, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;otherState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int8_t</type>
      <name>EvaluateTokuseiSkillConditions</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a2eb4cf50eb37f78a4e656ff2e2c0cf49</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::list&lt; std::shared_ptr&lt; objects::TokuseiSkillCondition &gt;&gt; &amp;conditions, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;otherState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteNormalSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad83dca0d9d2173bc3a91984c086a6aa9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a165b8f539ce2c8bddd695dbe468506e8</anchor>
      <arglist>(std::shared_ptr&lt; ActiveEntityState &gt; source, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; SkillExecutionContext &gt; ctx, bool delayedAuto=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>FamiliarityUp</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ada31a2de4821971ea2e6e0291a3cdffb</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>FamiliarityUpItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab6635d91d56e107d100ed7f656b4d7ed</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>FinalizeSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8b217900e750817887230f289177d7bd</anchor>
      <arglist>(const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>FinalizeSkillExecution</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a35cdf82c2ccf61231a35e10da83285f4</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Fizzle</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8a0114af8fced352d87143463d46bd16</anchor>
      <arglist>(const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ForgetAllExpertiseSkills</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae8b4d9e490420bbcfe99de421ecde9d0</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::ActivatedAbility &gt;</type>
      <name>GetActivation</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a3f5abb1b448536fe609289171991105b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, int8_t activationID) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>float</type>
      <name>GetAffinityBoost</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae79c41cae170be1cfd08e8dc411387ba</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; eState, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, CorrectTbl boostType)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>GetCalculatedState</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a205507530e58c4473bdd21b755284043</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, bool isTarget, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;otherState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>GetCritLevel</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1ab4c19d71557019668265f593f0158e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int16_t</type>
      <name>GetEntityRate</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a27112642b518c1440c91297dca0f01be</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; eState, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState, bool taken)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::unordered_map&lt; uint8_t, std::list&lt; std::shared_ptr&lt; objects::ItemDrop &gt; &gt; &gt;</type>
      <name>GetItemDrops</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab87c27c116a5f1cac7e33bd63231cdfc</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool giftMode=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>GetNRAResult</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4b1b988818af19ff6b5d08855a82cf56</anchor>
      <arglist>(SkillTargetResult &amp;target, ProcessingSkill &amp;skill, uint8_t effectiveAffinity)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint8_t</type>
      <name>GetNRAResult</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a83ba15d0f12201ed41422329fa68d7ed</anchor>
      <arglist>(SkillTargetResult &amp;target, ProcessingSkill &amp;skill, uint8_t effectiveAffinity, uint8_t &amp;resultAffinity, bool effectiveOnly, bool reduceShields)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ProcessingSkill &gt;</type>
      <name>GetProcessingSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7c26e2530a1161e8be3baf421f8d5272</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SkillTargetResult *</type>
      <name>GetSelfTarget</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a3fa4d202e094d1da77bb551d39c887c9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, std::list&lt; SkillTargetResult &gt; &amp;targets, bool indirectDefault, bool autoCreate=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>uint32_t</type>
      <name>GetSummonSpeed</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a401f7883df3e742fcde2719ba17c5eac</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>GiveDemonPresent</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4c98b266d085e01ee87e614e003aa68b</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t demonType, uint32_t itemType, int8_t rarity, uint32_t skillID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleCounter</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a582057e8152be1706e6570dd82577459</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDigitalizeXP</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aea55dd2f2d418f486d195990a6457911</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;enemies, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleDodge</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8276eb940e4be2c67745450801652d8a</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDurabilityDamage</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aaf23effc63e399aba3448249ed01879e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; entity, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleEncounterDefeat</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a732600b82e6954ea775b3d9674847fb2</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::unordered_map&lt; uint32_t, uint32_t &gt; &amp;encounterGroups)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleFusionGauge</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab677cb8f1fab25324cf2820b8679ade9</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleGuard</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aac815aacf663964476b6b49d5f51687b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleKills</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7374c01e11679c88caf69bf08a02661a</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; killed)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleKillXP</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a83a76b9c3a61f7424e56bf65cfedc41d</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Enemy &gt; &amp;enemy, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleNegotiations</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a90e7d639038c43a6cd73449536ef765c</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; source, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::pair&lt; std::shared_ptr&lt; ActiveEntityState &gt;, uint8_t &gt;&gt; talkDone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleRevives</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7b47eefe2071acc7e02cc94e3caf4c65</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; revived, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>HandleSkillInterrupt</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a389958759c5b7ad1f390640a439d99d5</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleSkillLearning</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>af72207cc604e0f684b152050a866f35b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; entity, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>HandleStatusEffects</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>acc2298cf7d01d37dab6684aa57da644d</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;source, SkillTargetResult &amp;target, const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IFramesEnabled</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a244c62b7e0dc3889448c5e721cd58be2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>InterruptEvents</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aa2ab5371006f3d79f73514a649d00847</anchor>
      <arglist>(const std::set&lt; int32_t &gt; &amp;worldCIDs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsTalkSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a44d7da1d80c9a922c64e510c079ad739</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSkillData &gt; &amp;skillData, bool primaryOnly)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Liberama</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a5ac85511b8064e641b7d2754eab2d3d5</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>MinionDespawn</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a83d7657700f8b3741b5c7c08e44e14a9</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>MinionSpawn</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aa6e464cf87cb5793673794b49da4d14f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Mooch</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4aa0cd6330f710fb2f817b25b5d7d59f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Mount</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aaddf5c4f29761c98823dbd03c330b2c4</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ProcessSkillResult</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a7f845da81ecdfccf216904c6b8cebef2</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ProcessSkillResultFinal</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ad91a8b4bfc4b9e5f341516654adf1c80</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, std::shared_ptr&lt; SkillExecutionContext &gt; ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RandomItem</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>adf6c49251ce5117ec70c35edb8cc3c53</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Randomize</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a8c1d0592f6875e8dd27be91e5cc04f49</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Respec</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a78efe60619a5e8037dc07568310531fc</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Rest</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a796f2a2fad4b3ff44b90ba310f7c44de</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ScheduleFreeLoot</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ae2265bff94c512e5aca42e471f25aba7</anchor>
      <arglist>(uint64_t time, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;lootEntityIDs, const std::set&lt; int32_t &gt; &amp;worldCIDs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendActivateSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab69a1c46ee6244f1f3ff7f502b2f108b</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendCompleteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a32a7b8829f081e25527627697083eaa3</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, uint8_t mode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendExecuteSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a544e00d16433a47f4f41e7ec6d85c0a2</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendExecuteSkillInstant</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a4e15105931d67dd86f55aac27fd3f18a</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, uint8_t errorCode)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendFailure</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab906667d825106b390484354b722e687</anchor>
      <arglist>(std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; ChannelClientConnection &gt; client, uint8_t errorCode=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetNRA</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aa7cb4e2b34bb47fbe2b601b505383f73</anchor>
      <arglist>(SkillTargetResult &amp;target, ProcessingSkill &amp;skill, bool reduceShields=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SetSkillCompleteState</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a9843a9ff501a5e0daf6c0a78b2e0af2c</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill, bool executed)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Spawn</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a20eac6f7189bb65a1006269ec36b2e89</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpawnZone</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a966b3bd29bdfa9290fb66b0e262f2791</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SpecialSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>ab9fe7a94df5c578e40d84f668c59e921</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>StoreDemon</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>abeec42721000b8158aa331fe80196cda</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SummonDemon</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aef8a9a1f5fa80e589762fbe19905c93f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ToggleSwitchSkill</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a27adf997165cc5759acbcffb42b9b816</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; client, std::shared_ptr&lt; objects::ActivatedAbility &gt; activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Traesto</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>acc3034054f5b2ebeebbd886e17e28bc3</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdatePvPStats</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aae01f3e035cb5112a41b145a73f7a6d1</anchor>
      <arglist>(const std::shared_ptr&lt; channel::ProcessingSkill &gt; &amp;pSkill)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>XPUp</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a1efa207e9103db0f92d12e1f57349539</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;activated, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;ctx, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>aae9059fe624bfb436d4a1e48ba427c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::function&lt; bool(SkillManager &amp;, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;)&gt; &gt;</type>
      <name>mSkillEffectFunctions</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a51f61e6739d48200d730632c102a20d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint16_t, std::function&lt; bool(SkillManager &amp;, const std::shared_ptr&lt; objects::ActivatedAbility &gt; &amp;, const std::shared_ptr&lt; SkillExecutionContext &gt; &amp;, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;)&gt; &gt;</type>
      <name>mSkillFunctions</name>
      <anchorfile>classchannel_1_1SkillManager.html</anchorfile>
      <anchor>a296dd91eaf79437f1e957292833ab3ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::SkillTargetResult</name>
    <filename>classchannel_1_1SkillTargetResult.html</filename>
    <member kind="variable">
      <type>StatusEffectChanges</type>
      <name>AddedStatuses</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a90bf31d13c3a9761b5f461aadd41c9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>AilmentDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ad82a5567184687ad02dda519fb77ed3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>AilmentDamageTime</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a3b47197c421c9ca2c1050552b8778d58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>AilmentDamageType</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>acc60468c59e60c5277a31b5582465abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AutoProtect</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a1171eae77018a68978972191e318539d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::CalculatedEntityState &gt;</type>
      <name>CalcState</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a5cf23453870be39eb2874cc897a54ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>CancelledStatuses</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac74a3c1ea2dc8455ffbc296075713330</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CanHitstun</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aad1366d84845aec866058e95e47e87bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>CanKnockback</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>af2e68d797cfedb089d62cf10e451ee9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ClenchOverflow</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a4ab147beaf4e6d98561a5d3a4fc488cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>Damage1</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a9c5073d360da3c19c9ac7a7be229dcaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Damage1Type</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a4db2f521a0ed3ec0bcdb90e19089fe06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>Damage2</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aeab6da0d642505414944311d57a41042</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>Damage2Type</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ae158fbf36dce18df9034429ba5f61d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>EffectCancellations</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>af7f2fb0c933f16070b15010b19914652</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>EntityState</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a095c60f0206ac78b9fd8abd1e0f79c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Flags1</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>abc8e6a942c03d3c376eb5c212882fec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>Flags2</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ad32cda1161d54000f9fcae046f2f7f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint16_t</type>
      <name>GuardModifier</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>af8443bca5941379b78dfe7aa2bfd8572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HitAbsorb</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac0f10199c261f7c71b62cc09243e97b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>HitAvoided</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a77f0f0de64872a1193357ee921c12a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>HitNull</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a4044d4e1c6e1929a5a5f22a1def5ff74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>HitReflect</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a75ad57cfe5c10de2e225163126267beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IndirectTarget</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a75eff9c5addb0f076d0a54c06fc7c796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>NRAAffinity</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ab50dc696eb103a0b86eaf78435e7e722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PrimaryTarget</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>ac019e32b49faf520e0328298c3f9d118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>PursuitAffinity</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>aef914e70365969b43b910500769c5e75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>PursuitDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a67e00002bba8bcc09df55025626dc8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::set&lt; TokuseiConditionType &gt;</type>
      <name>RecalcTriggers</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a26f3e676abe5d245aa399ebdf6300874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>TalkDone</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a936fb64aaaa55ec7e1993554afbed6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint8_t</type>
      <name>TalkFlags</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a780759089ecc3aba2af1e827b76499e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32_t</type>
      <name>TechnicalDamage</name>
      <anchorfile>classchannel_1_1SkillTargetResult.html</anchorfile>
      <anchor>a239242f5043ef3489ac7306bd8d6d21d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::StatusEffectChange</name>
    <filename>classchannel_1_1StatusEffectChange.html</filename>
    <member kind="function">
      <type></type>
      <name>StatusEffectChange</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>a11e3a107c7785060497d392706222b36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusEffectChange</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>a32fcd6949cfd95113637dd5586d3d46c</anchor>
      <arglist>(uint32_t type, int8_t stack, bool isReplace)</arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Duration</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>af8da72c1b5427c539b7f77e5b6510245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsConstant</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>a53d4d61349815100e0928d310cab4d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsReplace</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>ae5fa91c7306083bc7dcb3adb0e9ae283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Stack</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>a9b2c9a748db8f99924e439dd544e59cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>Type</name>
      <anchorfile>classchannel_1_1StatusEffectChange.html</anchorfile>
      <anchor>afc94d840531d67fb5927d59df2cb1e20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::TokuseiManager</name>
    <filename>classchannel_1_1TokuseiManager.html</filename>
    <member kind="function">
      <type></type>
      <name>TokuseiManager</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ad3722fead8ace88f16896e03f2f6b915</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TokuseiManager</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>acbbf720e9fe5abf534bd88309124a6fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AspectValueExists</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a5c864bc5a6a76c888752067474f423ad</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, double value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeadTokuseiDisabled</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a77b35b4748a48a311af62b769e09dfc7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EvaluateTokuseiCondition</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a23327a0901395a358f76e5a64494e162</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, int32_t tokuseiID, const std::shared_ptr&lt; objects::TokuseiCondition &gt; &amp;condition)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EvaluateTokuseiConditions</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a3a949555a4ff11e1f4793eee3e99f6d9</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, const std::shared_ptr&lt; objects::Tokusei &gt; &amp;tokusei)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetAllTokuseiEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>abc66b5512c37386c2866d4094b0557de</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, double &gt;</type>
      <name>GetAspectMap</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aab01f59a69050eac43084892c145f2d6</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, double &gt;</type>
      <name>GetAspectMap</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a4bd95ef0a0b46f91286fc3cc42eb8e23</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::set&lt; int32_t &gt; validKeys, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetAspectSum</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a7cd7b53af3902f6097897aaafe0c50b7</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; double &gt;</type>
      <name>GetAspectValueList</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a9b1983db37fd17107b6213c2c9d871c3</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, TokuseiAspectType type, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::Tokusei &gt; &gt;</type>
      <name>GetDirectTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aeb687c04024c47e372bc56b400170d4d</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Initialize</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aada70d54d0772cafd8dba3ac12533109</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RecalcTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a47e9d84fce009343c6e47bfa1e99860a</anchor>
      <arglist>(WorldClock &amp;clock)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1c9e173f4d851b9a84f821a8e763429e</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, std::set&lt; TokuseiConditionType &gt; changes)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ad05afabd3725bc6e928cd8a61619dbbb</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool recalcStats=false, std::set&lt; int32_t &gt; ignoreStatRecalc={})</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>Recalculate</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1f10d12a2a677d9f4d2b7dc205b23615</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, bool recalcStats=false, std::set&lt; int32_t &gt; ignoreStatRecalc={})</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>RecalculateParty</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ab6630e7bf27fc2afac5a02eebb48c119</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Party &gt; &amp;party)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveTrackingEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a1ce689dbeee9a2c105646c8518330cb3</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aa345290d80d883e3886b3c444755a052</anchor>
      <arglist>(int32_t entityID, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateDiasporaMinibossCount</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ac96bfa8bf58292c0d5d467d62625058a</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateMovementDecay</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a660e912934050a0b67d8db0d6057c2ba</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, float distance)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>CalculateAttributeValue</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ae06ae0d1257bd28fa5eb66009728095c</anchor>
      <arglist>(ActiveEntityState *eState, int32_t value, int32_t base, const std::shared_ptr&lt; objects::TokuseiAttributes &gt; &amp;attributes, std::shared_ptr&lt; objects::CalculatedEntityState &gt; calcState=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>BuildWorldClockTime</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a31bebcd0724b5593924e14d25475d8aa</anchor>
      <arglist>(std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, WorldClockTime &amp;time)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a9f0b4a86960239d85513197325cdd928</anchor>
      <arglist>(int32_t value, std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, bool numericCompare) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>Compare</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a17f5945180b270844f428aef257b840b</anchor>
      <arglist>(int32_t value1, int32_t value2, std::shared_ptr&lt; objects::TokuseiCondition &gt; condition, bool numericCompare) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>GatherTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>aee4d1052bd7d26819cd12ea4af47b269</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Tokusei &gt; &amp;tokusei)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RecalcCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a3eeb554a52231f322546e9f1cc1391cc</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendCostAdjustments</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>ac439ed985d3b2f7dd56c6cf747f03db5</anchor>
      <arglist>(int32_t entityID, std::list&lt; std::shared_ptr&lt; objects::ClientCostAdjustment &gt;&gt; &amp;adjustments, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mCostAdjustmentTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a2e0a38f7b6fd8df5ea83a5fdbc705a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mMoveDecayTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a3075779b168a0bb0d050405f9c85dd7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a62aae6e0d3befb067c6535fe8288f645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mStatusEffectTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>add39ba4ee9398e83852a2c0086e17846</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, bool &gt;</type>
      <name>mTimedTokusei</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>acd635fd66a363244f22469217774ead9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mTimedTokuseiEntities</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a77c4141f6f5163f7e1da9a86c2588544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mTimeLock</name>
      <anchorfile>classchannel_1_1TokuseiManager.html</anchorfile>
      <anchor>a750c20ee1219bb6ee22c1549f1bddc9c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::WorldClock</name>
    <filename>classchannel_1_1WorldClock.html</filename>
    <base>channel::WorldClockTime</base>
    <member kind="function">
      <type></type>
      <name>WorldClock</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>ae10de7f4e495fc28210f848696ecf749</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>Hash</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a42835f4fc7a5488daf046895addc1138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsNight</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a45898dbc426602f25e0e836a6e749ecc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>IsSet</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>ac52fa00fa8a11f0514e6780db0bf34ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>abee9d695230dd03bde003387be99df3f</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>aa8dc34a6beea8454d0ebe8f2a70fd8fe</anchor>
      <arglist>(const WorldClockTime &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>libcomp::String</type>
      <name>ToString</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>ac1d62954c8cc23a9b6b4d8d79e0aaacc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>CycleOffset</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a97d14b9b985ea297a318e057e8e80ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Day</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a7fc5c2649361e753d28b93533c7cea13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>GameOffset</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a7dd301bea30a8f2d41700e6d1fe05aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Hour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a4b262239839473a30cebc3506e2c85f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Min</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a1563faade9b26a5ccf9e6c4cb8cccfe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>Month</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a4ea9b33666c5adbf368793f0f48c27d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>MoonPhase</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a9d85889c98e94902dbc676b10ed5262e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemHour</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a85ead1632f8c52c929ceafc6638c8626</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemMin</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a34715741fc3c2e93ecd3b61696a0b7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>SystemSec</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>ad4ef65238a26a773773b70fb1df61a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>SystemTime</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a518fb934fb18af8bd9ad9e3485142399</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8_t</type>
      <name>WeekDay</name>
      <anchorfile>classchannel_1_1WorldClock.html</anchorfile>
      <anchor>a16761d1def70440ce76c40d83e499a2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::WorldClockTime</name>
    <filename>classchannel_1_1WorldClockTime.html</filename>
    <member kind="function">
      <type></type>
      <name>WorldClockTime</name>
      <anchorfile>classchannel_1_1WorldClockTime.html</anchorfile>
      <anchor>a8a6a9bd8c0915fee0401f45da454366e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::Zone</name>
    <filename>classchannel_1_1Zone.html</filename>
    <member kind="function">
      <type></type>
      <name>Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a67e31e0bbb7036f61cfa15e6dcb511ba</anchor>
      <arglist>(uint32_t id, const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Zone</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a562607cb5c4120a9316c5e967a5c610b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddAlly</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae20fb51064252cdd0593f0986835f743</anchor>
      <arglist>(const std::shared_ptr&lt; AllyState &gt; &amp;ally, uint64_t staggerTime=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBase</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a1eb262090ce2e701b6198342fd29bce8</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStateObject &gt; &amp;base)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddBazaar</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a387b8f0ba50532d1fa8977effe9f480d</anchor>
      <arglist>(const std::shared_ptr&lt; BazaarState &gt; &amp;bazaar)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddConnection</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae4ee64042971cdc26b1c48e81656d85c</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddCultureMachine</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0646df32cc2d2d08b4d0564706352883</anchor>
      <arglist>(const std::shared_ptr&lt; CultureMachineState &gt; &amp;machine)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddEnemy</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a822505de3e5dbc309793d07723f553a9</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;enemy, uint64_t staggerTime=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddLootBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9ed0d764e7473c559ecb8705ea659716</anchor>
      <arglist>(const std::shared_ptr&lt; LootBoxState &gt; &amp;box, uint32_t bossGroupID=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddNPC</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>affd58a145aaad1a072bd63f1e47821fb</anchor>
      <arglist>(const std::shared_ptr&lt; NPCState &gt; &amp;npc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddObject</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a338b2ee7a60040af7c6b3943ce56d035</anchor>
      <arglist>(const std::shared_ptr&lt; ServerObjectState &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AddPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a13f870b0f8ec68cfa54aa07384154d57</anchor>
      <arglist>(const std::shared_ptr&lt; PlasmaState &gt; &amp;plasma)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ClaimBossBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0ecab3536d75752836da91dacddbeecf</anchor>
      <arglist>(int32_t id, int32_t looterID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Cleanup</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>acff437d00dcc3c12d220abc645848a45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a1561cd303f1bebbf4c726d50caeb6574</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface, std::shared_ptr&lt; ZoneShape &gt; &amp;shape) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>af9a19350490c177181fecee8a9f92088</anchor>
      <arglist>(const Line &amp;path, Point &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateEncounter</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3308838ebc1cd20f20e0bc646c84aaf5</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, bool staggerSpawn, const std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;defeatActions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DiasporaMiniBossUpdated</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aebf5759b0a2b02e1840db6c1bd5e6abe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnableDisableSpawnGroup</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a10ea5cd9776ad2f61f268cbe9285ba86</anchor>
      <arglist>(uint32_t spawnGroupID, bool enable)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EncounterDefeated</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aab1a2e9ab3dea22452df8c712e0b4aa6</anchor>
      <arglist>(uint32_t encounterID, std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;defeatActions)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetActiveEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4cc0979c7dfe04f076a12f409636faee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetActiveEntitiesInRadius</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a149292ee149459b52ca1476a767afbee</anchor>
      <arglist>(float x, float y, double radius, bool useHitbox=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>GetActiveEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a75d09687abaa3b1b2707944d204cba12</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EntityStateObject &gt;</type>
      <name>GetActor</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8fa3b4fd2ab479c5aa722dbecdd6e111</anchor>
      <arglist>(int32_t actorID)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; AllyState &gt; &gt;</type>
      <name>GetAllies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a530ee8a08baf6b8d0a694a0f7dc40ffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; AllyState &gt;</type>
      <name>GetAlly</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6328a36b9b347e83cf3e681ae2abb9e2</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int8_t &gt;</type>
      <name>GetBaseRestrictedActionTypes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a88108a1a646df4472881f2e6bbc06b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; BazaarState &gt;</type>
      <name>GetBazaar</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>adae8d138de6e1fed5cee38bda6b81364</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; BazaarState &gt; &gt;</type>
      <name>GetBazaars</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a54add399336152e5d04b73bcb5da2110</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt;</type>
      <name>GetBosses</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aef7db11b26545617fad1aa421868ed66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetConnectionList</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7af07c8f3afbcb08562caac822cf682d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetConnections</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4f173f83f9ba6b899ac33bba0bc72008</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; CultureMachineState &gt;</type>
      <name>GetCultureMachine</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae4fa580ee2f1adc9bd424db2c688fcb8</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; CultureMachineState &gt; &gt;</type>
      <name>GetCultureMachines</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a84085a3429189854fc668c1e72b04491</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetDefinitionID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a903c7fdf831913adef790258d01aab0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; int32_t &gt;</type>
      <name>GetDespawnEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a38711991b5edbfd603c26abc81666d6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; DiasporaBaseState &gt;</type>
      <name>GetDiasporaBase</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac152d37c6ad1b9dc7a5f6530c2e1fdf1</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; DiasporaBaseState &gt; &gt;</type>
      <name>GetDiasporaBases</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8f16c5d29283daf5af97dd6e7e13a74a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; uint8_t, uint8_t &gt;</type>
      <name>GetDiasporaMiniBossCount</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9f5e264752d41e55da2053acc566b413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetDisabledSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab9a33289e8f6ce9e3d34a7e8814f5030</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; DynamicMap &gt;</type>
      <name>GetDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aafa8e0bc529b4e7e60f48cbe1cdb9cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetDynamicMapID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a96057bbb9cc306ccbd0bacc96d39080a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt;</type>
      <name>GetEnemies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a491cbe8d78b1dc574f8df09c9048d042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetEnemiesAndAllies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab1dd9a2f6511ef90a6309259618d3531</anchor>
      <arglist>(bool includeStaggered=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; EnemyState &gt;</type>
      <name>GetEnemy</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac22f5472abca19975312721b34020a20</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::EntityStateObject &gt;</type>
      <name>GetEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a45c43ad21244ce3de52fa70fa46a36d1</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlagState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3959b03ea33b61907044f67483514400</anchor>
      <arglist>(int32_t key, int32_t &amp;value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>GetFlagStates</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aed1a3e18e44e917ec9edf67a3044beda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetFlagStateValue</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6acce8ca02a77b9fc97f056e03c6e7b0</anchor>
      <arglist>(int32_t key, int32_t nullDefault, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; ZoneGeometry &gt;</type>
      <name>GetGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>afabd959e992dbd7c440ef6a999100a51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>GetInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aca80c38bbbd5905fc9277b05039326be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetInstanceID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a38275d26eb2bd794b4ad12897c16d5a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>InstanceType_t</type>
      <name>GetInstanceType</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac9eff6cc3f20e9cf3038452843904885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; LootBoxState &gt;</type>
      <name>GetLootBox</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>af229608cdf134a08bc66c276398b8ab6</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; LootBoxState &gt; &gt;</type>
      <name>GetLootBoxes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a24c4f793c9afe25687b79cda7fd35a56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetNextRentalExpiration</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a12fd8d737373e671ca96b327feff0e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; NPCState &gt;</type>
      <name>GetNPC</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>af2c48393074db43ac37a543ac918239c</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; NPCState &gt; &gt;</type>
      <name>GetNPCs</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a58ce0a2dfa6497753be5ca590d9b3ceb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PlasmaState &gt;</type>
      <name>GetPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2ec1cb1e12bb67c0ea71c13764560633</anchor>
      <arglist>(uint32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaState &gt; &gt;</type>
      <name>GetPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a999614628a8d5f8a5112b1dfbaff95b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; PvPBaseState &gt;</type>
      <name>GetPvPBase</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a89ee7181d2a1e943bb2a161ee43258a5</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; PvPBaseState &gt; &gt;</type>
      <name>GetPvPBases</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a34ca86fa87ecfe6dfc1b83bc831ee992</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>GetRespawnLocations</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ad1e63e79c3dad939d3c34b638f03165c</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ServerObjectState &gt;</type>
      <name>GetServerObject</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a33cc190f3b076242409f7b9540723d26</anchor>
      <arglist>(int32_t id)</arglist>
    </member>
    <member kind="function">
      <type>const std::list&lt; std::shared_ptr&lt; ServerObjectState &gt; &gt;</type>
      <name>GetServerObjects</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2d409e441c81daa5188ae8af5fe112eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::UBMatch &gt;</type>
      <name>GetUBMatch</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>abec5e4491e664319e7ba160550a09c2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetUpdatedStatusEffectEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9f9e5a20cb36a2ac85ceb0874de97c6c</anchor>
      <arglist>(uint32_t now)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>GetXPMultiplier</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a72ff36aec622c2c1a4105574189bff48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GroupHasSpawned</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab0062a80b0147883fb9c66c4215d90af</anchor>
      <arglist>(uint32_t groupID, bool isLocation, bool aliveOnly)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasRespawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>acf1980cdc64477e534ef3b563fabe5be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasStaggeredSpawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a636b69725294543f959dd5cdfd145054</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>uint16_t</type>
      <name>IncreasePvPBaseBonus</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6ef616353c37d282b938a4594eaaf29d</anchor>
      <arglist>(int32_t baseID, uint64_t occupyStartTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MarkDespawn</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3ff7f61c00ae7f72018fd207e7e7b559</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MinionSpawned</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3432590b4defc8d12f1ba9b63c5e1ded</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint32_t slgID=0)</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>OccupyPvPBase</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8809215356adafff1f8afc4bf6caa41c</anchor>
      <arglist>(int32_t baseID, int32_t occupierID, bool complete, uint64_t occupyStartTime=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveConnection</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a97e5f6f5f27b8b9e4bf34a887ec371da</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a68e582d1b49e7aee6be5698bced472d1</anchor>
      <arglist>(int32_t entityID, uint32_t spawnDelay=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7c473e275dc997781a1e2e5dc1067e75</anchor>
      <arglist>(const std::shared_ptr&lt; DynamicMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlagState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a66b70adee3403c6dab06b4d0f2cf8603</anchor>
      <arglist>(int32_t key, int32_t value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9566ac066a883ffe78e412aacad8e671</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneGeometry &gt; &amp;geometry)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a06f1e8e0c9aab06c4bc900d0bf712530</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>SetNextRentalExpiration</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a4769f9cd1c69cf6f9e90cfbf76b4733f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetNextStatusEffectTime</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aef515d1457133e3ed6a5cf1b4805694f</anchor>
      <arglist>(uint32_t time, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SpawnedAtSpot</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a838f88120ab6414461c67f7f1b5e01c3</anchor>
      <arglist>(uint32_t spotID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>StartStopCombat</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ad54739828230d3938dd13183925055c6</anchor>
      <arglist>(int32_t entityID, uint64_t timeout, bool checkBefore=false)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; size_t, std::shared_ptr&lt; objects::Loot &gt; &gt;</type>
      <name>TakeLoot</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a8f339d80b7ab00aae34c057b270d4687</anchor>
      <arglist>(std::shared_ptr&lt; objects::LootBox &gt; lBox, std::set&lt; int8_t &gt; slots, size_t freeSlots, std::unordered_map&lt; uint32_t, uint16_t &gt; stacksFree={})</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>UpdateStaggeredSpawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae558f97db3f91b518510dfe6a8ee08a9</anchor>
      <arglist>(uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateTimedSpawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3af4db82267c250592bd3353538ed255</anchor>
      <arglist>(const WorldClock &amp;clock, bool initializing=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>TimeRestrictionActive</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a578fc3c24afdbcab2f9845e015f9fbf9</anchor>
      <arglist>(const WorldClock &amp;clock, const std::shared_ptr&lt; objects::SpawnRestriction &gt; &amp;restriction)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddSpawnedEntity</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9e3e3af9cd33ff37dbaf6b2d6d02164b</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;state, uint32_t spotID, uint32_t sgID, uint32_t slgID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>DisableSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aed8b28d30f9954237455f4ed6174a111</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;spawnGroupIDs, bool initializing, bool deactivate)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>EnableSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa5dd269b07fb0b1769d863c478b6b541</anchor>
      <arglist>(const std::set&lt; uint32_t &gt; &amp;spawnGroupIDs, bool initializing, bool activate)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RegisterEntityState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a30a60bbca5d41413a38963e3e96ebcb1</anchor>
      <arglist>(const std::shared_ptr&lt; objects::EntityStateObject &gt; &amp;state)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UnregisterEntityState</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a168d88c60784ec83753459e9ca8d236e</anchor>
      <arglist>(int32_t entityID)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>mActiveEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a993730c9105eff93dc327aa1051704e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::EntityStateObject &gt; &gt;</type>
      <name>mActors</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a55e83305b4ffb2e56ad5b530f000548f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::EntityStateObject &gt; &gt;</type>
      <name>mAllEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab98ca58e2daa39fdf8b6f2f3ed1ba544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; AllyState &gt; &gt;</type>
      <name>mAllies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aab8eabea4fa9fc092b42d5042fc23f7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::EntityStateObject &gt; &gt;</type>
      <name>mBases</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a77c2188babc288984efc26ab1e4faed0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; BazaarState &gt; &gt;</type>
      <name>mBazaars</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa5f07b1bf482815a50209b01418a0108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mBossBoxGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3f0493ab46a4255592836e648bfa02e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mBossBoxOwners</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ab926f654714e3de19a97e94cd8e8602c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mBossIDs</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a93ac44a511ccf810dbd9952d1a616ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>mConnections</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a9220a9b878b2b9cc94b32db699fb55ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; CultureMachineState &gt; &gt;</type>
      <name>mCultureMachines</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a36a92e158fcac2b992570ba08ddc0f50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mDeactivatedSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a87284f146d39212c78c82539128b396f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mDiasporaMiniBossUpdated</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a25129c17b349c46ce5de6ad4588bdb70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mDisabledSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aa975e7fbdf57d78e45d157e82e5e1a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mDisabledSpawnLocationGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ae0d0aa66e1cc8cc5b3fe84980a86b088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; DynamicMap &gt;</type>
      <name>mDynamicMap</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5b499b04a5153c20aa5d1d782a0ed853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; objects::Action &gt; &gt; &gt;</type>
      <name>mEncounterDefeatActions</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a7802a997ce0647437a1d2f4ca61fcac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt; &gt;</type>
      <name>mEncounters</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2361a9b3105c74de544eb2142c41f89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; EnemyState &gt; &gt;</type>
      <name>mEnemies</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a127e3f558470fb8577b1d4e3ec3950e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>mFlagStates</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0a432864fbcfa2e0c498890e1f67ace5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ZoneGeometry &gt;</type>
      <name>mGeometry</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0dccf72549a8bedf9205e0d56eec7c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mHasRespawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6a433e1f543fd99163618b293595a6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a3c96786c0e7f6dcae40ae58e720f14e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; LootBoxState &gt; &gt;</type>
      <name>mLootBoxes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a54df90b3ecf4bfb474eb79d054b0c4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextEncounterID</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0e5053885413a7daf5ab3859f8c4c26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint32_t, std::set&lt; int32_t &gt; &gt;</type>
      <name>mNextEntityStatusTimes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5e7bea5448f355d0e4763b0aab3d0fab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextRentalExpiration</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a527e2434096849e013fbb8d27d86d891</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; NPCState &gt; &gt;</type>
      <name>mNPCs</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a318edb32d821b90bb898bb99428b1e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; ServerObjectState &gt; &gt;</type>
      <name>mObjects</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a2d872689ae8097c4e4f32642bd081811</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; int32_t &gt;</type>
      <name>mPendingDespawnEntities</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a5543472dc3b9a791a0fdbcacd9fe3b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; PlasmaState &gt; &gt;</type>
      <name>mPlasma</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a0cec7e9c4382bc4ed80e25e32c4d92e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint64_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mRespawnTimes</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aed44f72d3fef192f860d9bc23a0e98a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt; &gt;</type>
      <name>mSpawnGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a1c48567544123176b56c638fa6f0ff81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt; &gt;</type>
      <name>mSpawnLocationGroups</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>acef6afe00855c61cbdb2adbafb1ad2ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mSpotsSpawned</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>ac38d643150dc27377d53a5f97618edfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; uint64_t, std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt; &gt;</type>
      <name>mStaggeredSpawns</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>a6b0416bd5290e289e3ba1bca3c8afcd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>mZoneInstance</name>
      <anchorfile>classchannel_1_1Zone.html</anchorfile>
      <anchor>aca4a5627458b7f22f2c8953fa2bf370f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneGeometry</name>
    <filename>classchannel_1_1ZoneGeometry.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a04967a970a5cb0d1394aacc835d67f5d</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface, std::shared_ptr&lt; ZoneShape &gt; &amp;shape, const std::set&lt; uint32_t &gt; disabledBarriers={}) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a7cac6a335c4a9dd68ac1faa6d604b08b</anchor>
      <arglist>(const Line &amp;path, Point &amp;point) const </arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; objects::QmpElement &gt; &gt;</type>
      <name>Elements</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a904f6ae9e0e1cd711de258504a498e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; objects::QmpNavPoint &gt; &gt;</type>
      <name>NavPoints</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a83d686be7e83f67ca712ed1b4cb3aeea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>libcomp::String</type>
      <name>QmpFilename</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>a0a217ce0d4813a29e927fb93707f4905</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; std::shared_ptr&lt; ZoneQmpShape &gt; &gt;</type>
      <name>Shapes</name>
      <anchorfile>classchannel_1_1ZoneGeometry.html</anchorfile>
      <anchor>af431076221cfe66705f201be44240e97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneGeometryLoader</name>
    <filename>classchannel_1_1ZoneGeometryLoader.html</filename>
    <member kind="function">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ZoneGeometry &gt; &gt;</type>
      <name>LoadQMP</name>
      <anchorfile>classchannel_1_1ZoneGeometryLoader.html</anchorfile>
      <anchor>a9377e0c4fad2d2d5478aea0b67a7541b</anchor>
      <arglist>(std::unordered_map&lt; uint32_t, std::set&lt; uint32_t &gt;&gt; localZoneIDs, const std::shared_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>LoadZoneQMP</name>
      <anchorfile>classchannel_1_1ZoneGeometryLoader.html</anchorfile>
      <anchor>a0803f647b164d789d6dfc83e30a4f346</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mDataLock</name>
      <anchorfile>classchannel_1_1ZoneGeometryLoader.html</anchorfile>
      <anchor>ab0bde9553eff5acbf000d071706084cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ZoneGeometry &gt; &gt;</type>
      <name>mZoneGeometry</name>
      <anchorfile>classchannel_1_1ZoneGeometryLoader.html</anchorfile>
      <anchor>a345821be015dac78b1ef9d5ff6b3a5f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::pair&lt; uint32_t, std::set&lt; uint32_t &gt; &gt; &gt;</type>
      <name>mZonePairs</name>
      <anchorfile>classchannel_1_1ZoneGeometryLoader.html</anchorfile>
      <anchor>a2aabddd85ecee7ad43f2702a86b1acc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneInstance</name>
    <filename>classchannel_1_1ZoneInstance.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a02ce5374aff7f7b26fa1400385088be8</anchor>
      <arglist>(uint32_t id, const std::shared_ptr&lt; objects::ServerZoneInstance &gt; &amp;definition, const std::shared_ptr&lt; objects::InstanceAccess &gt; &amp;access)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ZoneInstance</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a796962f892bd1758f3026244b940503f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddZone</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a22418116fe9dcbbea483b3aa046bbce0</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetConnections</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a013c2530135932c17492b0baabea5a77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>uint32_t</type>
      <name>GetDefinitionID</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a6df6d99ca3d506cd10d1a62d766cfc37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::DestinyBox &gt;</type>
      <name>GetDestinyBox</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a8c0ccd50d5c3d456d800040eb4a227b4</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetFlagState</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a27c5fd1cc7d51e931d168014e8727ff6</anchor>
      <arglist>(int32_t key, int32_t &amp;value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>GetFlagStates</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a3bae784440e367cd8b3e2e4dc9e4ac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>GetFlagStateValue</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a6a5a3d86828cc6a3ace130dd47b7c8fd</anchor>
      <arglist>(int32_t key, int32_t nullDefault, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ab683f69dbeb6874f3d1318a626cec727</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ad90ce663bc31ec63c050dd59e3b21110</anchor>
      <arglist>(uint32_t uniqueID)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; Zone &gt; &gt;</type>
      <name>GetZones</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a45bf4651984c5370f435014f138f2750</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RefreshPlayerState</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>aa3286d4703038dc001be0c986b325ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetFlagState</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a790b39876e5eeb4aac8bd4dd0e803ef0</anchor>
      <arglist>(int32_t key, int32_t value, int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::unordered_map&lt; uint8_t, std::shared_ptr&lt; objects::Loot &gt; &gt;</type>
      <name>UpdateDestinyBox</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>ae6481480abc2d7f0aacfb8f6b1458180</anchor>
      <arglist>(int32_t worldCID, uint8_t &amp;newNext, const std::list&lt; std::shared_ptr&lt; objects::Loot &gt;&gt; &amp;add, const std::set&lt; uint8_t &gt; &amp;remove)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::unordered_map&lt; int32_t, int32_t &gt; &gt;</type>
      <name>mFlagStates</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a77a1e582aa9571e293a5d1ec885961a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a66c7ac59ff3896f911a99d7954add8f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, std::shared_ptr&lt; Zone &gt; &gt; &gt;</type>
      <name>mZones</name>
      <anchorfile>classchannel_1_1ZoneInstance.html</anchorfile>
      <anchor>a49a8ee649b35eb4bdf0edec3e73a21eb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneManager</name>
    <filename>classchannel_1_1ZoneManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneManager</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a8bc372a1fb9ff2d6c2e9b876a323739e</anchor>
      <arglist>(const std::weak_ptr&lt; ChannelServer &gt; &amp;server)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ZoneManager</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa52b6607911c377c44deccd96873e27a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddEnemiesToZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a83a00d55c2566109d34c4021f92cf1e6</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;eStates, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool staggerSpawn, bool asEncounter, const std::list&lt; std::shared_ptr&lt; objects::Action &gt;&gt; &amp;defeatActions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>AddEnemiesToZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9dd1a05e738108871167432345dbc826</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; eStates, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool staggerSpawn, bool asEncounter, const libcomp::String &amp;defeatEventID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aac5bb93f339e5ebc83ba7b4a5488bdd3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, libcomp::Packet &amp;p, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BroadcastPacket</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae0fb0690690700dd89a4866687958100</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, libcomp::Packet &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>CollisionAdjust</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>abf5ed28366af868482445c74777d3729</anchor>
      <arglist>(const Point &amp;src, const Point &amp;collidePoint)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CorrectClientPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a2d433654b7d477b3769c88bc1599c33a</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, Point &amp;dest)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>CorrectClientPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab2444e7d39257e85f7aaeac834ef3cbd</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, Point &amp;src, Point &amp;dest, ServerTime &amp;startTime, ServerTime &amp;stopTime, bool isMove=false)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>CreateAlly</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a482e6a7fd0b197d5cdb98a9b09e20acd</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, uint32_t spotID, float x, float y, float rot)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>CreateEnemy</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad89090fb01771c2e00c2270a2738172f</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, uint32_t spawnID, uint32_t spotID, float x, float y, float rot)</arglist>
    </member>
    <member kind="function">
      <type>uint8_t</type>
      <name>CreateInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a853757407d74627760cf891ea3580caf</anchor>
      <arglist>(const std::shared_ptr&lt; objects::InstanceAccess &gt; &amp;access)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>EndInstanceTimer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a2a2b79f54919ed6e9e2f869053d2055f</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool isSuccess, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a67ea67c20d71897bc1cb284bbe109ae2</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>EnterZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a41a916dc39d907f42f041c9938d541e3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t zoneID, uint32_t dynamicMapID, float xCoord, float yCoord, float rotation, bool forceLeave=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a92136cb5145ddc9c4faad51693596c94</anchor>
      <arglist>(uint32_t instanceID, uint64_t timeOut)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ExpireRentals</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a38404ef8fdb966bead30abf7827946bf</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>ExtendInstanceTimer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4eebccbb5f62eb7496a02d99379d42a7</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, uint32_t seconds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FailPlasma</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4bf5aa67c16bad4ac56f5b485f419a25</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t plasmaID, int8_t pointID=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>FixCurrentPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa8b8905bb7c1fff877395abbaef0a154</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, uint64_t fixUntil, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetCurrentZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af3e04258b45d492711b4b1ff0fb39648</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetCurrentZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac7644f2cf627f046ef91a07133177f85</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetExistingZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae25c254d6518e4441265a125cdef9d51</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, uint32_t instanceID=0)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetGlobalZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4df5582eef7ff913157351418d64d58f</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; ZoneInstance &gt;</type>
      <name>GetInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a40de7a69420ffbc5a89d58e6583a421a</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; objects::InstanceAccess &gt;</type>
      <name>GetInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af75a1f60b5f6f0ebcfda4ace6e995f43</anchor>
      <arglist>(int32_t worldCID)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetInstanceStartingZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3eb7b87a327426c931f080bf0082449a</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetInstanceZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa90e346d8284cb248fc4be3950c045fa</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, uint32_t zoneID, uint32_t dynamicMapID)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetLinearPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a305871a10878d7ca248fbcbd7b4fe072</anchor>
      <arglist>(float sourceX, float sourceY, float targetX, float targetY, float distance, bool away, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetLoginZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a8519d250572e0045b99186f05a4db78e</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Character &gt; &amp;character, uint32_t &amp;zoneID, uint32_t &amp;dynamicMapID, int8_t &amp;channelID, float &amp;x, float &amp;y, float &amp;rot)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetMatchStartPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>acb7bcb0d02e83d4a974ffa1f04d7556a</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone, float &amp;x, float &amp;y, float &amp;rot)</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetRandomPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1c29de58a3b63d4aeddcec16970d0bf2</anchor>
      <arglist>(float width, float height) const </arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>GetRandomSpotPoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9b0f026184567c073028753331c71576</anchor>
      <arglist>(const std::shared_ptr&lt; objects::MiSpotData &gt; &amp;spot, const std::shared_ptr&lt; objects::MiZoneData &gt; &amp;zoneData=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; Point &gt;</type>
      <name>GetShortestPath</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aeb696f5cb9d1c6f538d54b84ae1837f7</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const Point &amp;source, const Point &amp;dest, float maxDistance=0.f)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetSpotPosition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a77356fff224a2e0d17e90b74cf9f460e</anchor>
      <arglist>(uint32_t dynamicMapID, uint32_t spotID, float &amp;x, float &amp;y, float &amp;rot) const </arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt; &gt;</type>
      <name>GetZoneConnections</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac673cad31df42cb066a18f1d87ae29c3</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>std::list&lt; std::shared_ptr&lt; objects::ServerZoneTrigger &gt; &gt;</type>
      <name>GetZoneTriggers</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>abeb0f4936c9fbf0f48f340c91b582a9d</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, ZoneTrigger_t trigger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleDeathTimeOut</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae8373065844b26c9d5aa1b22a094d771</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint64_t deathTime)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HandleTimedActions</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1c26556785ad46f1aae553d3cac88e00</anchor>
      <arglist>(const WorldClock &amp;clock, const WorldClockTime &amp;lastTrigger)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HandleZoneTriggers</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4468f5c18e49360da7de4fcbbecb6593</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::shared_ptr&lt; objects::ServerZoneTrigger &gt;&gt; &amp;triggers, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;entity=nullptr, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>InstanceGlobalZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0df1956b975ffe166c3d96d69ea0d893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LeaveZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad0e4956fc643d193510b9b3c6ea1dcc6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool logOut, uint32_t newZoneID=0, uint32_t newDynamicMapID=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>LinearReposition</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>addbf4473788e41aeefafccc6b9707ac1</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float x, float y)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LoadGeometry</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae92666887b1a9257826e28c694be2499</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Point</type>
      <name>MoveRelative</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a84658bbab6dad5dd44a9a451d0ba27ba</anchor>
      <arglist>(const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float targetX, float targetY, float distance, bool away, uint64_t now, uint64_t endTime)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3d6e32f4e1dcb7122e0c5caf9166a5a9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, std::shared_ptr&lt; objects::InstanceAccess &gt; access=nullptr, bool diasporaEnter=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MoveToLobby</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a96737a83cff39c46ef506ac3bc85ef01</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>MultiZoneBossKilled</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aadabe858a9feda53f35b00415feaf9e3</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, ClientState *sourceState, const std::list&lt; uint32_t &gt; &amp;types)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopEntityForProduction</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a17cc0907f0e505167e6e474ccdede3d6</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t entityID, int32_t type, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopEntityForProduction</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4631f6a174840e6e7f315cb9c0cb00ed</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, int32_t entityID, int32_t type, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PopEntityForZoneProduction</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6dec24e97b4889a5638dd4945972aa52</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int32_t entityID, int32_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntities</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>abe49814e7e6d8d927453e1b6a2136301</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removalMode=0, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>RemoveEntitiesFromZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0c531ee6a48eaa5d4c9f60fe6d0416a0</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removalMode=0, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ScheduleEntityRemoval</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a2868c20c546e5e795923aa9ee11e017d</anchor>
      <arglist>(uint64_t time, const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; int32_t &gt; &amp;entityIDs, int32_t removeMode=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendBazaarMarketData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1a95df628687b36edbd47d1dbd06f89c</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; BazaarState &gt; &amp;bState, uint32_t marketID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendCultureMachineData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a9dbb218ab96b5010749c939bcdfa90d8</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; CultureMachineState &gt; &amp;cmState)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendDestinyBox</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a284e193c3a7e5a6f2e96e220bb7d3a28</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, bool eventMenu, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendInstanceTimer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af9c105fbe4f3a0348109cac9c39c724d</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr, bool queue=false, uint32_t extension=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendLootBoxData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a7b16a26dca420ee42f5ce8f0c49e6dd9</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; LootBoxState &gt; &amp;lState, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, bool sendToAll, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SendPopulateZoneData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1f84ab999769bd716eed3b10b8dd9249</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SendToRange</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a5f0a328ab444bd6a58d9b9f6566d28ad</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, libcomp::Packet &amp;p, bool includeSelf=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowDemonToZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a12a4c0335a19e418552361864687bd12</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowEntity</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a17a78ce61cca284f098cbd440db4c81e</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, int32_t entityID, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowEntity</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae8211f4499565bd46eb3630dfe3a7db2</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, int32_t entityID, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowEntityToZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aafcb28d5fbfb1cd5ca08cd005202590e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, int32_t entityID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowNPC</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a8ad23d753acc88f0b58a5d5517827174</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::shared_ptr&lt; NPCState &gt; &amp;npcState, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ShowObject</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a5b1b038128cf29d11479dabd9be48b3a</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::list&lt; std::shared_ptr&lt; ChannelClientConnection &gt;&gt; &amp;clients, const std::shared_ptr&lt; ServerObjectState &gt; &amp;objState, bool queue=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>SpawnEnemy</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aee095c4df9fc5a300d09db88b43fb83e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, float x, float y, float rot, const libcomp::String &amp;aiType=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartInstanceTimer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a98715ee9f872067543249d9c2809cd08</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StartZoneEvent</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a60ea92bfe7ef204ab2bed6b0b3ccc7ef</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const libcomp::String &amp;eventID)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>StopInstanceTimer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a687abbc34ffa17156e554235078be876</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, uint64_t stopTime=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SyncInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3dc3026a6c794fddbdb957c85df6969e</anchor>
      <arglist>(std::list&lt; std::shared_ptr&lt; objects::InstanceAccess &gt;&gt; updates, std::list&lt; std::shared_ptr&lt; objects::InstanceAccess &gt;&gt; removes)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>TriggerZoneActions</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a035aede0f05e2cb2f1bacaf3943bfcef</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; entities, ZoneTrigger_t trigger, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateActiveZoneStates</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac664556e891b23def2518979ad193802</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateDeathTimeOut</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a13806de880f69154d30b78c2c9791afa</anchor>
      <arglist>(ClientState *state, int32_t time, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateDestinyBox</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa023632170df8415ec60204eb78c7219</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance, int32_t worldCID, const std::list&lt; std::shared_ptr&lt; objects::Loot &gt;&gt; &amp;add, std::set&lt; uint8_t &gt; remove={})</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateGeometryElement</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac69ab4271c6d38388050e7a342d7ec00</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, std::shared_ptr&lt; objects::ServerObject &gt; elemObject)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdatePlasma</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad2cd3a5827c345b54f64ac3d3c592dda</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t now=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateSpawnGroups</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1ae4fd2162029910dc294520089cf60a</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool refreshAll, uint64_t now=0, std::shared_ptr&lt; objects::ActionSpawn &gt; actionSource=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateStaggeredSpawns</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>abac40e27b09e5912115613fe98380639</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint64_t now)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UpdateStatusEffectStates</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af37e8cc22ebb7e399aacbfbe0ac64065</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t now, const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateTrackedTeam</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a857537e538bb2e93ee08f02dfb191f51</anchor>
      <arglist>(const std::shared_ptr&lt; objects::Team &gt; &amp;team, const std::shared_ptr&lt; Zone &gt; &amp;zone=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UpdateTrackedZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a10dd42e949d78af5f7cb94e5b98e75e3</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; objects::Team &gt; &amp;team=nullptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Warp</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aecab75b9c5a7d8e352ceb7ec65f0ea89</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; ActiveEntityState &gt; &amp;eState, float xPos, float yPos, float rot)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt; &gt;</type>
      <name>GetEntitiesInFoV</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6f904169d4ea39eecd6c3c57bc907a31</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; ActiveEntityState &gt;&gt; &amp;entities, float x, float y, float rot, float maxAngle, bool useHitbox=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>GetPointToLineDistance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a15c7698b50f50d1140a0d56c1bab16c4</anchor>
      <arglist>(const Line &amp;line, const Point &amp;point)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>GetRandomRotation</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3db691d8b520ec95c40ec59bbe98c664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>PointInPolygon</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a00128fae1122b0838a9631f3794437e9</anchor>
      <arglist>(const Point &amp;p, const std::list&lt; Point &gt; vertices, float overlapRadius=0.f)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Point</type>
      <name>RotatePoint</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af069e50de205e0b1b0fe42c94bb5b885</anchor>
      <arglist>(const Point &amp;p, const Point &amp;origin, float radians)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddDiasporaBases</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af0466675006bd8b0c86d58c3553c681c</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>AddPvPBases</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a86f2dc6930d732f456811497da07b54b</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; objects::PvPInstanceVariant &gt; &amp;variant)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>CanEnterRestrictedZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af6cf9a740de979f8fd3760e8779b86fd</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; ActiveEntityState &gt;</type>
      <name>CreateEnemy</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aee3f72bc7f56c178f47a8d325505d1d2</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t demonID, const std::shared_ptr&lt; objects::Spawn &gt; &amp;spawn, float x, float y, float rot, bool asAlly=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>CreateZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a5d462d511920263c3fe2e65cae4dbcf8</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition, const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; uint32_t &gt;</type>
      <name>GetShortestPath</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1dd51ef44044928635057e1e66671f69</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneGeometry &gt; &amp;geometry, uint32_t sourceID, uint32_t destID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::list&lt; WorldClockTime &gt;</type>
      <name>GetTriggerTimes</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa23d52695a9395e78249383dbee5493c</anchor>
      <arglist>(const std::list&lt; std::shared_ptr&lt; objects::ServerZoneTrigger &gt;&gt; &amp;triggers)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::shared_ptr&lt; Zone &gt;</type>
      <name>GetZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af669b89bb6cc2ed0f31294b72ab4df41</anchor>
      <arglist>(uint32_t zoneID, uint32_t dynamicMapID, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t currentInstanceID=0)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleDespawns</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6efe4cdc2ef58a021672628d9b851665</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>HandleSpecialInstancePopulate</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>affb5ca3b5e786aa95fee212fc877ba60</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>IsGeometryDisabled</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a590a7d9a64195819e230c407a386908c</anchor>
      <arglist>(const std::shared_ptr&lt; objects::ServerObject &gt; &amp;obj)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>MoveToZoneChannel</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a2fe704d9f8d608cd4bbbc9057210dd4f</anchor>
      <arglist>(const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, uint32_t zoneID, uint32_t dynamicMapID, const std::shared_ptr&lt; objects::InstanceAccess &gt; &amp;toInstance, float x=0.f, float y=0.f, float rot=0.f)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RegisterTimeRestrictions</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>adcd5516030f4cfae729985de7825190e</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, const std::shared_ptr&lt; objects::ServerZone &gt; &amp;definition)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>RemoveInstance</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a850d57ba0b6f12aedf5e5ce78ce4971f</anchor>
      <arglist>(uint32_t instanceID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>RemoveZone</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ac482ac0cae4ccd179dbf6cebf11e9f0a</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, bool freezeOnly)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ScheduleInstanceAccessTimeOut</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab35a3ae47e7604d00ae254ee48e71dfc</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ScheduleTimerExpiration</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>adc5231cbdd2662b67f40675cf80a2703</anchor>
      <arglist>(const std::shared_ptr&lt; ZoneInstance &gt; &amp;instance)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>SelectSpotAndLocation</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab3ab9dc3687fba3e0fe1bfec4afb0182</anchor>
      <arglist>(bool useSpotID, uint32_t &amp;spotID, const std::set&lt; uint32_t &gt; &amp;spotIDs, std::shared_ptr&lt; channel::ZoneSpotShape &gt; &amp;spot, std::shared_ptr&lt; objects::SpawnLocation &gt; &amp;location, std::shared_ptr&lt; DynamicMap &gt; &amp;dynamicMap, std::shared_ptr&lt; objects::ServerZone &gt; &amp;zoneDef, std::list&lt; std::shared_ptr&lt; objects::SpawnLocation &gt;&gt; &amp;locations)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendAccessMessage</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a31b05c12de4ad5a942b8c80ea94b524f</anchor>
      <arglist>(const std::shared_ptr&lt; objects::InstanceAccess &gt; &amp;access, bool joined, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client=nullptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendAllyData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a581b171cf9d284d568955d08e937372f</anchor>
      <arglist>(const std::shared_ptr&lt; AllyState &gt; &amp;allyState, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool queue=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendEnemyData</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a861212d436ec24f7944c54451b039e45</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;enemyState, const std::shared_ptr&lt; ChannelClientConnection &gt; &amp;client, const std::shared_ptr&lt; Zone &gt; &amp;zone, bool queue=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>SendMultiZoneBossStatus</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a477d24784ff3b1d3e6538351d38da93d</anchor>
      <arglist>(uint32_t groupID)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>UpdateStatusEffectStates</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a14820856603a59055ccbe0d280b21931</anchor>
      <arglist>(const std::shared_ptr&lt; Zone &gt; &amp;zone, uint32_t now)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>ValidateBossGroup</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a31a1d85c3a86d9913819662e7c331e45</anchor>
      <arglist>(const std::shared_ptr&lt; EnemyState &gt; &amp;enemyState)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mActiveTrackedZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>acdf28520221ae776bf9cc74eb9c85aa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mActiveZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a0126b10592bf3deae95c819a1850cf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mAllTimeRestrictZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a7f0bd8893ec34d587ab466fef943e62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; DynamicMap &gt; &gt;</type>
      <name>mDynamicMaps</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ae22176c64e62b0d908eb2f9a55eaaf87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, uint32_t &gt;</type>
      <name>mEntityMap</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad3bd02631767c1e975d83319f4c24aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mGlobalBossZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ace454a49d64205f4699a8c2204f27f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::list&lt; std::shared_ptr&lt; objects::ServerZoneTrigger &gt; &gt;</type>
      <name>mGlobalTimeTriggers</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a6c33d66877f1b412fb6c7279a2dedf6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::unordered_map&lt; uint32_t, uint32_t &gt; &gt;</type>
      <name>mGlobalZoneMap</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a922cf90193a2f70380497a23ac8c0017</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::Mutex</type>
      <name>mInstanceZoneLock</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad2126fd772396515d04f8fe37f302dff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>libcomp::Mutex</type>
      <name>mLock</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a47900c7b1ace0e2330d928d37301e236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextZoneID</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>af70cb6b23c50451f3c09ed162f5cfda3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>uint32_t</type>
      <name>mNextZoneInstanceID</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aab93701a6a6a64ac39f65368d4995ac5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::weak_ptr&lt; ChannelServer &gt;</type>
      <name>mServer</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ad7bca90b5131995bbfde92f7edfe5664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; WorldClockTime, std::set&lt; uint32_t &gt; &gt;</type>
      <name>mSpawnTimeRestrictZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>ab8b4e4cd9162e9b1a82dc1b47bd76d45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::set&lt; uint32_t &gt;</type>
      <name>mTimeRestrictUpdatedZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a4522d789989f16379768a3b3202c2a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ServerTime</type>
      <name>mTrackingRefresh</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>aa820a5356213ec59080ea3d99c7139b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, std::shared_ptr&lt; ZoneGeometry &gt; &gt;</type>
      <name>mZoneGeometry</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a7998d8f09b29e40c48f38aeab58a56b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; int32_t, std::shared_ptr&lt; objects::InstanceAccess &gt; &gt;</type>
      <name>mZoneInstanceAccess</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a967a52b1c6122f31599a1a8e83072462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; ZoneInstance &gt; &gt;</type>
      <name>mZoneInstances</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a1f276d7152b1fc0db25b19094c3509ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; uint32_t, std::shared_ptr&lt; Zone &gt; &gt;</type>
      <name>mZones</name>
      <anchorfile>classchannel_1_1ZoneManager.html</anchorfile>
      <anchor>a3b2ea06a452af7795a9b297bea2ff3dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneQmpShape</name>
    <filename>classchannel_1_1ZoneQmpShape.html</filename>
    <base>channel::ZoneShape</base>
    <member kind="function">
      <type></type>
      <name>ZoneQmpShape</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a48119304cac1aba4a83b407a75aeb918</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a09ce6ec4d4a3f245c657b2eb1816fb7b</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface) const </arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Active</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a94dfdf165a9833775d29589d7bd94ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; Point, 2 &gt;</type>
      <name>Boundaries</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>aef5e78b25f35fa427aabba55515f57a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::QmpElement &gt;</type>
      <name>Element</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>af5283361a4fd85b62651fb77cf6c7793</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>InstanceID</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a4531d71b9b6eab3b1bbcaa07b12708d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsLine</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a065def0a0c1df7eb8e7aa5b058a63309</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Line &gt;</type>
      <name>Lines</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5ba5b7e1063b9e7359dd7991bef32b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>OneWay</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>ad46efe561a393800ee9286e8c44a1ecf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint32_t</type>
      <name>ShapeID</name>
      <anchorfile>classchannel_1_1ZoneQmpShape.html</anchorfile>
      <anchor>a55cc0e5b16ac75d221ccd030a4f1fa95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::list&lt; Point &gt;</type>
      <name>Vertices</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a5455c8f10110c5628974f69ec1c3d2f8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneShape</name>
    <filename>classchannel_1_1ZoneShape.html</filename>
    <member kind="function">
      <type></type>
      <name>ZoneShape</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a1f56375b6625c8469484fd25208837c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Collides</name>
      <anchorfile>classchannel_1_1ZoneShape.html</anchorfile>
      <anchor>a670b3b136576dfadb0c6562633e48767</anchor>
      <arglist>(const Line &amp;path, Point &amp;point, Line &amp;surface) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>channel::ZoneSpotShape</name>
    <filename>classchannel_1_1ZoneSpotShape.html</filename>
    <base>channel::ZoneShape</base>
    <member kind="function">
      <type></type>
      <name>ZoneSpotShape</name>
      <anchorfile>classchannel_1_1ZoneSpotShape.html</anchorfile>
      <anchor>a65adf6e2c83c1468215a51bc8ed7ff71</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::shared_ptr&lt; objects::MiSpotData &gt;</type>
      <name>Definition</name>
      <anchorfile>classchannel_1_1ZoneSpotShape.html</anchorfile>
      <anchor>a44529bc261aa122959daaa6adcf82de0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>channel::Parsers</name>
    <filename>namespacechannel_1_1Parsers.html</filename>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a890cb5f2277a251d95ef6954311b4bf3</anchor>
      <arglist>(Unsupported)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae94a1dc1778fc40d032d5dd119c08a8f</anchor>
      <arglist>(Login)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af9974f3648ff70d38d27b96e2fe6a3ee</anchor>
      <arglist>(Auth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afd838f6be6ea508f41e185d861fa433a</anchor>
      <arglist>(SendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad5aa3573786b0bc4ca0bba6c4c7e7c6e</anchor>
      <arglist>(Logout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a58ecd86f14c648837ee0fd1d849b72fe</anchor>
      <arglist>(PopulateZone)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc7a0d6dd889731cd5302c60e171b166</anchor>
      <arglist>(Move)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aff977610c5726e6a7421e05c83690b09</anchor>
      <arglist>(Pivot)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aceba0f771ce9f6213f53fc60566c531b</anchor>
      <arglist>(Chat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a54551b53ee443919b8c6800a9ae6938f</anchor>
      <arglist>(Tell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6556b57169a6dc20d3597460011e63f</anchor>
      <arglist>(SkillActivate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a375ed59ce216032df0ffc96b9e89fd1e</anchor>
      <arglist>(SkillExecute)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4cc2cdd166b983162e48bc3337f6ece5</anchor>
      <arglist>(SkillCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac102bd4ee59985f3b19a0f3802c4de91</anchor>
      <arglist>(SkillTarget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5d0261a6ac5128422a47a2f203ecb142</anchor>
      <arglist>(ExpertiseDown)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af84b1b79a40145ec23b7ce492daa5126</anchor>
      <arglist>(AllocateSkillPoint)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a47a80476c8e9f1f4a1179841d87acd15</anchor>
      <arglist>(ToggleExpertise)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adec0c81a045a2e38cf309cc0a288b41b</anchor>
      <arglist>(LearnSkill)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6b9d46d72d18d2194f6b1ebc701e8321</anchor>
      <arglist>(DemonSkillUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8eb6d527ef3143c8f816d0c2d7afa7a7</anchor>
      <arglist>(KeepAlive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae2c2e144c58ec936f1b19004b3ec68d5</anchor>
      <arglist>(FixObjectPosition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8996afeb3cf3f0ddf20f39bdef391fee</anchor>
      <arglist>(State)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a84e37cc3fed6376d2b0b58162327fc76</anchor>
      <arglist>(DemonData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68cc5203ee302a6f63481e8040a6b66c</anchor>
      <arglist>(DemonBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2bbf1990d06af02f7a7962b484bf39d7</anchor>
      <arglist>(DemonBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a70659754fc952f5999ba5c99ff32277e</anchor>
      <arglist>(ChannelList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad1c93f70c8ee86897b0a76d2b4fbf515</anchor>
      <arglist>(ReviveCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab052a097caf91220604c2c536a4c62f0</anchor>
      <arglist>(StopMovement)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af29db7b8a5606f6cfdddfe31634fa694</anchor>
      <arglist>(SpotTriggered)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aa4d371b2ccc6a0674a2a41fc1c345c</anchor>
      <arglist>(WorldTime)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a39a8dbe8207e0e7f93cab1cab42a690f</anchor>
      <arglist>(ItemBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac9210c5b0335d4a1d155197d692f5af6</anchor>
      <arglist>(ItemMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac5a9817254b3343089b1afc0829d9ed3</anchor>
      <arglist>(ItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb4e547a8d94bc840bf110e06427be3c</anchor>
      <arglist>(ItemStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a23dad0722bee33158d469a7cd11420eb</anchor>
      <arglist>(EquipmentList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adc3b526a69c9bbe05358cc2fe201c5af</anchor>
      <arglist>(TradeRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4f0239b72b70a66e2472647a65d621e9</anchor>
      <arglist>(TradeAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aad13e4e73e4928472fd8ef7abaae5673</anchor>
      <arglist>(TradeAddItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7dcd32056226457879e1c5e14a07d81d</anchor>
      <arglist>(TradeLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3620d29f3692e7d82d4e446ca4971142</anchor>
      <arglist>(TradeFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a020ce1a7780283eaf1564a3c6d227ad3</anchor>
      <arglist>(TradeCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a630bb6dc909e41948dd6a75cd167710f</anchor>
      <arglist>(LootItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af3fdc1abd66185ffb49aed8f5696f6cc</anchor>
      <arglist>(CashBalance)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>addd49b6b7bbb441be8eee90fb30f86de</anchor>
      <arglist>(ShopData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88e6228ca3bc38a1a5b529bba42e2ca1</anchor>
      <arglist>(ShopBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6672cf56f2e2e47a2e726dc00f448bb6</anchor>
      <arglist>(ShopSell)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad0fd6146a2dd576b81b10eeb0dfd1ae6</anchor>
      <arglist>(DemonBoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a852c6fd412282f0a215c248aaa50c6f2</anchor>
      <arglist>(DemonDismiss)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6b227c67e36a5aa330ab9d214b61cf1</anchor>
      <arglist>(PostList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af4f0982929387c63c515a875ac8d6ed2</anchor>
      <arglist>(PostItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4cced56934a8cb7a872f896217e6f65</anchor>
      <arglist>(PostGift)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7ac9ebc9c94884f21b7241cbbf494f94</anchor>
      <arglist>(HotbarData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a96353b26d8bafd3689afb50d8a4dbdf5</anchor>
      <arglist>(HotbarSave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4e0ed38608743f97b5b25b9bcefef23e</anchor>
      <arglist>(EventResponse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abada04544198be08513edea636d47632</anchor>
      <arglist>(ValuableList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acf07fca8bfe83921f13f920d79eca256</anchor>
      <arglist>(ObjectInteraction)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a165f2f252fac0eacd650a78627da2dcf</anchor>
      <arglist>(FriendInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba6a952289fcb1db2e1d19e2ee0483bc</anchor>
      <arglist>(FriendRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4afb5e25f299297020c97db69bc1a51</anchor>
      <arglist>(FriendAddRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5a33715e1106d4f486ac66fecfb75e56</anchor>
      <arglist>(FriendData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a668efb852fa09ad1961865864707caa6</anchor>
      <arglist>(PartyInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb5404562f34f462c66a473f583f7cff</anchor>
      <arglist>(PartyJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abe70f0098f72fb301288919dbf9cc0a6</anchor>
      <arglist>(PartyCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cf2e226f58f7c426f85597da5911d85</anchor>
      <arglist>(PartyLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50fe89e494f843bf3fc53039a4f1925f</anchor>
      <arglist>(PartyDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5c16d2fc87a2626f20fd682c1acbbb59</anchor>
      <arglist>(PartyLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa6afe83f3cb369583ecef80c49a6f18a</anchor>
      <arglist>(PartyDropRule)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab2414a25a48f13c8152826229aaf7d0a</anchor>
      <arglist>(PartyKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac17be68d2368b9ac66f35aaaaa0ad2a</anchor>
      <arglist>(DemonFusion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a77e6a64ef82b8fc367f216b3a606ee5f</anchor>
      <arglist>(LootDemonEggData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af99c7851e6c8d53ff9194a27d7dcf866</anchor>
      <arglist>(Sync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9d1514f2fecb97acbfcfd4f9a523cb46</anchor>
      <arglist>(ShopRepair)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a867a4b406be96f53413c93b23feb3a06</anchor>
      <arglist>(Rotate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9461ec8b9b72d92fb658c01ac0760a2e</anchor>
      <arglist>(LootBossBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d8a187c85f630de3b7249942f974d4a</anchor>
      <arglist>(UnionFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b531d86fb619b9c48e38c75a3c6206a</anchor>
      <arglist>(ItemDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a292547e979fd1fb803c236a210e5b2e7</anchor>
      <arglist>(DepoRent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a18dd1ca93e8aa4d6cda0a9e03e36b91f</anchor>
      <arglist>(LootTreasureBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac89e347abf54ed06bee16065e3eea48</anchor>
      <arglist>(QuestActiveList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afdcdf45c216caf7b203049be8ed34b60</anchor>
      <arglist>(QuestCompletedList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae9dceae2d1fd4ef2358feda7206651e2</anchor>
      <arglist>(BazaarMarketOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c7e38743d3a55f2a74c747f62dc5cee</anchor>
      <arglist>(BazaarMarketClose)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0eaecdfbe68ff767c2dd186ea4fbd553</anchor>
      <arglist>(BazaarMarketInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a530bc1f9739c74972633953452da30d2</anchor>
      <arglist>(BazaarItemAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd95198da7f89f9d15ae3015afcc4301</anchor>
      <arglist>(BazaarItemDrop)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a931bf1e0efedb09a2d429ececbbc027b</anchor>
      <arglist>(BazaarItemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae767a701adbf9b3e62bc9e333a10e3bf</anchor>
      <arglist>(BazaarItemBuy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a187bf77fa9ab9a59fd480c908c34d5bb</anchor>
      <arglist>(BazaarMarketSales)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acb71c41375dd2e181d78233d6d1895b8</anchor>
      <arglist>(SearchEntrySelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab484457df75d7d4a08e65ec3693706d8</anchor>
      <arglist>(SearchList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac50422a605d1e88453d5cd4ee3372d9</anchor>
      <arglist>(SearchEntryData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2698c51dc68d6698135f1dec412cfb46</anchor>
      <arglist>(SearchEntryRegister)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa56673b5c6e896559795d431751d9b35</anchor>
      <arglist>(SearchEntryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2b40857ea2dc9096113747711b5982b3</anchor>
      <arglist>(SearchEntryRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1599782b2d3c9aede9689c0e076f7345</anchor>
      <arglist>(SearchAppReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a884c43ffd0b0cef85576339b1a8284ae</anchor>
      <arglist>(ClanDisband)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab86edaa3a09f40c6deb035544ca4b168</anchor>
      <arglist>(ClanInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae55e907d160291adc39969c4f872b4b1</anchor>
      <arglist>(ClanJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0c31154f1d887d45ec79ad4ddc977699</anchor>
      <arglist>(ClanCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acac5725342a37cb451fa2204e0aa1846</anchor>
      <arglist>(ClanKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f6b13564e2cc661cc1846363f7fc2c5</anchor>
      <arglist>(ClanMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a382c9b486646a06009748617ea224dde</anchor>
      <arglist>(ClanSubMasterUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac83fb8eacb404d58764ba3a45dbdfbb0</anchor>
      <arglist>(ClanLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4a8195d041badf945c2b2165f1bc7e15</anchor>
      <arglist>(ClanChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0de2bd9544ee5b06d65517726d50939c</anchor>
      <arglist>(ClanInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6f96ea981f0a6544ec6746c4b227635</anchor>
      <arglist>(ClanList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a203da5ded88fda102e36d1d3f29290b4</anchor>
      <arglist>(ClanData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a959ed8eb0dc8a5d461c0510181a3cfde</anchor>
      <arglist>(ClanForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aabc2e2ed2be0aeb349347aab51e491a3</anchor>
      <arglist>(ItemPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5079ffbae1b6bfcc7ebcead985e5b2e</anchor>
      <arglist>(BazaarState)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05232a28bee7851371c0b66e94ed59cd</anchor>
      <arglist>(BazaarClerkSet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac67841b30f5cc4d5da12feba93bcc655</anchor>
      <arglist>(BazaarPrice)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afa8b37592e160f8bbb5069fae0afd968</anchor>
      <arglist>(BazaarMarketInfoSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab234db94abbe5c786cfaaf7bfb690707</anchor>
      <arglist>(Warp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aca62027849d85227c9d01dc7f52c0cb6</anchor>
      <arglist>(SkillExecuteInstant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aeb24c5e444d103d9f47f37d868818e70</anchor>
      <arglist>(SyncCharacter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>add6db8baba930004937cff0b63def5cf</anchor>
      <arglist>(DemonAISet)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a734995a7edcc63882a722310e0f95302</anchor>
      <arglist>(BazaarInteract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd645ff6755419293ffe5deecb1a8afa</anchor>
      <arglist>(SkillForget)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7bbde53ef90979ff5fc256ae3d7fb715</anchor>
      <arglist>(BazaarMarketEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a10f5427cf4aa57446a65ddcd4e0f34bc</anchor>
      <arglist>(BazaarMarketComment)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f2ff1953f8f8256925720a653366655</anchor>
      <arglist>(PartyRecruitReply)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5aabf7ab28ebfbf32a8f08a2d3e27b16</anchor>
      <arglist>(PartyRecruit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0e0a2f7424a7ed7feb4beb9b6cde4f91</anchor>
      <arglist>(StatusIcon)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a2e0d6e653c325c0263da372e036444b0</anchor>
      <arglist>(MapFlag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a73e4bcf1dda9f74760164783eb4468dd</anchor>
      <arglist>(DemonCompendium)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4b126f2c4ce892402719ebdb72e7f404</anchor>
      <arglist>(ItemRepairMax)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad11f0b238d2d4daa6189d6af9a263598</anchor>
      <arglist>(AppearanceAlter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8db68369da4d114e6cf2cc43fb207408</anchor>
      <arglist>(EntrustRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af7b0d06a55b901b0ce627422273567e2</anchor>
      <arglist>(EntrustAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4909813087e538b2ba9fc6c828c43e7f</anchor>
      <arglist>(EntrustRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e8724766222c0ba19e9f6cebdd5f25b</anchor>
      <arglist>(EntrustRewardFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab5972eaef6e8c8a76d0197dfd95e56f2</anchor>
      <arglist>(EntrustRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a79cd737c326ba357695726826200c5ce</anchor>
      <arglist>(EntrustFinish)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a40b2fd880de3f2fc55ba341e298d3092</anchor>
      <arglist>(DemonCrystallizeItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a43c1730851b18f1fddd83b318e3af59b</anchor>
      <arglist>(DemonCrystallize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afda3e648745534650637acc40bd0ee78</anchor>
      <arglist>(EnchantItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7b6e69c2180ceebc6764b46ea1bfea80</anchor>
      <arglist>(Enchant)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa220aab3e270a2e175aece2654032b33</anchor>
      <arglist>(DungeonRecords)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6712c666459af863fffc57d4dd08b91</anchor>
      <arglist>(ItemPromo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6526cf831ca743a5c29661a3abf87f62</anchor>
      <arglist>(TriFusionJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9f83948781aea4c3483098a366c88104</anchor>
      <arglist>(TriFusionDemonUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad408ee5e634e77fe90f3f99a5f08eff7</anchor>
      <arglist>(TriFusionRewardUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a25da2351e7fd3d590dfd49a340d68cf1</anchor>
      <arglist>(TriFusionRewardAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a38db8651011259bb469354a840323508</anchor>
      <arglist>(TriFusionAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3e49d2050f446b58cc1566a7d0368dd8</anchor>
      <arglist>(TriFusionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a24383339d474dd57cb6abe1fe9b3aa6d</anchor>
      <arglist>(ClanEmblemUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1dbe06d2e2279a75fb5089fd0c8d7710</anchor>
      <arglist>(DemonFamiliarity)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a9e8571d066ce5d17c93f0a201a323b</anchor>
      <arglist>(PlasmaStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1068fefcd88b74de54dd8df769c65e02</anchor>
      <arglist>(PlasmaResult)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a49682ea2c49dff80bd949c4f387e1692</anchor>
      <arglist>(PlasmaEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a55be10e0201d4ba3b68299f2ed615f4a</anchor>
      <arglist>(PlasmaItemData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6f9269fc10e9aae943b175b1ff8969e5</anchor>
      <arglist>(PlasmaItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac2ed3a0f648f1e73b3009f71531d8015</anchor>
      <arglist>(TimeLimitSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acbca02b07b81a0ed71fc6674678a9c09</anchor>
      <arglist>(ItemDisassemble)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae48ffe683fbb9412481fd1690c13bd21</anchor>
      <arglist>(SynthesizeRecipe)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa169c5dc57e273674c6af074b58094cd</anchor>
      <arglist>(Synthesize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a02765599fb09d4dc3333638b79b3b882</anchor>
      <arglist>(EquipmentMod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af6a1e6a663f51eb441734a3be4d22e8d</anchor>
      <arglist>(MaterialBox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aba0dc452cb4aaf91d4aca6e6f09fefcd</anchor>
      <arglist>(Analyze)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4d6a27a5d8087868b42bd73c2e2cec3e</anchor>
      <arglist>(MaterialExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9034798fa159038dbe2b9f73973a0ceb</anchor>
      <arglist>(MaterialInsert)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae57f37fdd9e5af08553d2333a4c0dde7</anchor>
      <arglist>(ItemExchange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a547c55cdb397b7e024480ef4d568592b</anchor>
      <arglist>(CompShopOpen)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adb17529b0debaff37daf4e8f55d9c082</anchor>
      <arglist>(CompShopList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6ac189bb2a6d768f11f61172070c2222</anchor>
      <arglist>(FusionGauge)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae1e1d33b474e6345e8392a367c3204f1</anchor>
      <arglist>(TitleList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5cdb4e0e1ee0f56c68d04f5037956d93</anchor>
      <arglist>(TitleActiveUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc49aa12bc8e4b83dc16730fffe58053</anchor>
      <arglist>(TitleBuild)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af33be683f693a0bf7089ca22ea62882d</anchor>
      <arglist>(DemonQuestData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4644cc62d88f92d4b7490726b39849e6</anchor>
      <arglist>(DemonQuestAccept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af0f06d03d4e342436418901ec11fb4ee</anchor>
      <arglist>(DemonQuestEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af2c546959f31305fafc3939a3245ece9</anchor>
      <arglist>(DemonQuestCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4289f56d6b6e67e9d6419da62e057f4f</anchor>
      <arglist>(DemonQuestList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6e5fbebc0f25a46ce7669e2737e2658b</anchor>
      <arglist>(DemonQuestActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad76fc6ebb5fe103c15cc42482a4a97c7</anchor>
      <arglist>(DemonLock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3a546866377b34ff9cc7d75c13b39e3c</anchor>
      <arglist>(DemonReunion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aebf3e2537c5c7f2e41ac00cf7dfcb51d</anchor>
      <arglist>(DemonQuestReject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5cae38e3fd80fbff28b3a0ee06bb4ce8</anchor>
      <arglist>(PvPConfirm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab7b02c287e1106c61fad4277ad4d8ffa</anchor>
      <arglist>(PvPBaseCapture)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a52aeee73e2147b56549ba83861dbb24d</anchor>
      <arglist>(PvPBaseLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad07995b14f6110db34453a78ce032f4d</anchor>
      <arglist>(PvPJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6a306ceaa332b31d8eaa9f6a6a42506f</anchor>
      <arglist>(PvPCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7a341b2d2864483e4423e4c4b923ab26</anchor>
      <arglist>(PvPCharacterInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a4885fdd91badd71ca21c516c54276c49</anchor>
      <arglist>(AutoRecoveryUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a34d9e6a938586931a171c369568b0b28</anchor>
      <arglist>(ItemMix)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a28ec6c40c74e16acbed8f7e1478e0f06</anchor>
      <arglist>(BikeBoostOn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8d11a7e23864c029e16cf1d41f767f52</anchor>
      <arglist>(BikeBoostOff)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a205de485c67408978713882de4308a33</anchor>
      <arglist>(BikeDismount)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a03f8e4168b856bebe68f8098227fa421</anchor>
      <arglist>(TeamForm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9ae0413092cc9af5e977d6f9d8ddcb2a</anchor>
      <arglist>(TeamInvite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abb114e58e9f22063bfd20ce542f02fd0</anchor>
      <arglist>(TeamAnswer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1cecf575825196cd400cd333e0da1b89</anchor>
      <arglist>(TeamKick)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7c463b1addcadf101d88fe27c99991a2</anchor>
      <arglist>(TeamLeaderUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abf0f6e2720515c76c8519f2daf3deeb2</anchor>
      <arglist>(TeamLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a3cee422b8f49970f4191fc96596f5ec7</anchor>
      <arglist>(TeamChat)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0b5184340abd7797b474161c07baa3a7</anchor>
      <arglist>(TeamInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a74af41e767510739b1b33d399512ec0e</anchor>
      <arglist>(TeamMemberList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a93ea94ad657c07e54298ef7b5a102181</anchor>
      <arglist>(EquipmentSpiritFuse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc28ad084489e677616b6ef8fe304606</anchor>
      <arglist>(DemonQuestPending)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ace33066e7a6955923b936aa8be6c479c</anchor>
      <arglist>(ItemDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab7e1b55aa806c96f191108e8662e88e7</anchor>
      <arglist>(DiasporaBaseCapture)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab06c705c8165d4085e31ee9e44cd3d38</anchor>
      <arglist>(DiasporaEnter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>abd4046837d69578ebca45c277ae58678</anchor>
      <arglist>(DemonDepoRemote)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a279abf7584e04012d40aa80379286677</anchor>
      <arglist>(CommonSwitchUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a314e5f0981b4af6e8abe9460217f3cfd</anchor>
      <arglist>(CommonSwitchInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>adf96485dd5b9105ad9814c00fa60eb93</anchor>
      <arglist>(DemonForce)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae5f5fb57611a33c6a962caf3b5ae37c2</anchor>
      <arglist>(DemonForceStack)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0f8f963f709dbd90cd1834fbd922917f</anchor>
      <arglist>(CasinoCoinTotal)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a978602aaa3db2e8e4a14fa3cd070492d</anchor>
      <arglist>(TriFusionSolo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a14e05f2cd5e242714b4e3e1a8482ce66</anchor>
      <arglist>(EquipmentSpiritDefuse)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae4bb5453e945d9510f4e7412459ce65b</anchor>
      <arglist>(DemonForceEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a6cd88fa6a3a725e08be5cbac2dce97b6</anchor>
      <arglist>(UBSpectatePlayer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac6bd2698b28d1e8986bd5ce642f9ee30</anchor>
      <arglist>(UBProceed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a356b2d03738bc67d6a79d815d63b805b</anchor>
      <arglist>(UBLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad6725ea7007fb2b811ac3f49bebdbe0b</anchor>
      <arglist>(UBLottoCancel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa9b6391a9450b9b58098500b65ba9662</anchor>
      <arglist>(UBLottoJoin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ae8efcd8ee307dc56260ebc9d9e2159e3</anchor>
      <arglist>(SearchEntryInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9e2d75e536b53247e658f0e3a28d5ad2</anchor>
      <arglist>(ITimeData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac33e9ef8a7d826636857a89c50cfa412</anchor>
      <arglist>(ITimeTalk)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a1c216aba3483af2f16e66611d72cdfc0</anchor>
      <arglist>(CultureData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0be113d9aee59e9ddacdb5bb64cb0683</anchor>
      <arglist>(CultureMachineAccess)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a68e8a290c139d2d7dadfa52106119f73</anchor>
      <arglist>(CultureStart)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af5a67f3a848adc1377471afaaba0ac6c</anchor>
      <arglist>(CultureItem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9641d18395ed2c720c455eb239add58f</anchor>
      <arglist>(CultureEnd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a81ce58fc3c9e06f093a4c53ea8bfd239</anchor>
      <arglist>(EquipmentModEdit)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a9978dcef5bb2724884d188f8b994a53d</anchor>
      <arglist>(PAttributeDeadline)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a50d718c02305ac23269026ed58260bf0</anchor>
      <arglist>(MissionLeave)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0082599928c887bdcd17f4bf9ecfec40</anchor>
      <arglist>(MitamaReunion)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a05c3db7aac15a8404828a32bab8f3b23</anchor>
      <arglist>(MitamaReset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acdf733023072ce6d00cff3fe5178d296</anchor>
      <arglist>(DemonDepoList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa44ed3f0f0dedbe8a1fcedb1f3763ef9</anchor>
      <arglist>(DemonEquip)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>af500e1c32db991db11d618ca7ccc87e5</anchor>
      <arglist>(Barter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad281706cfcb1d058d1e4d1b4b54c2271</anchor>
      <arglist>(PentalphaData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a8837e9bf9c15dc18ecada03212afd07d</anchor>
      <arglist>(QuestTitle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5ab4dcd3f937fa9b2a416f04237973e0</anchor>
      <arglist>(ReportPlayer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a59d3b4e968d8d50b9cbf4fec9f3c44ab</anchor>
      <arglist>(Blacklist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab6e4c383d57be4094633217a99912e72</anchor>
      <arglist>(BlacklistUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a64b52d57361096766b39a76d9d357ce3</anchor>
      <arglist>(DestinyBoxData)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a45527c63e533dd2cbf93ab57518f9d18</anchor>
      <arglist>(DestinyLotto)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a056234a0f2190082a4ae38cecb06f227</anchor>
      <arglist>(DigitalizePoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a7d5682be8975e571b5b5cfe15aba374c</anchor>
      <arglist>(DigitalizeAssist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0e1b3521476b56fe5c7463cf9bc7b5f2</anchor>
      <arglist>(DigitalizeAssistLearn)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0abc1feb8b6fd3542223c6f8aea1d36f</anchor>
      <arglist>(DigitalizeAssistRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a88d597b70a6fa94b6a250b945f1174d8</anchor>
      <arglist>(VABox)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a008a560eb55e4913d7ed68dc820d62cc</anchor>
      <arglist>(VABoxAdd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac0a06eff23759d840aa828e9a04c2383</anchor>
      <arglist>(VABoxRemove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5b82e3a988919d9accf0d458df8108d3</anchor>
      <arglist>(VAChange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac1e6ed48b3b71ffb5647d7a28c4bb43f</anchor>
      <arglist>(VABoxMove)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a5fffad9a86f4c9658f5c61b881f4ed3c</anchor>
      <arglist>(ReunionPoints)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a157203165c9b686d70a0e37543fd84c3</anchor>
      <arglist>(ReunionExtract)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a89a043747a3feb2a1c2dd6aaf1719f76</anchor>
      <arglist>(ReunionInject)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a26685b7fd49ba388c534290966c028e7</anchor>
      <arglist>(AmalaAccountDumpRequest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acd23504aa3bff98882c9cf7831eec6ad</anchor>
      <arglist>(SetWorldInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ab78a16424de5a60aa2ef897c08e89a26</anchor>
      <arglist>(SetOtherChannelInfo)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ac38153f129a57a21a81a664e89dc80b2</anchor>
      <arglist>(AccountLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a461171d09726151f3fe4be69c22c57a1</anchor>
      <arglist>(AccountLogout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a08bc985f943875c19c658b9127b45d3a</anchor>
      <arglist>(Relay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aac63594b1a5d0d8ee9ae1e6b8cca79d3</anchor>
      <arglist>(DataSync)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a0d617e7007f87615239e7d3815bbc92c</anchor>
      <arglist>(CharacterLogin)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>aa3a2b79e975884c97a11d63c2efa7c4c</anchor>
      <arglist>(FriendsUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>afc88c91591e8baba78200df88677b777</anchor>
      <arglist>(PartyUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>acaf6d73b0dcb020c321c846747e4c37e</anchor>
      <arglist>(ClanUpdate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>a075d4fcb5ae9aca7ea1ab0d1e896d092</anchor>
      <arglist>(WebGame)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PACKET_PARSER_DECL</name>
      <anchorfile>namespacechannel_1_1Parsers.html</anchorfile>
      <anchor>ad24bc5d331d34f1e9ee18514edcedb22</anchor>
      <arglist>(TeamUpdate)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>std::hash&lt; libcomp::String &gt;</name>
    <filename>namespacestd_1_1hash_3_01libcomp_1_1String_01_4.html</filename>
  </compound>
  <compound kind="namespace">
    <name>String</name>
    <filename>namespaceString.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Var&lt; const libcomp::String &amp; &gt;</name>
    <filename>namespaceVar_3_01const_01libcomp_1_1String_01_6_01_4.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Var&lt; const std::list&lt; std::shared_ptr&lt; T &gt; &gt; &amp; &gt;</name>
    <filename>namespaceVar_3_01const_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_6_01_4.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Var&lt; libcomp::String &gt;</name>
    <filename>namespaceVar_3_01libcomp_1_1String_01_4.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Var&lt; std::list&lt; std::shared_ptr&lt; T &gt; &gt; &gt;</name>
    <filename>namespaceVar_3_01std_1_1list_3_01std_1_1shared__ptr_3_01T_01_4_01_4_01_4.html</filename>
  </compound>
  <compound kind="dir">
    <name>amala</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/amala/</path>
    <filename>dir_aa6e7ac5350b6c77b789f9e8c7906eb7.html</filename>
    <file>AccountDumpRequest.cpp</file>
  </compound>
  <compound kind="dir">
    <name>channel</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/</path>
    <filename>dir_202cbce50e83253ea3d67a29f81b7523.html</filename>
    <dir>src</dir>
  </compound>
  <compound kind="dir">
    <name>game</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/game/</path>
    <filename>dir_35fb623cb7b3a314ae32d8e527ea037e.html</filename>
    <file>AllocateSkillPoint.cpp</file>
    <file>Analyze.cpp</file>
    <file>AppearanceAlter.cpp</file>
    <file>Auth.cpp</file>
    <file>AutoRecoveryUpdate.cpp</file>
    <file>Barter.cpp</file>
    <file>BazaarClerkSet.cpp</file>
    <file>BazaarInteract.cpp</file>
    <file>BazaarItemAdd.cpp</file>
    <file>BazaarItemBuy.cpp</file>
    <file>BazaarItemDrop.cpp</file>
    <file>BazaarItemUpdate.cpp</file>
    <file>BazaarMarketClose.cpp</file>
    <file>BazaarMarketComment.cpp</file>
    <file>BazaarMarketEnd.cpp</file>
    <file>BazaarMarketInfo.cpp</file>
    <file>BazaarMarketInfoSelf.cpp</file>
    <file>BazaarMarketOpen.cpp</file>
    <file>BazaarMarketSales.cpp</file>
    <file>BazaarPrice.cpp</file>
    <file>packets/game/BazaarState.cpp</file>
    <file>BikeBoostOff.cpp</file>
    <file>BikeBoostOn.cpp</file>
    <file>BikeDismount.cpp</file>
    <file>Blacklist.cpp</file>
    <file>BlacklistUpdate.cpp</file>
    <file>CashBalance.cpp</file>
    <file>CasinoCoinTotal.cpp</file>
    <file>ChannelList.cpp</file>
    <file>Chat.cpp</file>
    <file>ClanCancel.cpp</file>
    <file>ClanChat.cpp</file>
    <file>ClanData.cpp</file>
    <file>ClanDisband.cpp</file>
    <file>ClanEmblemUpdate.cpp</file>
    <file>ClanForm.cpp</file>
    <file>ClanInfo.cpp</file>
    <file>ClanInvite.cpp</file>
    <file>ClanJoin.cpp</file>
    <file>ClanKick.cpp</file>
    <file>ClanLeave.cpp</file>
    <file>ClanList.cpp</file>
    <file>ClanMasterUpdate.cpp</file>
    <file>ClanSubMasterUpdate.cpp</file>
    <file>CommonSwitchInfo.cpp</file>
    <file>CommonSwitchUpdate.cpp</file>
    <file>CompShopList.cpp</file>
    <file>CompShopOpen.cpp</file>
    <file>CultureData.cpp</file>
    <file>CultureEnd.cpp</file>
    <file>CultureItem.cpp</file>
    <file>CultureMachineAccess.cpp</file>
    <file>CultureStart.cpp</file>
    <file>DemonAISet.cpp</file>
    <file>DemonBox.cpp</file>
    <file>DemonBoxData.cpp</file>
    <file>DemonBoxMove.cpp</file>
    <file>DemonCompendium.cpp</file>
    <file>DemonCrystallize.cpp</file>
    <file>DemonCrystallizeItem.cpp</file>
    <file>DemonData.cpp</file>
    <file>DemonDepoList.cpp</file>
    <file>DemonDepoRemote.cpp</file>
    <file>DemonDismiss.cpp</file>
    <file>DemonEquip.cpp</file>
    <file>DemonFamiliarity.cpp</file>
    <file>DemonForce.cpp</file>
    <file>DemonForceEnd.cpp</file>
    <file>DemonForceStack.cpp</file>
    <file>DemonFusion.cpp</file>
    <file>DemonLock.cpp</file>
    <file>DemonQuestAccept.cpp</file>
    <file>DemonQuestActive.cpp</file>
    <file>DemonQuestCancel.cpp</file>
    <file>DemonQuestData.cpp</file>
    <file>DemonQuestEnd.cpp</file>
    <file>DemonQuestList.cpp</file>
    <file>DemonQuestPending.cpp</file>
    <file>DemonQuestReject.cpp</file>
    <file>DemonReunion.cpp</file>
    <file>DemonSkillUpdate.cpp</file>
    <file>DepoRent.cpp</file>
    <file>DestinyBoxData.cpp</file>
    <file>DestinyLotto.cpp</file>
    <file>DiasporaBaseCapture.cpp</file>
    <file>DiasporaEnter.cpp</file>
    <file>DigitalizeAssist.cpp</file>
    <file>DigitalizeAssistLearn.cpp</file>
    <file>DigitalizeAssistRemove.cpp</file>
    <file>DigitalizePoints.cpp</file>
    <file>DungeonRecords.cpp</file>
    <file>Enchant.cpp</file>
    <file>EnchantItem.cpp</file>
    <file>EntrustAccept.cpp</file>
    <file>EntrustFinish.cpp</file>
    <file>EntrustRequest.cpp</file>
    <file>EntrustRewardAccept.cpp</file>
    <file>EntrustRewardFinish.cpp</file>
    <file>EntrustRewardUpdate.cpp</file>
    <file>EquipmentList.cpp</file>
    <file>EquipmentMod.cpp</file>
    <file>EquipmentModEdit.cpp</file>
    <file>EquipmentSpiritDefuse.cpp</file>
    <file>EquipmentSpiritFuse.cpp</file>
    <file>EventResponse.cpp</file>
    <file>ExpertiseDown.cpp</file>
    <file>FixObjectPosition.cpp</file>
    <file>FriendAddRemove.cpp</file>
    <file>FriendData.cpp</file>
    <file>FriendInfo.cpp</file>
    <file>FriendRequest.cpp</file>
    <file>FusionGauge.cpp</file>
    <file>HotbarData.cpp</file>
    <file>HotbarSave.cpp</file>
    <file>ItemBox.cpp</file>
    <file>ItemDepoList.cpp</file>
    <file>ItemDepoRemote.cpp</file>
    <file>ItemDisassemble.cpp</file>
    <file>ItemDrop.cpp</file>
    <file>ItemExchange.cpp</file>
    <file>ItemMix.cpp</file>
    <file>ItemMove.cpp</file>
    <file>ItemPrice.cpp</file>
    <file>ItemPromo.cpp</file>
    <file>ItemRepairMax.cpp</file>
    <file>ItemStack.cpp</file>
    <file>ITimeData.cpp</file>
    <file>ITimeTalk.cpp</file>
    <file>KeepAlive.cpp</file>
    <file>LearnSkill.cpp</file>
    <file>Login.cpp</file>
    <file>Logout.cpp</file>
    <file>LootBossBox.cpp</file>
    <file>LootDemonEggData.cpp</file>
    <file>LootItem.cpp</file>
    <file>LootTreasureBox.cpp</file>
    <file>MapFlag.cpp</file>
    <file>MaterialBox.cpp</file>
    <file>MaterialExtract.cpp</file>
    <file>MaterialInsert.cpp</file>
    <file>MissionLeave.cpp</file>
    <file>MitamaReset.cpp</file>
    <file>MitamaReunion.cpp</file>
    <file>Move.cpp</file>
    <file>ObjectInteraction.cpp</file>
    <file>PartyCancel.cpp</file>
    <file>PartyDisband.cpp</file>
    <file>PartyDropRule.cpp</file>
    <file>PartyInvite.cpp</file>
    <file>PartyJoin.cpp</file>
    <file>PartyKick.cpp</file>
    <file>PartyLeaderUpdate.cpp</file>
    <file>PartyLeave.cpp</file>
    <file>PartyRecruit.cpp</file>
    <file>PartyRecruitReply.cpp</file>
    <file>PAttributeDeadline.cpp</file>
    <file>PentalphaData.cpp</file>
    <file>Pivot.cpp</file>
    <file>PlasmaEnd.cpp</file>
    <file>PlasmaItem.cpp</file>
    <file>PlasmaItemData.cpp</file>
    <file>PlasmaResult.cpp</file>
    <file>PlasmaStart.cpp</file>
    <file>PopulateZone.cpp</file>
    <file>PostGift.cpp</file>
    <file>PostItem.cpp</file>
    <file>PostList.cpp</file>
    <file>PvPBaseCapture.cpp</file>
    <file>PvPBaseLeave.cpp</file>
    <file>PvPCancel.cpp</file>
    <file>PvPCharacterInfo.cpp</file>
    <file>PvPConfirm.cpp</file>
    <file>PvPJoin.cpp</file>
    <file>QuestActiveList.cpp</file>
    <file>QuestCompletedList.cpp</file>
    <file>QuestTitle.cpp</file>
    <file>ReportPlayer.cpp</file>
    <file>ReunionExtract.cpp</file>
    <file>ReunionInject.cpp</file>
    <file>ReunionPoints.cpp</file>
    <file>ReviveCharacter.cpp</file>
    <file>Rotate.cpp</file>
    <file>SearchAppReply.cpp</file>
    <file>SearchEntryData.cpp</file>
    <file>SearchEntryInfo.cpp</file>
    <file>SearchEntryRegister.cpp</file>
    <file>SearchEntryRemove.cpp</file>
    <file>SearchEntrySelf.cpp</file>
    <file>SearchEntryUpdate.cpp</file>
    <file>SearchList.cpp</file>
    <file>SendData.cpp</file>
    <file>ShopBuy.cpp</file>
    <file>ShopData.cpp</file>
    <file>ShopRepair.cpp</file>
    <file>ShopSell.cpp</file>
    <file>SkillActivate.cpp</file>
    <file>SkillCancel.cpp</file>
    <file>SkillExecute.cpp</file>
    <file>SkillExecuteInstant.cpp</file>
    <file>SkillForget.cpp</file>
    <file>SkillTarget.cpp</file>
    <file>SpotTriggered.cpp</file>
    <file>State.cpp</file>
    <file>StatusIcon.cpp</file>
    <file>StopMovement.cpp</file>
    <file>Sync.cpp</file>
    <file>SyncCharacter.cpp</file>
    <file>Synthesize.cpp</file>
    <file>SynthesizeRecipe.cpp</file>
    <file>TeamAnswer.cpp</file>
    <file>TeamChat.cpp</file>
    <file>TeamForm.cpp</file>
    <file>TeamInfo.cpp</file>
    <file>TeamInvite.cpp</file>
    <file>TeamKick.cpp</file>
    <file>TeamLeaderUpdate.cpp</file>
    <file>TeamLeave.cpp</file>
    <file>TeamMemberList.cpp</file>
    <file>Tell.cpp</file>
    <file>TimeLimitSync.cpp</file>
    <file>TitleActiveUpdate.cpp</file>
    <file>TitleBuild.cpp</file>
    <file>TitleList.cpp</file>
    <file>ToggleExpertise.cpp</file>
    <file>TradeAccept.cpp</file>
    <file>TradeAddItem.cpp</file>
    <file>TradeCancel.cpp</file>
    <file>TradeFinish.cpp</file>
    <file>TradeLock.cpp</file>
    <file>TradeRequest.cpp</file>
    <file>TriFusionAccept.cpp</file>
    <file>TriFusionDemonUpdate.cpp</file>
    <file>TriFusionJoin.cpp</file>
    <file>TriFusionLeave.cpp</file>
    <file>TriFusionRewardAccept.cpp</file>
    <file>TriFusionRewardUpdate.cpp</file>
    <file>TriFusionSolo.cpp</file>
    <file>UBLeave.cpp</file>
    <file>UBLottoCancel.cpp</file>
    <file>UBLottoJoin.cpp</file>
    <file>UBProceed.cpp</file>
    <file>UBSpectatePlayer.cpp</file>
    <file>UnionFlag.cpp</file>
    <file>Unsupported.cpp</file>
    <file>VABox.cpp</file>
    <file>VABoxAdd.cpp</file>
    <file>VABoxMove.cpp</file>
    <file>VABoxRemove.cpp</file>
    <file>VAChange.cpp</file>
    <file>ValuableList.cpp</file>
    <file>Warp.cpp</file>
    <file>WorldTime.cpp</file>
  </compound>
  <compound kind="dir">
    <name>internal</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/internal/</path>
    <filename>dir_4056a347947789bc6ad90c506692c42f.html</filename>
    <file>AccountLogin.cpp</file>
    <file>AccountLogout.cpp</file>
    <file>CharacterLogin.cpp</file>
    <file>ClanUpdate.cpp</file>
    <file>DataSync.cpp</file>
    <file>FriendsUpdate.cpp</file>
    <file>PartyUpdate.cpp</file>
    <file>Relay.cpp</file>
    <file>SetOtherChannelInfo.cpp</file>
    <file>SetWorldInfo.cpp</file>
    <file>TeamUpdate.cpp</file>
    <file>WebGame.cpp</file>
  </compound>
  <compound kind="dir">
    <name>packets</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/packets/</path>
    <filename>dir_13631e579a80f0f20fe3870a32d70458.html</filename>
    <dir>amala</dir>
    <dir>game</dir>
    <dir>internal</dir>
  </compound>
  <compound kind="dir">
    <name>server</name>
    <path>/home/travis/build/comphack/comp_hack/server/</path>
    <filename>dir_aa65ba6618b56792e3ebc26ea14325de.html</filename>
    <dir>channel</dir>
  </compound>
  <compound kind="dir">
    <name>src</name>
    <path>/home/travis/build/comphack/comp_hack/server/channel/src/</path>
    <filename>dir_e50c339f373c062e8e47f824f02a07dc.html</filename>
    <dir>packets</dir>
    <file>AccountManager.cpp</file>
    <file>AccountManager.h</file>
    <file>ActionManager.cpp</file>
    <file>ActionManager.h</file>
    <file>ActiveEntityState.cpp</file>
    <file>ActiveEntityState.h</file>
    <file>AICommand.cpp</file>
    <file>AICommand.h</file>
    <file>AIManager.cpp</file>
    <file>AIManager.h</file>
    <file>AIState.cpp</file>
    <file>AIState.h</file>
    <file>AllyState.cpp</file>
    <file>AllyState.h</file>
    <file>BazaarState.cpp</file>
    <file>BazaarState.h</file>
    <file>ChannelClientConnection.cpp</file>
    <file>ChannelClientConnection.h</file>
    <file>ChannelServer.cpp</file>
    <file>ChannelServer.h</file>
    <file>ChannelSyncManager.cpp</file>
    <file>ChannelSyncManager.h</file>
    <file>CharacterManager.cpp</file>
    <file>CharacterManager.h</file>
    <file>CharacterState.cpp</file>
    <file>CharacterState.h</file>
    <file>ChatManager.cpp</file>
    <file>ChatManager.h</file>
    <file>ClientState.cpp</file>
    <file>ClientState.h</file>
    <file>CultureMachineState.cpp</file>
    <file>CultureMachineState.h</file>
    <file>DemonState.cpp</file>
    <file>DemonState.h</file>
    <file>EnemyState.cpp</file>
    <file>EnemyState.h</file>
    <file>EntityState.cpp</file>
    <file>EntityState.h</file>
    <file>EventManager.cpp</file>
    <file>EventManager.h</file>
    <file>FusionManager.cpp</file>
    <file>FusionManager.h</file>
    <file>FusionTables.cpp</file>
    <file>FusionTables.h</file>
    <file>main.cpp</file>
    <file>ManagerClientPacket.cpp</file>
    <file>ManagerClientPacket.h</file>
    <file>ManagerConnection.cpp</file>
    <file>ManagerConnection.h</file>
    <file>ManagerSystem.cpp</file>
    <file>ManagerSystem.h</file>
    <file>MatchManager.cpp</file>
    <file>MatchManager.h</file>
    <file>Packets.h</file>
    <file>PerformanceTimer.cpp</file>
    <file>PerformanceTimer.h</file>
    <file>PlasmaState.cpp</file>
    <file>PlasmaState.h</file>
    <file>SkillManager.cpp</file>
    <file>SkillManager.h</file>
    <file>TokuseiManager.cpp</file>
    <file>TokuseiManager.h</file>
    <file>WorldClock.cpp</file>
    <file>WorldClock.h</file>
    <file>Zone.cpp</file>
    <file>Zone.h</file>
    <file>ZoneGeometry.cpp</file>
    <file>ZoneGeometry.h</file>
    <file>ZoneGeometryLoader.cpp</file>
    <file>ZoneGeometryLoader.h</file>
    <file>ZoneInstance.cpp</file>
    <file>ZoneInstance.h</file>
    <file>ZoneManager.cpp</file>
    <file>ZoneManager.h</file>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>server/channel - A world&apos;s channel server</title>
    <filename>index</filename>
    <docanchor file="index" title="Starting the server">setup</docanchor>
  </compound>
</tagfile>
